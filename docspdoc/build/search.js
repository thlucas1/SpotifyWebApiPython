window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "__init__", "modulename": "__init__", "kind": "module", "doc": "<h1 class=\"modulename\">\nSpotify Web API Python3 Library\n</h1>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>This API provides Python programmers the ability to retrieve information from the Spotify Web API from any program written in Python 3.  It also allows player control via Spotify Connect devices.</p>\n\n<p>More information about the Spotify Web API can be found on the <a href=\"https://developer.spotify.com/documentation/web-api\" target=\"_blank\">Spotify Developer Portal page</a>.</p>\n\n<p><em>IMPORTANT</em>\nThis API assumes you will adhere to all of the terms set forth in the <a href=\"https://developer.spotify.com/terms\" target=\"_blank\">Spotify Developer Terms of Use</a>.  The developers of this API are not responsible for misuse of the underlying Spotify Web API.</p>\n\n<h2 id=\"features\">Features</h2>\n\n<p>This API supports all of the features of the Spotify Web API including access to all end points, and support for user authorization with scope(s).  Check out the <a href=\"https://developer.spotify.com/documentation/web-api\">Spotify Web API documentation</a> page for more details.</p>\n\n<p>The following features are supported by this API.</p>\n\n<ul>\n<li>Authorization: Token generation (Authorization Code, Authorization Code PKCE, Client Credentials) with Scope(s), auto token storage and renewal.</li>\n<li>Albums: Get Album(s), Get Album Tracks, User Favorites (Get,Add,Remove,Check), Get New Releases.</li>\n<li>Artists: Get Artist(s), Get Artist's Albums, Get Artist's Top Tracks, Get Related Artists.</li>\n<li>Audiobooks: Get Audiobook(s), Get Audiobook Chapters, User Favorites (Get,Add,Remove,Check).</li>\n<li>Categories: Get Several Browse Categories, Get Single Browse Category.</li>\n<li>Chapters: Get a Chapter, Get Several Chapters.</li>\n<li>Episodes: Get Episode(s), User Favorites (Get,Add,Remove,Check).</li>\n<li>Genres: Get Available Genre Seeds.</li>\n<li>Markets: Get Available Markets.</li>\n<li>Player: Get Playback State, Transfer Playback, Get Available Devices, Get Currently Playing Track, Start/Resume/Pause/Skip/Seek/Repeat/Shuffle/Volume Playback, Get Recently Played Tracks, Get the User's Queue, Add Item to Playback Queue.</li>\n<li>Playlists: Get Playlist(s), Change Playlist Details, Get/Update/Add/Remove Playlist Items, Get Favorites, Get User's Playlists, Create Playlist, Get Featured Playlists, Get Category's Playlists, Get Playlist Cover Image, Add Custom Playlist Cover Image</li>\n<li>Search: Search for Albums/Artists/Audiobooks/Episodes/Playlists/Shows/Tracks.</li>\n<li>Shows: Get Show(s), Get Show Episodes, User Favorites (Get,Add,Remove,Check).</li>\n<li>Tracks: Get Track(s), User Favorites (Get,Add,Remove,Check), Get Track(s) Audio Features, Recommendations, Analysis.</li>\n<li>Users: Get Current/Another User's Profile, Get Top Items, Favorites (Follow,Unfollow,Check) Artists/Playlist/Users.</li>\n<li>Supports caching of rarely changed configuration data: Categories, Devices, Genres, Markets, UserProfile, etc.</li>\n<li>... and more</li>\n</ul>\n\n<h2 id=\"requirements-and-dependencies\">Requirements and Dependencies</h2>\n\n<p>The following requirements must be met in order to utilize this API:</p>\n\n<ul>\n<li>You must have a Spotify account (free or premium).  Note that some API functions require a PREMIUM account in order to work.  Check the <a href=\"https://developer.spotify.com/documentation/web-api/reference/transfer-a-users-playback\">Spotify Developer Documentation</a> pages for more details.</li>\n<li>You will need to create a Spotify App in order to access the Spotify Web API.  An App provides the Client ID and Client Secret needed to request an access token by implementing any of the OAuth2 authorization flows.  More information about creating an application can be found on the Spotify <a href=\"https://developer.spotify.com/documentation/web-api/tutorials/getting-started\">Getting started with Web API</a> page.</li>\n</ul>\n\n<p>The following Python-related requirements must be met in order to utilize this API:</p>\n\n<ul>\n<li>Python 3.4 or greater (Python 2 not supported).</li>\n<li>oauthlib (==3.2.2) - for OAuth support.</li>\n<li>platformdirs (==4.1.0) - for platform dependent directory support.</li>\n<li>smartinspectPython (==3.0.30) - for diagnostics and logging support.</li>\n<li>requests (==2.31.0) - for web service request support.</li>\n<li>requests_oauthlib (==1.3.1) - for OAuth support.</li>\n<li>urllib3 (==2.1.0) - for web service request support.</li>\n</ul>\n\n<h2 id=\"documentation\">Documentation</h2>\n\n<p>Documentation is located in the package library under the 'docs' folder; use the index.html as your starting point. \nYou can also view the latest docs on the <a href=\"https://spotifywebapipython.readthedocs.io/en/latest/__init__.html\" target=\"_blank\">readthedocs web-site</a>.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<p>This module can be easily installed via pip:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$<span class=\"w\"> </span>python3<span class=\"w\"> </span>-m<span class=\"w\"> </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>spotifywebapipython\n</code></pre>\n</div>\n\n<h2 id=\"quick-start-sample-code\">Quick-Start Sample Code</h2>\n\n<p>Almost every method is documented with sample code; just click on the \"Sample Code\" links under the method, and use the \"Copy to Clipboard\" functionality to copy / paste.</p>\n\n<p>Check out the following classes to get you started:</p>\n\n<ul>\n<li><code>spotifywebapipython.spotifyclient.SpotifyClient</code> - main client class.</li>\n</ul>\n\n<h2 id=\"licensing\">Licensing</h2>\n\n<p>This project is licensed and distributed under the terms of the MIT End-User License Agreement (EULA) license.</p>\n\n<h2 id=\"logging-tracing-support\">Logging / Tracing Support</h2>\n\n<p>The SmartInspectPython package (installed with this package) can be used to easily debug your applications that utilize this API.</p>\n\n<p>The following topics and code samples will get you started on how to enable logging support. <br />\nNote that logging support can be turned on and off without changing code or restarting the application. <br />\nClick on the topics below to expand the section and reveal more information.  </p>\n\n<p><details>\n  <summary>Configure Logging Support Settings File</summary>\n  <br/>\n  Add the following lines to a new file (e.g. \"smartinspect.cfg\") in your application startup / test directory. <br />\n  Note the file name can be whatever you like, just specify it on the call to <code>SiAuto.Si.LoadConfiguration()</code> when initializing the logger.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\">; smartinspect.cfg</span>\n\n<span class=\"c1\">; SmartInspect Logging Configuration General settings.</span>\n<span class=\"c1\">; - &quot;Enabled&quot; parameter to turn logging on (True) or off (False).</span>\n<span class=\"c1\">; - &quot;Level&quot; parameter to control the logging level (Debug|Verbose|Message|Warning|Error).</span>\n<span class=\"c1\">; - &quot;AppName&quot; parameter to control the application name.</span>\n<span class=\"na\">Enabled</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">False</span><span class=\"w\"> </span>\n<span class=\"na\">Level</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">Verbose</span>\n<span class=\"na\">DefaultLevel</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">Debug</span>\n<span class=\"na\">AppName</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">My Application Name</span>\n\n<span class=\"c1\">; SmartInspect Logging Configuration Output settings.</span>\n<span class=\"c1\">; - Log to SmartInspect Console Viewer running on the specified network address.</span>\n<span class=\"na\">Connections</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">tcp(host=192.168.1.1,port=4228,timeout=5000,reconnect=true,reconnect.interval=10s,async.enabled=true)</span>\n<span class=\"c1\">; - Log to a file, keeping 14 days worth of logs.</span>\n<span class=\"c1\">;Connections = &quot;file(filename=\\&quot;./tests/logfiles/logfile.log\\&quot;, rotate=daily, maxparts=14, append=true)&quot;</span>\n<span class=\"c1\">; - Log to an encrypted file, keeping 14 days worth of logs.</span>\n<span class=\"c1\">;Connections = &quot;file(filename=\\&quot;./tests/logfiles/logfileEncrypted.sil\\&quot;, encrypt=true, key=&quot;&quot;1234567890123456&quot;&quot;, rotate=daily, maxparts=14, append=true)&quot;</span>\n\n<span class=\"c1\">; set defaults for new sessions</span>\n<span class=\"c1\">; note that session defaults do not apply to the SiAuto.Main session, since</span>\n<span class=\"c1\">; this session was already added before a configuration file can be loaded. </span>\n<span class=\"c1\">; session defaults only apply to newly added sessions and do not affect existing sessions.</span>\n<span class=\"na\">SessionDefaults.Active</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">True</span>\n<span class=\"na\">SessionDefaults.Level</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">Message</span>\n<span class=\"na\">SessionDefaults.ColorBG</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">0xFFFFFF</span>\n\n<span class=\"c1\">; configure some individual session properties.</span>\n<span class=\"c1\">; note that this does not add the session to the sessionmanager; it simply</span>\n<span class=\"c1\">; sets the property values IF the session name already exists.</span>\n<span class=\"na\">Session.Main.Active</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">True</span>\n<span class=\"na\">Session.Main.ColorBG</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">0xFFFFFF</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<p><details>\n  <summary>Initialize Logging Support, MAIN module</summary>\n  <br/>\n  Add the following lines to your program startup module. <br />\n  This will import the necessary package modules, and initialize logging support. <br />\n  NOTE - This code should only be executed one time!  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># load SmartInspect settings from a configuration settings file.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">smartinspectpython.siauto</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">siConfigPath</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;./tests/smartinspect.cfg&quot;</span>\n<span class=\"n\">SIAuto</span><span class=\"o\">.</span><span class=\"n\">Si</span><span class=\"o\">.</span><span class=\"n\">LoadConfiguration</span><span class=\"p\">(</span><span class=\"n\">siConfigPath</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># start monitoring the configuration file for changes, and reload it when it changes.</span>\n<span class=\"c1\"># this will check the file for changes every 60 seconds.</span>\n<span class=\"n\">siConfig</span><span class=\"p\">:</span><span class=\"n\">SIConfigurationTimer</span> <span class=\"o\">=</span> <span class=\"n\">SIConfigurationTimer</span><span class=\"p\">(</span><span class=\"n\">SIAuto</span><span class=\"o\">.</span><span class=\"n\">Si</span><span class=\"p\">,</span> <span class=\"n\">siConfigPath</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get smartinspect logger reference.</span>\n<span class=\"n\">_logsi</span><span class=\"p\">:</span><span class=\"n\">SISession</span> <span class=\"o\">=</span> <span class=\"n\">SIAuto</span><span class=\"o\">.</span><span class=\"n\">Main</span>\n\n<span class=\"c1\"># log system environment and application startup parameters.</span>\n<span class=\"n\">_logsi</span><span class=\"o\">.</span><span class=\"n\">LogSeparator</span><span class=\"p\">(</span><span class=\"n\">SILevel</span><span class=\"o\">.</span><span class=\"n\">Fatal</span><span class=\"p\">)</span>\n<span class=\"n\">_logsi</span><span class=\"o\">.</span><span class=\"n\">LogAppDomain</span><span class=\"p\">(</span><span class=\"n\">SILevel</span><span class=\"o\">.</span><span class=\"n\">Verbose</span><span class=\"p\">)</span>\n<span class=\"n\">_logsi</span><span class=\"o\">.</span><span class=\"n\">LogSystem</span><span class=\"p\">(</span><span class=\"n\">SILevel</span><span class=\"o\">.</span><span class=\"n\">Verbose</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<p><details>\n  <summary>Initialize Logging Support, CLASS or sub-modules</summary>\n  <br/>\n  Add the following lines to your program supporting modules. <br />\n  This will import the necessary package modules, and initialize the shared logging session.  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># get smartinspect logger reference.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">smartinspectpython.siauto</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">_logsi</span><span class=\"p\">:</span><span class=\"n\">SISession</span> <span class=\"o\">=</span> <span class=\"n\">SIAuto</span><span class=\"o\">.</span><span class=\"n\">Main</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<p><details>\n  <summary>More Information on SmartInspect</summary>\n  <br/>\n  You can use SmartInspectPython by itself to create log files for your own applications. <br />\n  Use the following PIP command to install the SmartInspectPython package from PyPi.org: <br />\n  <div class=\"pdoc-code codehilite\">\n  <pre><span></span><code>$<span class=\"w\"> </span>python3<span class=\"w\"> </span>-m<span class=\"w\"> </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>smartinspectpython\n  </code></pre>\n  </div></p>\n\n<p>The SmarrtInspect Redistributable Console Viewer (free) is required to view SmartInspect Log (.sil) formatted log files, as well capture packets via the TcpProtocol or PipeProtocol connections.  The Redistributable Console Viewer can be downloaded from the <a href=\"https://code-partners.com/offerings/smartinspect/releases/\" target=\"_blank\">Code-Partners Software Downloads Page</a>. Note that the \"Redistributable Console Viewer\" is a free product, while the \"SmartInspect Full Setup\" is the Professional level viewer that adds a few more bells and whistles for a fee.  Also note that a Console Viewer is NOT required to view plain text (non .sil) formatted log files.\n</details></p>\n\n<h2 id=\"contributing\">Contributing</h2>\n\n<p>Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are <strong>greatly appreciated</strong>.</p>\n\n<p>If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".</p>\n\n<ol>\n<li>Fork the Project</li>\n<li>Create your Feature Branch  <code>git checkout -b feature/AmazingFeature</code></li>\n<li>Commit your Changes  <code>git commit -m 'Add some AmazingFeature'</code></li>\n<li>Push to the Branch  <code>git push origin feature/AmazingFeature</code></li>\n<li>Open a Pull Request</li>\n</ol>\n\n<hr />\n\n<p><details>\n  <summary>View Change Log</summary></p>\n\n<h2 id=\"change-log\">Change Log</h2>\n\n<p>All notable changes to this project are listed here.  </p>\n\n<p>Change are listed in reverse chronological order (newest to oldest).  </p>\n\n<p><span class=\"changelog\"></p>\n\n<h6 id=\"1028-20240221\">[ 1.0.28 ] - 2024/02/21</h6>\n\n<ul>\n<li>Added <code>SpotifyClient.SearchAlbums</code> method to search Spotify for matching Album criteria.</li>\n<li>Added <code>SpotifyClient.SearchArtists</code> method to search Spotify for matching Artist criteria.</li>\n<li>Added <code>SpotifyClient.SearchAudiobooks</code> method to search Spotify for matching Audiobook criteria.</li>\n<li>Added <code>SpotifyClient.SearchEpisodes</code> method to search Spotify for matching Episode criteria.</li>\n<li>Added <code>SpotifyClient.SearchPlaylists</code> method to search Spotify for matching Playlist criteria.</li>\n<li>Added <code>SpotifyClient.SearchShows</code> method to search Spotify for matching Show criteria.</li>\n<li>Added <code>SpotifyClient.SearchTracks</code> method to search Spotify for matching Track criteria.</li>\n<li>Updated <code>SpotifyClient</code> methods to add auto-pagination to retrieve ALL available items (or up to a limit total).  Methods modified were: <code>GetAlbumFavorites</code>, <code>GetAlbumNewReleases</code>, <code>GetArtistAlbums</code>, <code>GetArtistsFollowed</code>, <code>GetCategoryPlaylists</code>, <code>GetFeaturedPlaylists</code>, <code>GetPlaylistFavorites</code>, <code>GetPlaylistsForUser</code>, <code>GetPlaylistItems</code>, <code>GetAlbumTracks</code>, <code>GetAudiobookChapters</code>, <code>GetAudiobookFavorites</code>, <code>GetBrowseCategorys</code>, <code>GetEpisodeFavorites</code>, <code>GetShowEpisodes</code>, <code>GetShowFavorites</code>, <code>GetTrackFavorites</code>, <code>GetUsersTopArtists</code>, <code>GetUsersTopTracks</code>.</li>\n<li>Renamed <code>SpotifyClient.GetBrowseCategorys</code> method to <code>GetBrowseCategorysList</code>.</li>\n<li>Renamed <code>SpotifyClient.GetBrowseCategorysByPage</code> method to <code>GetBrowseCategorys</code>.</li>\n<li>Added <code>Category.Uri</code> property to simulate a Spotify-like Uri value for a category.  This is a helper property - no value with this name is returned from the Spotify Web API.</li>\n<li>Updated <code>PageObject</code> model with property setters for the <code>CursorBefore</code>, <code>CursorAfter</code>, <code>Limit</code>, <code>Offset</code> and <code>Total</code> properties.  This allows a user to modify the values when performing custom paging operations.</li>\n<li>Updated all <code>SpotifyClient</code> methods that utilize a <code>market</code> argument to ensure that a market value was either supplied or implied (using an authorization access token with a user profile).  The Spotify Web API was returning null results for some methods that did not supply a market value while using a public access token (e.g. no country code default).</li>\n</ul>\n\n<h6 id=\"1027-20240220\">[ 1.0.27 ] - 2024/02/20</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient.GetPlayerRecentTracks</code> method to retrieve the last 24 hours of play history if neither <code>after</code> or <code>before</code> arguments were specified.</li>\n</ul>\n\n<h6 id=\"1026-20240215\">[ 1.0.26 ] - 2024/02/15</h6>\n\n<ul>\n<li>Added <code>SpotifyClient.ToString</code> method to display a string representation of the class.</li>\n<li>Added <code>SpotifyClient.ConfigurationCache</code> property to store static configuration objects.</li>\n<li>Added <code>SpotifyClient.ClearConfigurationCache</code> method to clear the configuration cache.</li>\n<li>Updated <code>SpotifyClient</code> methods to add returned results to the <code>ConfigurationCache</code> for faster access: <code>GetBrowseCategory</code>, <code>GetBrowseCategorys</code>, <code>GetGenres</code>, <code>GetMarkets</code>, <code>GetPlayerDevice</code>, <code>GetPlayerDevices</code>, <code>GetUsersCurrentProfile</code>.  This increases performance when accessing Spotify information that rarely changes.</li>\n</ul>\n\n<h6 id=\"1025-20240210\">[ 1.0.25 ] - 2024/02/10</h6>\n\n<ul>\n<li>Updated urllib3 requirements to \"urllib3>=1.21.1,&lt;1.27\", to ensure urllib3 version 2.0 is not used.  Home Assistant requires urllib3 version less than 2.  This was causing intermittent issues with calling requests resulting in **kwargs errors when used in Home Assistant!</li>\n</ul>\n\n<h6 id=\"1024-20240210\">[ 1.0.24 ] - 2024/02/10</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient.MakeRequest</code> method to pass ALL parameters in the various request methods.  Prior to this fix, there were urllib3 request issues with **KWARGS while using the api in a Home Assistant integration.</li>\n</ul>\n\n<h6 id=\"1023-20240209\">[ 1.0.23 ] - 2024/02/09</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient.MakeRequest</code> method to use json library to create JSON request body, instead of the urllib3 <code>request(...,json=...)</code> method.  The urllib3 <code>request</code> class seems to have issues processing json data.</li>\n</ul>\n\n<h6 id=\"1022-20240209\">[ 1.0.22 ] - 2024/02/09</h6>\n\n<ul>\n<li>Added <code>SpotifyClient.GetIdFromUri</code> method to return the Id portion of a Uri value.</li>\n<li>Added <code>SpotifyClient.GetTypeFromUri</code> method to return the Type portion of a Uri value.</li>\n<li>Updated <code>SpotifyClient.GetPlayerDevice</code> method to return a selected device by id or name.</li>\n<li>Added <code>SpotifyDiscovery</code> class that discovers Spotify Connect devices via Zeroconf.</li>\n<li>Updated <code>UserProfileSimplified</code> method to default the <code>DisplayName</code> property to the <code>Id</code> property value if a display name was not set.</li>\n</ul>\n\n<h6 id=\"1021-20240208\">[ 1.0.21 ] - 2024/02/08</h6>\n\n<ul>\n<li>Added <code>SearchResponse.GetSpotifyOwnedPlaylists</code> method that gets a list of all playlist items in the underlying search response that have an owner of <code>spotify:user:spotify</code>.  These are playlists that are generated for you by the spotify ai engine.</li>\n<li>Added <code>additionalTypes</code> argument to <code>SpotifyClient.GetPlayerPlaybackState</code> method.</li>\n<li>Added <code>additionalTypes</code> argument to <code>SpotifyClient.GetPlayerNowPlaying</code> method.</li>\n<li>Updated <code>SpotifyClient.GetPlayerDevices</code> method to return the list of devices in sorted order by Name.</li>\n</ul>\n\n<h6 id=\"1020-20240207\">[ 1.0.20 ] - 2024/02/07</h6>\n\n<ul>\n<li>Added <code>PlayHistoryPage.GetTracks</code> method that gets a list of all tracks contained in the underlying <code>PlayHistory</code> list.  This is a convenience method so one does not have to loop through the <code>PlayHistory</code> array of <code>Track</code> objects to get the list of tracks.</li>\n</ul>\n\n<h6 id=\"1019-20240207\">[ 1.0.19 ] - 2024/02/07</h6>\n\n<ul>\n<li>Updated <code>TrackPageSaved</code> model to parse a <code>Track</code> object instead of a <code>TrackSimplified</code> object.  The <code>Track</code> object contains the extra <code>Album</code>, <code>ExternalIds</code> and <code>Popularity</code> properties.</li>\n<li>Updated <code>TrackRecommendations</code> model to parse a <code>Track</code> object instead of a <code>TrackSimplified</code> object.  The <code>Track</code> object contains the extra <code>Album</code>, <code>ExternalIds</code> and <code>Popularity</code> properties.</li>\n<li>Added <code>AlbumPageSaved.GetAlbums</code> method that gets a list of all albums contained in the underlying <code>Items</code> list.  This is a convenience method so one does not have to loop through the <code>Items</code> array of <code>AlbumSaved</code> objects to get the list of albums.</li>\n<li>Added <code>TrackPageSaved.GetTracks</code> method that gets a list of all tracks contained in the underlying <code>Items</code> list.  This is a convenience method so one does not have to loop through the <code>Items</code> array of <code>TrackSaved</code> objects to get the list of tracks.</li>\n<li>Added <code>EpisodePageSaved.GetEpisodes</code> method that gets a list of all episodes contained in the underlying <code>Items</code> list.  This is a convenience method so one does not have to loop through the <code>Items</code> array of <code>EpisodeSaved</code> objects to get the list of episodes.</li>\n<li>Added <code>ShowPageSaved.GetShows</code> method that gets a list of all shows contained in the underlying <code>Items</code> list.  This is a convenience method so one does not have to loop through the <code>Items</code> array of <code>ShowSaved</code> objects to get the list of shows.</li>\n<li>Added an <code>ImageUrl</code> property to all models that have an <code>Images</code> collection.  The new property returns the first image url in the <code>Images</code> list, if images are defined; otherwise, null.  This is a convenience method so one does not have to loop through the <code>Images</code> array of <code>ImageObject</code> objects to get an image url.</li>\n</ul>\n\n<h6 id=\"1018-20240205\">[ 1.0.18 ] - 2024/02/05</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient</code> methods to set the request header authorization key directly, rather than assigning a new dictionary to the value.</li>\n<li>Updated <code>SpotifyClient.MakeRequest</code> method to apply token refresh changes to the request authorization header if present.  Prior to this fix, the request was still referencing the expired token value.</li>\n<li>Added <code>SpotifyAuthToken.HeaderKey</code> property for request header access.</li>\n<li>Added <code>SpotifyAuthToken.HeaderValue</code> property for request header access.</li>\n<li>Removed <code>SpotifyAuthToken.GetHeaders</code> method, as it was no longer required.</li>\n</ul>\n\n<h6 id=\"1017-20240204\">[ 1.0.17 ] - 2024/02/04</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient</code> to correctly support the <code>tokenUpdater</code> callable to update a token for an external provider.</li>\n<li>Updated <code>AuthClient</code> to correctly support the <code>tokenUpdater</code> callable to update a token for an external provider.</li>\n</ul>\n\n<h6 id=\"1016-20240202\">[ 1.0.16 ] - 2024/02/02</h6>\n\n<ul>\n<li>Updated numerous classes with a <code>ToDictionary</code> method to allow dictionary representation of data.</li>\n</ul>\n\n<h6 id=\"1015-20240202\">[ 1.0.15 ] - 2024/02/02</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient</code> methods with better logging information.</li>\n<li>Updated <code>AuthClient</code> methods with better logging information.</li>\n</ul>\n\n<h6 id=\"1014-20240201\">[ 1.0.14 ] - 2024/02/01</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient</code> methods to add basic validation for required parameter values.</li>\n</ul>\n\n<h6 id=\"1013-20240201\">[ 1.0.13 ] - 2024/02/01</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient._CheckResponseForErrors</code> method to use json library to parse JSON response, instead of the urllib3 <code>HTTPResponse.json()</code> method.  The urllib3 <code>HTTPResponse</code> class can return missing attributes and methods when processing redirects.</li>\n</ul>\n\n<h6 id=\"1012-20240201\">[ 1.0.12 ] - 2024/02/01</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient._CheckResponseForErrors</code> method with better logging information.</li>\n</ul>\n\n<h6 id=\"1011-20240201\">[ 1.0.11 ] - 2024/02/01</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient._CheckResponseForErrors</code> method with better logging information.</li>\n</ul>\n\n<h6 id=\"1010-20240201\">[ 1.0.10 ] - 2024/02/01</h6>\n\n<ul>\n<li>Added <code>SpotifyClient.SetAuthTokenFromToken</code> method to allow the authorization token to be used from an existing OAuth2 token.</li>\n<li>Removed <code>SpotifyClient.SetAuthTokenFromSession</code> method in favor of the <code>SetAuthTokenFromToken</code> method.</li>\n<li>Updated scope processing to pass a space-delimited string of scopes instead of an array of strings.  It appears that the Spotify Web API will accept both, but API documentation states that a space-delimited string is preferred.</li>\n</ul>\n\n<h6 id=\"109-20240131\">[ 1.0.9 ] - 2024/01/31</h6>\n\n<ul>\n<li>Updated <code>SpotifyClient.SetAuthTokenFromSession</code> method to correct a bug related to Home Assistant OAuth2Session object.</li>\n</ul>\n\n<h6 id=\"108-20240131\">[ 1.0.8 ] - 2024/01/31</h6>\n\n<ul>\n<li>Added <code>SpotifyClient.SetAuthTokenFromSession</code> method to allow the authorization token to be used from an existing OAuth2Session.</li>\n</ul>\n\n<h6 id=\"107-20240129\">[ 1.0.7 ] - 2024/01/29</h6>\n\n<ul>\n<li>Allow customization of the redirect uri host and port values in the token authorization process.</li>\n</ul>\n\n<h6 id=\"106-20240129\">[ 1.0.6 ] - 2024/01/29</h6>\n\n<ul>\n<li>Changed urllib3 requirements to a non-specific version so it could run with Home Assistant addons.</li>\n</ul>\n\n<h6 id=\"105-20240129\">[ 1.0.5 ] - 2024/01/29</h6>\n\n<ul>\n<li>Changed Development Status to 5 - Production / Stable.</li>\n</ul>\n\n<h6 id=\"104-20240129\">[ 1.0.4 ] - 2024/01/29</h6>\n\n<ul>\n<li>Removed invalid requirement from setup.py.</li>\n</ul>\n\n<h6 id=\"103-20240129\">[ 1.0.3 ] - 2024/01/29</h6>\n\n<ul>\n<li>Added <code>SpotifyAuthToken.ProfileId</code> property that indicates the token profile that was loaded.</li>\n</ul>\n\n<h6 id=\"102-20240129\">[ 1.0.2 ] - 2024/01/29</h6>\n\n<ul>\n<li>Corrected the <code>SpotifyClient.GetTrackRecommendations</code> method to process the <code>market</code>, <code>maxSpeechiness</code>, and <code>targetSpeechiness</code> arguments correctly.</li>\n<li>Updated <code>SpotifyClient.SetAuthTokenAuthorizationCode</code> method to use a 120 second timeout value while waiting for an authorize response from the user.</li>\n<li>Updated <code>SpotifyClient.SetAuthTokenAuthorizationCodePkce</code> method to use a 120 second timeout value while waiting for an authorize response from the user.</li>\n</ul>\n\n<h6 id=\"101-20240117\">[ 1.0.1 ] - 2024/01/17</h6>\n\n<ul>\n<li>Version 1 initial release.</li>\n</ul>\n\n<p></span>\n</details></p>\n"}, {"fullname": "spotifywebapipython.models.album", "modulename": "spotifywebapipython.models.album", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.album.Album", "modulename": "spotifywebapipython.models.album", "qualname": "Album", "kind": "class", "doc": "<p>Spotify Web API Album object.</p>\n", "bases": "spotifywebapipython.models.albumsimplified.AlbumSimplified"}, {"fullname": "spotifywebapipython.models.album.Album.__init__", "modulename": "spotifywebapipython.models.album", "qualname": "Album.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.album.Album.Copyrights", "modulename": "spotifywebapipython.models.album", "qualname": "Album.Copyrights", "kind": "variable", "doc": "<p>The copyright statements of the album.</p>\n", "annotation": ": list[spotifywebapipython.models.copyright.Copyright]"}, {"fullname": "spotifywebapipython.models.album.Album.ExternalIds", "modulename": "spotifywebapipython.models.album", "qualname": "Album.ExternalIds", "kind": "variable", "doc": "<p>Known external IDs for the album.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.album.Album.Genres", "modulename": "spotifywebapipython.models.album", "qualname": "Album.Genres", "kind": "variable", "doc": "<p>A list of the genres the album is associated with. If not yet classified, the array is empty.  </p>\n\n<p>Example: <code>[\"Egg punk\",\"Noise rock\"]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.album.Album.Label", "modulename": "spotifywebapipython.models.album", "qualname": "Album.Label", "kind": "variable", "doc": "<p>The label associated with the album.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.album.Album.Popularity", "modulename": "spotifywebapipython.models.album", "qualname": "Album.Popularity", "kind": "variable", "doc": "<p>The popularity of the album.  </p>\n\n<p>The value will be between 0 and 100, with 100 being the most popular.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.album.Album.Tracks", "modulename": "spotifywebapipython.models.album", "qualname": "Album.Tracks", "kind": "variable", "doc": "<p>The tracks of the album.</p>\n\n<p>This is a <code>TrackPageSimplified</code> object, meaning only 50 tracks max are listed per request.</p>\n", "annotation": ": spotifywebapipython.models.trackpagesimplified.TrackPageSimplified"}, {"fullname": "spotifywebapipython.models.album.Album.ToDictionary", "modulename": "spotifywebapipython.models.album", "qualname": "Album.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.album.Album.ToString", "modulename": "spotifywebapipython.models.album", "qualname": "Album.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.albumpagesaved", "modulename": "spotifywebapipython.models.albumpagesaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.albumpagesaved.AlbumPageSaved", "modulename": "spotifywebapipython.models.albumpagesaved", "qualname": "AlbumPageSaved", "kind": "class", "doc": "<p>Spotify Web API AlbumPageSaved object.</p>\n\n<p>This allows for multiple pages of <code>AlbumSaved</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.albumpagesaved.AlbumPageSaved.__init__", "modulename": "spotifywebapipython.models.albumpagesaved", "qualname": "AlbumPageSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.albumpagesaved.AlbumPageSaved.Items", "modulename": "spotifywebapipython.models.albumpagesaved", "qualname": "AlbumPageSaved.Items", "kind": "variable", "doc": "<p>Array of <code>AlbumSaved</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.albumsaved.AlbumSaved]"}, {"fullname": "spotifywebapipython.models.albumpagesaved.AlbumPageSaved.GetAlbums", "modulename": "spotifywebapipython.models.albumpagesaved", "qualname": "AlbumPageSaved.GetAlbums", "kind": "function", "doc": "<p>Gets a list of all albums contained in the underlying <code>Items</code> list.</p>\n\n<p>This is a convenience method so one does not have to loop through the <code>Items</code>\narray of AlbumSaved objects to get the list of albums.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.albumpagesaved.AlbumPageSaved.ToString", "modulename": "spotifywebapipython.models.albumpagesaved", "qualname": "AlbumPageSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.albumpagesimplified", "modulename": "spotifywebapipython.models.albumpagesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.albumpagesimplified.AlbumPageSimplified", "modulename": "spotifywebapipython.models.albumpagesimplified", "qualname": "AlbumPageSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedAlbumPage object.</p>\n\n<p>This allows for multiple pages of <code>AlbumSimplified</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.albumpagesimplified.AlbumPageSimplified.__init__", "modulename": "spotifywebapipython.models.albumpagesimplified", "qualname": "AlbumPageSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.albumpagesimplified.AlbumPageSimplified.Items", "modulename": "spotifywebapipython.models.albumpagesimplified", "qualname": "AlbumPageSimplified.Items", "kind": "variable", "doc": "<p>Array of <code>AlbumSimplified</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.albumsimplified.AlbumSimplified]"}, {"fullname": "spotifywebapipython.models.albumpagesimplified.AlbumPageSimplified.ToString", "modulename": "spotifywebapipython.models.albumpagesimplified", "qualname": "AlbumPageSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.albumsaved", "modulename": "spotifywebapipython.models.albumsaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.albumsaved.AlbumSaved", "modulename": "spotifywebapipython.models.albumsaved", "qualname": "AlbumSaved", "kind": "class", "doc": "<p>Spotify Web API SavedAlbum object.</p>\n"}, {"fullname": "spotifywebapipython.models.albumsaved.AlbumSaved.__init__", "modulename": "spotifywebapipython.models.albumsaved", "qualname": "AlbumSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.albumsaved.AlbumSaved.AddedAt", "modulename": "spotifywebapipython.models.albumsaved", "qualname": "AlbumSaved.AddedAt", "kind": "variable", "doc": "<p>The date and time the album was saved. </p>\n\n<p>Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero \noffset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an \nalbum release), an additional field indicates the precision; see for example, release_date \nin an album object.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsaved.AlbumSaved.Album", "modulename": "spotifywebapipython.models.albumsaved", "qualname": "AlbumSaved.Album", "kind": "variable", "doc": "<p>Information about the album.</p>\n", "annotation": ": spotifywebapipython.models.album.Album"}, {"fullname": "spotifywebapipython.models.albumsaved.AlbumSaved.ToDictionary", "modulename": "spotifywebapipython.models.albumsaved", "qualname": "AlbumSaved.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.albumsaved.AlbumSaved.ToString", "modulename": "spotifywebapipython.models.albumsaved", "qualname": "AlbumSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.albumsimplified", "modulename": "spotifywebapipython.models.albumsimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified", "kind": "class", "doc": "<p>Spotify Web API Simplified Album object.</p>\n"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.__init__", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.AlbumType", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.AlbumType", "kind": "variable", "doc": "<p>The type of the album.</p>\n\n<p>Allowed values: <code>album</code>, <code>single</code>, <code>compilation</code>.</p>\n\n<p>Example: <code>album</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Artists", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Artists", "kind": "variable", "doc": "<p>The artists of the album.  </p>\n\n<p>Each artist object includes a link in href to more detailed information about the artist.</p>\n", "annotation": ": list[spotifywebapipython.models.artistsimplified.ArtistSimplified]"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.AvailableMarkets", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.AvailableMarkets", "kind": "variable", "doc": "<p>The markets in which the album is available: ISO 3166-1 alpha-2 country codes. </p>\n\n<p>NOTE: an album is considered available in a market when at least 1 of its tracks is available in that market.</p>\n\n<p>Example: <code>[\"CA\",\"BR\",\"IT\"]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for the album.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Href", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the album.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Id", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Id", "kind": "variable", "doc": "<p>The Spotify ID for the album.</p>\n\n<p>Example: <code>2up3OPMp9Tb4dAKM2erWXQ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Images", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Images", "kind": "variable", "doc": "<p>The cover art for the album in various sizes, widest first.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.ImageUrl", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Name", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Name", "kind": "variable", "doc": "<p>The name of the album.  </p>\n\n<p>In case of an album takedown, the value may be an empty string.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.ReleaseDate", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.ReleaseDate", "kind": "variable", "doc": "<p>The date the album was first released.</p>\n\n<p>Example: <code>1981-12</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.ReleaseDatePrecision", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.ReleaseDatePrecision", "kind": "variable", "doc": "<p>The precision with which release_date value is known. <br />\nAllowed values: <code>year</code>, <code>month</code>, <code>day</code>.  </p>\n\n<p>Example: <code>year</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Restrictions", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Restrictions", "kind": "variable", "doc": "<p>Included in the response when a content restriction is applied.</p>\n", "annotation": ": spotifywebapipython.models.restrictions.Restrictions"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.TotalTracks", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.TotalTracks", "kind": "variable", "doc": "<p>The number of tracks in the album.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Type", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>album</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.Uri", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the album.</p>\n\n<p>Example: <code>spotify:album:2up3OPMp9Tb4dAKM2erWXQ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.ToDictionary", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.albumsimplified.AlbumSimplified.ToString", "modulename": "spotifywebapipython.models.albumsimplified", "qualname": "AlbumSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.artist", "modulename": "spotifywebapipython.models.artist", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.artist.Artist", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist", "kind": "class", "doc": "<p>Spotify Web API Artist object.</p>\n", "bases": "spotifywebapipython.models.artistsimplified.ArtistSimplified"}, {"fullname": "spotifywebapipython.models.artist.Artist.__init__", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.artist.Artist.Followers", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.Followers", "kind": "variable", "doc": "<p>Information about the followers of the artist.</p>\n", "annotation": ": spotifywebapipython.models.followers.Followers"}, {"fullname": "spotifywebapipython.models.artist.Artist.Genres", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.Genres", "kind": "variable", "doc": "<p>A list of the genres the artist is associated with; if not yet classified, the array is empty.</p>\n\n<p>Example: <code>[\"Prog rock\",\"Grunge\"]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.artist.Artist.Images", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.Images", "kind": "variable", "doc": "<p>Images of the artist in various sizes, widest first.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.artist.Artist.ImageUrl", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.artist.Artist.Popularity", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.Popularity", "kind": "variable", "doc": "<p>The popularity of the artist. <br />\nThe value will be between 0 and 100, with 100 being the most popular. <br />\nThe artist's popularity is calculated from the popularity of all the artist's tracks.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.artist.Artist.ToDictionary", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.artist.Artist.ToString", "modulename": "spotifywebapipython.models.artist", "qualname": "Artist.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.artistpage", "modulename": "spotifywebapipython.models.artistpage", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.artistpage.ArtistPage", "modulename": "spotifywebapipython.models.artistpage", "qualname": "ArtistPage", "kind": "class", "doc": "<p>Spotify Web API ArtistPage object.</p>\n\n<p>This allows for multiple pages of <code>Artist</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.artistpage.ArtistPage.__init__", "modulename": "spotifywebapipython.models.artistpage", "qualname": "ArtistPage.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.artistpage.ArtistPage.Items", "modulename": "spotifywebapipython.models.artistpage", "qualname": "ArtistPage.Items", "kind": "variable", "doc": "<p>Array of <code>Artist</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.artist.Artist]"}, {"fullname": "spotifywebapipython.models.artistpage.ArtistPage.ToString", "modulename": "spotifywebapipython.models.artistpage", "qualname": "ArtistPage.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.artistsimplified", "modulename": "spotifywebapipython.models.artistsimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedArtist object.</p>\n"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.__init__", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for this artist.</p>\n", "annotation": ": list"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.Href", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the artist.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.Id", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.Id", "kind": "variable", "doc": "<p>The Spotify ID for the artist.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.Name", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.Name", "kind": "variable", "doc": "<p>The name of the artist.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.Type", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>artist</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.Uri", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the artist.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.ToDictionary", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.artistsimplified.ArtistSimplified.ToString", "modulename": "spotifywebapipython.models.artistsimplified", "qualname": "ArtistSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.audiobook", "modulename": "spotifywebapipython.models.audiobook", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.audiobook.Audiobook", "modulename": "spotifywebapipython.models.audiobook", "qualname": "Audiobook", "kind": "class", "doc": "<p>Spotify Web API Audiobook object.</p>\n", "bases": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified"}, {"fullname": "spotifywebapipython.models.audiobook.Audiobook.__init__", "modulename": "spotifywebapipython.models.audiobook", "qualname": "Audiobook.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.audiobook.Audiobook.Chapters", "modulename": "spotifywebapipython.models.audiobook", "qualname": "Audiobook.Chapters", "kind": "variable", "doc": "<p>The chapters of the audiobook.</p>\n\n<p>This is a <code>ChapterPageSimplified</code> object.</p>\n", "annotation": ": spotifywebapipython.models.chapterpagesimplified.ChapterPageSimplified"}, {"fullname": "spotifywebapipython.models.audiobook.Audiobook.ToDictionary", "modulename": "spotifywebapipython.models.audiobook", "qualname": "Audiobook.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.audiobook.Audiobook.ToString", "modulename": "spotifywebapipython.models.audiobook", "qualname": "Audiobook.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.audiobookpagesimplified", "modulename": "spotifywebapipython.models.audiobookpagesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.audiobookpagesimplified.AudiobookPageSimplified", "modulename": "spotifywebapipython.models.audiobookpagesimplified", "qualname": "AudiobookPageSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedAudiobookPage object.</p>\n\n<p>This allows for multiple pages of <code>AudiobookSimplified</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.audiobookpagesimplified.AudiobookPageSimplified.__init__", "modulename": "spotifywebapipython.models.audiobookpagesimplified", "qualname": "AudiobookPageSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.audiobookpagesimplified.AudiobookPageSimplified.Items", "modulename": "spotifywebapipython.models.audiobookpagesimplified", "qualname": "AudiobookPageSimplified.Items", "kind": "variable", "doc": "<p>Array of <code>AudiobookSimplified</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.audiobooksimplified.AudiobookSimplified]"}, {"fullname": "spotifywebapipython.models.audiobookpagesimplified.AudiobookPageSimplified.ToString", "modulename": "spotifywebapipython.models.audiobookpagesimplified", "qualname": "AudiobookPageSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.audiobooksimplified", "modulename": "spotifywebapipython.models.audiobooksimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified", "kind": "class", "doc": "<p>Spotify Web API Simplified Audiobook object.</p>\n"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.__init__", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Authors", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Authors", "kind": "variable", "doc": "<p>The author(s) for the audiobook.</p>\n", "annotation": ": list[spotifywebapipython.models.author.Author]"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.AvailableMarkets", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.AvailableMarkets", "kind": "variable", "doc": "<p>A list of the countries in which the audiobook can be played, identified by \ntheir ISO 3166-1 alpha-2 code.</p>\n\n<p>Example: <code>[\"CA\",\"BR\",\"IT\"]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Copyrights", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Copyrights", "kind": "variable", "doc": "<p>The copyright statements of the audiobook.</p>\n", "annotation": ": list[spotifywebapipython.models.copyright.Copyright]"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Description", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Description", "kind": "variable", "doc": "<p>A description of the audiobook.  </p>\n\n<p>HTML tags are stripped away from this field, use html_description field in case HTML tags are needed.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Edition", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Edition", "kind": "variable", "doc": "<p>The edition of the audiobook.  </p>\n\n<p>Example: <code>Unabridged</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Explicit", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Explicit", "kind": "variable", "doc": "<p>Whether or not the audiobook has explicit content (true = yes it does; false = no it does not OR unknown).</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for the audiobook.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Href", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the audiobook.</p>\n\n<p>Example: <code>https://api.spotify.com/v1/audiobooks/7iHfbu1YPACw6oZPAFJtqe</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.HtmlDescription", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.HtmlDescription", "kind": "variable", "doc": "<p>A description of the audiobook. This field may contain HTML tags.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Id", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Id", "kind": "variable", "doc": "<p>The Spotify ID for the audiobook.</p>\n\n<p>Example: <code>7iHfbu1YPACw6oZPAFJtqe</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Images", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Images", "kind": "variable", "doc": "<p>The cover art for the audiobook in various sizes, widest first.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.ImageUrl", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Languages", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Languages", "kind": "variable", "doc": "<p>A list of the languages used in the audiobook, identified by their ISO 639-1 code.</p>\n\n<p>Example: <code>[fr,en]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.MediaType", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.MediaType", "kind": "variable", "doc": "<p>The media type of the audiobook.</p>\n\n<p>Example: <code>audio</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Name", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Name", "kind": "variable", "doc": "<p>The name of the audiobook.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Narrators", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Narrators", "kind": "variable", "doc": "<p>The narrator(s) for the audiobook.</p>\n", "annotation": ": list[spotifywebapipython.models.narrator.Narrator]"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Publisher", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Publisher", "kind": "variable", "doc": "<p>The publisher of the audiobook.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.TotalChapters", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.TotalChapters", "kind": "variable", "doc": "<p>The number of chapters in the audiobook.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Type", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>audiobook</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.Uri", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the audiobook.</p>\n\n<p>Example: <code>spotify:audiobook:7iHfbu1YPACw6oZPAFJtqe</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.ToDictionary", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.audiobooksimplified.AudiobookSimplified.ToString", "modulename": "spotifywebapipython.models.audiobooksimplified", "qualname": "AudiobookSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.audiofeatures", "modulename": "spotifywebapipython.models.audiofeatures", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures", "kind": "class", "doc": "<p>Spotify Web API AudioFeatures object.</p>\n"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.__init__", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Acousticness", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Acousticness", "kind": "variable", "doc": "<p>A confidence measure from 0.0 to 1.0 of whether the track is acoustic. <br />\n1.0 represents high confidence the track is acoustic. <br />\nExample: <code>0.00242</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.AnalysisUrl", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.AnalysisUrl", "kind": "variable", "doc": "<p>A URL to access the full audio analysis of this track. <br />\nAn access token is required to access this data. <br />\nExample: <code>https://api.spotify.com/v1/audio-analysis/2takcwOaAZWiXQijPHIx7B</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Danceability", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Danceability", "kind": "variable", "doc": "<p>Danceability describes how suitable a track is for dancing based on a combination of musical \nelements including tempo, rhythm stability, beat strength, and overall regularity. <br />\nA value of 0.0 is least danceable and 1.0 is most danceable.\nExample: <code>0.585</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.DurationMS", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.DurationMS", "kind": "variable", "doc": "<p>The duration of the track in milliseconds. <br />\nExample: <code>237040</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Energy", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Energy", "kind": "variable", "doc": "<p>Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. <br />\nTypically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, \nwhile a Bach prelude scores low on the scale. Perceptual features contributing to this attribute \ninclude dynamic range, perceived loudness, timbre, onset rate, and general entropy. <br />\nExample: <code>0.842</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Id", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Id", "kind": "variable", "doc": "<p>The Spotify ID for the track. <br />\nExample: <code>2takcwOaAZWiXQijPHIx7B</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Instrumentalness", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Instrumentalness", "kind": "variable", "doc": "<p>Predicts whether a track contains no vocals. <br />\n\"Ooh\" and \"aah\" sounds are treated as instrumental in this context. Rap or spoken word \ntracks are clearly \"vocal\". The closer the instrumentalness value is to 1.0, the greater \nlikelihood the track contains no vocal content. Values above 0.5 are intended to represent \ninstrumental tracks, but confidence is higher as the value approaches 1.0. <br />\nExample: <code>0.00686</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Key", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Key", "kind": "variable", "doc": "<p>The key the track is in.  </p>\n\n<p>Integers map to pitches using standard Pitch Class notation (e.g. 0 = C, 1 = C#, \n2 = D, and so on).  If no key was detected, the value is -1.  </p>\n\n<p>Range: <code>-1</code> to <code>11</code> <br />\nExample: <code>9</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Liveness", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Liveness", "kind": "variable", "doc": "<p>Detects the presence of an audience in the recording.  Higher liveness values represent \nan increased probability that the track was performed live. A value above 0.8 provides \nstrong likelihood that the track is live.</p>\n\n<p>Example: <code>0.0866</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Loudness", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Loudness", "kind": "variable", "doc": "<p>The overall loudness of a track in decibels (dB).  </p>\n\n<p>Loudness values are averaged across the entire track and are useful for comparing relative \nloudness of tracks. Loudness is the quality of a sound that is the primary psychological \ncorrelate of physical strength (amplitude). Values typically range between -60 and 0 db.  </p>\n\n<p>Example: <code>-5.883</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Mode", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Mode", "kind": "variable", "doc": "<p>Mode indicates the modality (major or minor) of a track, the type of scale from which its \nmelodic content is derived. Major is represented by 1 and minor is 0.  </p>\n\n<p>Example: <code>0</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Speechiness", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Speechiness", "kind": "variable", "doc": "<p>Speechiness detects the presence of spoken words in a track. The more exclusively speech-like \nthe recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. \nValues above 0.66 describe tracks that are probably made entirely of spoken words. <br />\nValues between 0.33 and 0.66 describe tracks that may contain both music and speech, either \nin sections or layered, including such cases as rap music. Values below 0.33 most likely \nrepresent music and other non-speech-like tracks.</p>\n\n<p>Example: <code>0.0556</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Tempo", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Tempo", "kind": "variable", "doc": "<p>The overall estimated tempo of a track in beats per minute (BPM).  </p>\n\n<p>In musical terminology, tempo is the speed or pace of a given piece and derives directly \nfrom the average beat duration.</p>\n\n<p>Example: <code>118.211</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.TimeSignature", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.TimeSignature", "kind": "variable", "doc": "<p>An estimated time signature.  </p>\n\n<p>The time signature (meter) is a notational convention to specify how many beats are in each \nbar (or measure). The time signature ranges from 3 to 7 indicating time signatures of \"3/4\", to \"7/4\".</p>\n\n<p>Range: <code>3</code> to <code>7</code> <br />\nExample: <code>4</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.TrackHref", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.TrackHref", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the track.</p>\n\n<p>Example: <code>https://api.spotify.com/v1/tracks/2takcwOaAZWiXQijPHIx7B</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Type", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Type", "kind": "variable", "doc": "<p>The object type: <code>audio_features</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Uri", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the track.  </p>\n\n<p>Example: <code>spotify:track:2takcwOaAZWiXQijPHIx7B</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.Valence", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.Valence", "kind": "variable", "doc": "<p>A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track.   </p>\n\n<p>Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while \ntracks with low valence sound more negative (e.g. sad, depressed, angry).  </p>\n\n<p>Range: <code>0</code> to <code>1</code> <br />\nExample: <code>0.428</code></p>\n", "annotation": ": float"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.ToDictionary", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.audiofeatures.AudioFeatures.ToString", "modulename": "spotifywebapipython.models.audiofeatures", "qualname": "AudioFeatures.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.author", "modulename": "spotifywebapipython.models.author", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.author.Author", "modulename": "spotifywebapipython.models.author", "qualname": "Author", "kind": "class", "doc": "<p>Spotify Web API Content Author object.</p>\n\n<p>Contains information about content authors.</p>\n"}, {"fullname": "spotifywebapipython.models.author.Author.__init__", "modulename": "spotifywebapipython.models.author", "qualname": "Author.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.author.Author.Name", "modulename": "spotifywebapipython.models.author", "qualname": "Author.Name", "kind": "variable", "doc": "<p>The author name for this content.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.author.Author.ToDictionary", "modulename": "spotifywebapipython.models.author", "qualname": "Author.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.author.Author.ToString", "modulename": "spotifywebapipython.models.author", "qualname": "Author.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.category", "modulename": "spotifywebapipython.models.category", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.category.Category", "modulename": "spotifywebapipython.models.category", "qualname": "Category", "kind": "class", "doc": "<p>Spotify Web API Category object.</p>\n"}, {"fullname": "spotifywebapipython.models.category.Category.__init__", "modulename": "spotifywebapipython.models.category", "qualname": "Category.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.category.Category.Href", "modulename": "spotifywebapipython.models.category", "qualname": "Category.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint returning full details of the category.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.category.Category.Id", "modulename": "spotifywebapipython.models.category", "qualname": "Category.Id", "kind": "variable", "doc": "<p>The Spotify category ID of the category. <br />\nSome ID's are read-able text, while most are a unique id format.</p>\n\n<p>Example: <code>toplists</code> <br />\nExample: <code>0JQ5DAqbMKFDXXwE9BDJAr</code>  (e.g. unique id for <code>Rock</code>)</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.category.Category.Icons", "modulename": "spotifywebapipython.models.category", "qualname": "Category.Icons", "kind": "variable", "doc": "<p>The category icon in various sizes, widest first.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.category.Category.ImageUrl", "modulename": "spotifywebapipython.models.category", "qualname": "Category.ImageUrl", "kind": "variable", "doc": "<p>Gets the first icon url in the <code>Icons</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.category.Category.Name", "modulename": "spotifywebapipython.models.category", "qualname": "Category.Name", "kind": "variable", "doc": "<p>The name of the category.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.category.Category.Uri", "modulename": "spotifywebapipython.models.category", "qualname": "Category.Uri", "kind": "variable", "doc": "<p>A simulated Spotify URI value for the category.</p>\n\n<p>This is a helper property - no value with this name is returned from the\nSpotify Web API.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.category.Category.ToDictionary", "modulename": "spotifywebapipython.models.category", "qualname": "Category.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.category.Category.ToString", "modulename": "spotifywebapipython.models.category", "qualname": "Category.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.categorypage", "modulename": "spotifywebapipython.models.categorypage", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.categorypage.CategoryPage", "modulename": "spotifywebapipython.models.categorypage", "qualname": "CategoryPage", "kind": "class", "doc": "<p>Spotify Web API CategoryPage object.</p>\n\n<p>This allows for multiple pages of <code>Category</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.categorypage.CategoryPage.__init__", "modulename": "spotifywebapipython.models.categorypage", "qualname": "CategoryPage.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.categorypage.CategoryPage.Items", "modulename": "spotifywebapipython.models.categorypage", "qualname": "CategoryPage.Items", "kind": "variable", "doc": "<p>Array of <code>Category</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.category.Category]"}, {"fullname": "spotifywebapipython.models.categorypage.CategoryPage.ToString", "modulename": "spotifywebapipython.models.categorypage", "qualname": "CategoryPage.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.chapter", "modulename": "spotifywebapipython.models.chapter", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.chapter.Chapter", "modulename": "spotifywebapipython.models.chapter", "qualname": "Chapter", "kind": "class", "doc": "<p>Spotify Web API Chapter object.</p>\n", "bases": "spotifywebapipython.models.chaptersimplified.ChapterSimplified"}, {"fullname": "spotifywebapipython.models.chapter.Chapter.__init__", "modulename": "spotifywebapipython.models.chapter", "qualname": "Chapter.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.chapter.Chapter.Audiobook", "modulename": "spotifywebapipython.models.chapter", "qualname": "Chapter.Audiobook", "kind": "variable", "doc": "<p>The audiobook for which the chapter belongs.</p>\n\n<p>This is a <code>AudiobookSimplified</code> object.</p>\n", "annotation": ": spotifywebapipython.models.audiobooksimplified.AudiobookSimplified"}, {"fullname": "spotifywebapipython.models.chapter.Chapter.ToDictionary", "modulename": "spotifywebapipython.models.chapter", "qualname": "Chapter.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.chapter.Chapter.ToString", "modulename": "spotifywebapipython.models.chapter", "qualname": "Chapter.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.chapterpagesimplified", "modulename": "spotifywebapipython.models.chapterpagesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.chapterpagesimplified.ChapterPageSimplified", "modulename": "spotifywebapipython.models.chapterpagesimplified", "qualname": "ChapterPageSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedChapterPage object.</p>\n\n<p>This allows for multiple pages of <code>ChapterSimplified</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.chapterpagesimplified.ChapterPageSimplified.__init__", "modulename": "spotifywebapipython.models.chapterpagesimplified", "qualname": "ChapterPageSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.chapterpagesimplified.ChapterPageSimplified.Items", "modulename": "spotifywebapipython.models.chapterpagesimplified", "qualname": "ChapterPageSimplified.Items", "kind": "variable", "doc": "<p>Array of <code>ChapterSimplified</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.chaptersimplified.ChapterSimplified]"}, {"fullname": "spotifywebapipython.models.chapterpagesimplified.ChapterPageSimplified.ToString", "modulename": "spotifywebapipython.models.chapterpagesimplified", "qualname": "ChapterPageSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.chaptersimplified", "modulename": "spotifywebapipython.models.chaptersimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified", "kind": "class", "doc": "<p>Spotify Web API Simplified Chapter object.</p>\n"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.__init__", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.AudioPreviewUrl", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.AudioPreviewUrl", "kind": "variable", "doc": "<p>A URL to a 30 second preview (MP3 format) of the chapter, or null if not available.</p>\n\n<p>Important policy note:\nSpotify Audio preview clips can not be a standalone service.</p>\n\n<p>Example: <code>https://p.scdn.co/mp3-preview/2f37da1d4221f40b9d1a98cd191f4d6f1646ad17</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.AvailableMarkets", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.AvailableMarkets", "kind": "variable", "doc": "<p>A list of the countries in which the chapter can be played, identified by \ntheir ISO 3166-1 alpha-2 code.</p>\n\n<p>Example: <code>[\"CA\",\"BR\",\"IT\"]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ChapterNumber", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ChapterNumber", "kind": "variable", "doc": "<p>The number of the chapter</p>\n\n<p>Example: <code>1</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Description", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Description", "kind": "variable", "doc": "<p>A description of the chapter.  </p>\n\n<p>HTML tags are stripped away from this field, use html_description field in case HTML tags are needed.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.DurationMS", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.DurationMS", "kind": "variable", "doc": "<p>The chapter length in milliseconds.</p>\n\n<p>Example: <code>1686230</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Explicit", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Explicit", "kind": "variable", "doc": "<p>Whether or not the chapter has explicit content (true = yes it does; false = no it does not OR unknown).</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for the album.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Href", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the chapter.</p>\n\n<p>Example: <code>https://api.spotify.com/v1/chapters/0D5wENdkdwbqlrHoaJ9g29</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.HtmlDescription", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.HtmlDescription", "kind": "variable", "doc": "<p>A description of the chapter. This field may contain HTML tags.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Id", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Id", "kind": "variable", "doc": "<p>The Spotify ID for the chapter.</p>\n\n<p>Example: <code>0D5wENdkdwbqlrHoaJ9g29</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Images", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Images", "kind": "variable", "doc": "<p>The cover art for the chapter in various sizes, widest first.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ImageUrl", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.IsPlayable", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.IsPlayable", "kind": "variable", "doc": "<p>True if the chapter is playable in the given market. Otherwise false.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Languages", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Languages", "kind": "variable", "doc": "<p>A list of the languages used in the chapter, identified by their ISO 639-1 code.</p>\n\n<p>Example: <code>[fr,en]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Name", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Name", "kind": "variable", "doc": "<p>The name of the chapter.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ReleaseDate", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ReleaseDate", "kind": "variable", "doc": "<p>The date the chapter was first released.</p>\n\n<p>Example: <code>1981-12</code> <br />\nDepending on the precision, it might be shown as \"1981\" or \"1981-12\".</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ReleaseDatePrecision", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ReleaseDatePrecision", "kind": "variable", "doc": "<p>The precision with which release_date value is known. <br />\nAllowed values: <code>year</code>, <code>month</code>, <code>day</code>.  </p>\n\n<p>Example: <code>year</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Restrictions", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Restrictions", "kind": "variable", "doc": "<p>Included in the response when a content restriction is applied.</p>\n", "annotation": ": spotifywebapipython.models.restrictions.Restrictions"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ResumePoint", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ResumePoint", "kind": "variable", "doc": "<p>The user's most recent position in the chapter. <br />\nSet if the supplied access token is a user token and has the scope 'user-read-playback-position'.</p>\n", "annotation": ": spotifywebapipython.models.resumepoint.ResumePoint"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Type", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>chapter</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.Uri", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the chapter.</p>\n\n<p>Example: <code>spotify:chapter:0D5wENdkdwbqlrHoaJ9g29</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ToDictionary", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.chaptersimplified.ChapterSimplified.ToString", "modulename": "spotifywebapipython.models.chaptersimplified", "qualname": "ChapterSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.context", "modulename": "spotifywebapipython.models.context", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.context.Context", "modulename": "spotifywebapipython.models.context", "qualname": "Context", "kind": "class", "doc": "<p>Spotify Web API Context object.</p>\n"}, {"fullname": "spotifywebapipython.models.context.Context.__init__", "modulename": "spotifywebapipython.models.context", "qualname": "Context.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.context.Context.ExternalUrls", "modulename": "spotifywebapipython.models.context", "qualname": "Context.ExternalUrls", "kind": "variable", "doc": "<p>External URLs for this context.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.context.Context.Href", "modulename": "spotifywebapipython.models.context", "qualname": "Context.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the track.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.context.Context.Type", "modulename": "spotifywebapipython.models.context", "qualname": "Context.Type", "kind": "variable", "doc": "<p>Object type, such as <code>artist</code>, <code>playlist</code>, <code>album</code> or <code>show</code>.</p>\n\n<p>Example: <code>computer</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.context.Context.Uri", "modulename": "spotifywebapipython.models.context", "qualname": "Context.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the context.</p>\n\n<p>Example: <code>spotify:album:2up3OPMp9Tb4dAKM2erWXQ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.context.Context.ToDictionary", "modulename": "spotifywebapipython.models.context", "qualname": "Context.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.context.Context.ToString", "modulename": "spotifywebapipython.models.context", "qualname": "Context.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.copyright", "modulename": "spotifywebapipython.models.copyright", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.copyright.Copyright", "modulename": "spotifywebapipython.models.copyright", "qualname": "Copyright", "kind": "class", "doc": "<p>Spotify Web API Content Copyright object.</p>\n\n<p>Contains information about content copyrights.</p>\n"}, {"fullname": "spotifywebapipython.models.copyright.Copyright.__init__", "modulename": "spotifywebapipython.models.copyright", "qualname": "Copyright.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.copyright.Copyright.Text", "modulename": "spotifywebapipython.models.copyright", "qualname": "Copyright.Text", "kind": "variable", "doc": "<p>The copyright text for this content.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.copyright.Copyright.Type", "modulename": "spotifywebapipython.models.copyright", "qualname": "Copyright.Type", "kind": "variable", "doc": "<p>The type of copyright: C = the copyright, P = the sound recording (performance) copyright.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.copyright.Copyright.ToDictionary", "modulename": "spotifywebapipython.models.copyright", "qualname": "Copyright.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.copyright.Copyright.ToString", "modulename": "spotifywebapipython.models.copyright", "qualname": "Copyright.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.device", "modulename": "spotifywebapipython.models.device", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.device.Device", "modulename": "spotifywebapipython.models.device", "qualname": "Device", "kind": "class", "doc": "<p>Spotify Web API Device object.</p>\n"}, {"fullname": "spotifywebapipython.models.device.Device.__init__", "modulename": "spotifywebapipython.models.device", "qualname": "Device.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.device.Device.Id", "modulename": "spotifywebapipython.models.device", "qualname": "Device.Id", "kind": "variable", "doc": "<p>The device ID.  </p>\n\n<p>This ID is unique and persistent to some extent. However, this is not guaranteed \nand any cached device_id should periodically be cleared out and refetched as necessary.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.device.Device.IsActive", "modulename": "spotifywebapipython.models.device", "qualname": "Device.IsActive", "kind": "variable", "doc": "<p>If this device is the currently active device.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.device.Device.IsPrivateSession", "modulename": "spotifywebapipython.models.device", "qualname": "Device.IsPrivateSession", "kind": "variable", "doc": "<p>If this device is currently in a private session.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.device.Device.IsRestricted", "modulename": "spotifywebapipython.models.device", "qualname": "Device.IsRestricted", "kind": "variable", "doc": "<p>Whether controlling this device is restricted.  </p>\n\n<p>At present if this is \"true\" then no Web API commands will be accepted by this device.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.device.Device.Name", "modulename": "spotifywebapipython.models.device", "qualname": "Device.Name", "kind": "variable", "doc": "<p>A human-readable name for the device. </p>\n\n<p>Some devices have a name that the user can configure (e.g. \"Loudest speaker\") and some \ndevices have a generic name associated with the manufacturer or device model.</p>\n\n<p>Example: <code>Kitchen speaker</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.device.Device.SupportsVolume", "modulename": "spotifywebapipython.models.device", "qualname": "Device.SupportsVolume", "kind": "variable", "doc": "<p>If this device can be used to set the volume.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.device.Device.Type", "modulename": "spotifywebapipython.models.device", "qualname": "Device.Type", "kind": "variable", "doc": "<p>Device type, such as <code>computer</code>, <code>smartphone</code> or <code>speaker</code>.</p>\n\n<p>Example: <code>computer</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.device.Device.VolumePercent", "modulename": "spotifywebapipython.models.device", "qualname": "Device.VolumePercent", "kind": "variable", "doc": "<p>The current volume in percent.</p>\n\n<p>Range: <code>0 - 100</code>\nExample: <code>59</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.device.Device.ToDictionary", "modulename": "spotifywebapipython.models.device", "qualname": "Device.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.device.Device.ToString", "modulename": "spotifywebapipython.models.device", "qualname": "Device.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episode", "modulename": "spotifywebapipython.models.episode", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.episode.Episode", "modulename": "spotifywebapipython.models.episode", "qualname": "Episode", "kind": "class", "doc": "<p>Spotify Web API Episode object.</p>\n", "bases": "spotifywebapipython.models.episodesimplified.EpisodeSimplified"}, {"fullname": "spotifywebapipython.models.episode.Episode.__init__", "modulename": "spotifywebapipython.models.episode", "qualname": "Episode.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.episode.Episode.Show", "modulename": "spotifywebapipython.models.episode", "qualname": "Episode.Show", "kind": "variable", "doc": "<p>The show on which the episode belongs.</p>\n\n<p>This is a <code>ShowSimplified</code> object.</p>\n", "annotation": ": spotifywebapipython.models.showsimplified.ShowSimplified"}, {"fullname": "spotifywebapipython.models.episode.Episode.ToDictionary", "modulename": "spotifywebapipython.models.episode", "qualname": "Episode.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episode.Episode.ToString", "modulename": "spotifywebapipython.models.episode", "qualname": "Episode.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episodepagesaved", "modulename": "spotifywebapipython.models.episodepagesaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.episodepagesaved.EpisodePageSaved", "modulename": "spotifywebapipython.models.episodepagesaved", "qualname": "EpisodePageSaved", "kind": "class", "doc": "<p>Spotify Web API EpisodePageSaved object.</p>\n\n<p>This allows for multiple pages of <code>EpisodeSaved</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.episodepagesaved.EpisodePageSaved.__init__", "modulename": "spotifywebapipython.models.episodepagesaved", "qualname": "EpisodePageSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.episodepagesaved.EpisodePageSaved.Items", "modulename": "spotifywebapipython.models.episodepagesaved", "qualname": "EpisodePageSaved.Items", "kind": "variable", "doc": "<p>Array of <code>EpisodeSaved</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.episodesaved.EpisodeSaved]"}, {"fullname": "spotifywebapipython.models.episodepagesaved.EpisodePageSaved.GetEpisodes", "modulename": "spotifywebapipython.models.episodepagesaved", "qualname": "EpisodePageSaved.GetEpisodes", "kind": "function", "doc": "<p>Gets a list of all episodes contained in the underlying <code>Items</code> list.</p>\n\n<p>This is a convenience method so one does not have to loop through the <code>Items</code>\narray of EpisodeSaved objects to get the list of episodes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">episode</span><span class=\"o\">.</span><span class=\"n\">Episode</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episodepagesaved.EpisodePageSaved.ToString", "modulename": "spotifywebapipython.models.episodepagesaved", "qualname": "EpisodePageSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episodepagesimplified", "modulename": "spotifywebapipython.models.episodepagesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.episodepagesimplified.EpisodePageSimplified", "modulename": "spotifywebapipython.models.episodepagesimplified", "qualname": "EpisodePageSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedEpisodePage object.</p>\n\n<p>This allows for multiple pages of <code>EpisodeSimplified</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.episodepagesimplified.EpisodePageSimplified.__init__", "modulename": "spotifywebapipython.models.episodepagesimplified", "qualname": "EpisodePageSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.episodepagesimplified.EpisodePageSimplified.Items", "modulename": "spotifywebapipython.models.episodepagesimplified", "qualname": "EpisodePageSimplified.Items", "kind": "variable", "doc": "<p>Array of <code>EpisodeSimplified</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.episodesimplified.EpisodeSimplified]"}, {"fullname": "spotifywebapipython.models.episodepagesimplified.EpisodePageSimplified.ToString", "modulename": "spotifywebapipython.models.episodepagesimplified", "qualname": "EpisodePageSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episodesaved", "modulename": "spotifywebapipython.models.episodesaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.episodesaved.EpisodeSaved", "modulename": "spotifywebapipython.models.episodesaved", "qualname": "EpisodeSaved", "kind": "class", "doc": "<p>Spotify Web API SavedEpisode object.</p>\n"}, {"fullname": "spotifywebapipython.models.episodesaved.EpisodeSaved.__init__", "modulename": "spotifywebapipython.models.episodesaved", "qualname": "EpisodeSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.episodesaved.EpisodeSaved.AddedAt", "modulename": "spotifywebapipython.models.episodesaved", "qualname": "EpisodeSaved.AddedAt", "kind": "variable", "doc": "<p>The date and time the episode was saved. </p>\n\n<p>Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero \noffset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an \nalbum release), an additional field indicates the precision; see for example, release_date \nin an album object.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesaved.EpisodeSaved.Episode", "modulename": "spotifywebapipython.models.episodesaved", "qualname": "EpisodeSaved.Episode", "kind": "variable", "doc": "<p>Information about the episode.</p>\n", "annotation": ": spotifywebapipython.models.episode.Episode"}, {"fullname": "spotifywebapipython.models.episodesaved.EpisodeSaved.ToDictionary", "modulename": "spotifywebapipython.models.episodesaved", "qualname": "EpisodeSaved.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episodesaved.EpisodeSaved.ToString", "modulename": "spotifywebapipython.models.episodesaved", "qualname": "EpisodeSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episodesimplified", "modulename": "spotifywebapipython.models.episodesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified", "kind": "class", "doc": "<p>Spotify Web API Simplified Episode object.</p>\n"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.__init__", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.AudioPreviewUrl", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.AudioPreviewUrl", "kind": "variable", "doc": "<p>A URL to a 30 second preview (MP3 format) of the episode, or null if not available.</p>\n\n<p>Important policy note:\nSpotify Audio preview clips can not be a standalone service.</p>\n\n<p>Example: <code>https://p.scdn.co/mp3-preview/2f37da1d4221f40b9d1a98cd191f4d6f1646ad17</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Description", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Description", "kind": "variable", "doc": "<p>A description of the episode.  </p>\n\n<p>HTML tags are stripped away from this field, use html_description field in case HTML tags are needed.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.DurationMS", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.DurationMS", "kind": "variable", "doc": "<p>The episode length in milliseconds.</p>\n\n<p>Example: <code>1686230</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Explicit", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Explicit", "kind": "variable", "doc": "<p>Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown).</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for the album.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Href", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the episode.</p>\n\n<p>Example: <code>https://api.spotify.com/v1/episodes/5Xt5DXGzch68nYYamXrNxZ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.HtmlDescription", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.HtmlDescription", "kind": "variable", "doc": "<p>A description of the episode. This field may contain HTML tags.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Id", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Id", "kind": "variable", "doc": "<p>The Spotify ID for the episode.</p>\n\n<p>Example: <code>5Xt5DXGzch68nYYamXrNxZ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Images", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Images", "kind": "variable", "doc": "<p>The cover art for the episode in various sizes, widest first.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.ImageUrl", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.IsExternallyHosted", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.IsExternallyHosted", "kind": "variable", "doc": "<p>True if the episode is hosted outside of Spotify's CDN.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.IsPlayable", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.IsPlayable", "kind": "variable", "doc": "<p>True if the episode is playable in the given market. Otherwise false.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Languages", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Languages", "kind": "variable", "doc": "<p>A list of the languages used in the episode, identified by their ISO 639-1 code.</p>\n\n<p>Example: <code>[fr,en]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Name", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Name", "kind": "variable", "doc": "<p>The name of the episode.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.ReleaseDate", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.ReleaseDate", "kind": "variable", "doc": "<p>The date the episode was first released.</p>\n\n<p>Example: <code>1981-12</code> <br />\nDepending on the precision, it might be shown as \"1981\" or \"1981-12\".</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.ReleaseDatePrecision", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.ReleaseDatePrecision", "kind": "variable", "doc": "<p>The precision with which release_date value is known. <br />\nAllowed values: <code>year</code>, <code>month</code>, <code>day</code>.  </p>\n\n<p>Example: <code>year</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Restrictions", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Restrictions", "kind": "variable", "doc": "<p>Included in the response when a content restriction is applied.</p>\n", "annotation": ": spotifywebapipython.models.restrictions.Restrictions"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.ResumePoint", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.ResumePoint", "kind": "variable", "doc": "<p>The user's most recent position in the episode. <br />\nSet if the supplied access token is a user token and has the scope 'user-read-playback-position'.</p>\n", "annotation": ": spotifywebapipython.models.resumepoint.ResumePoint"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Type", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>episode</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.Uri", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the episode.</p>\n\n<p>Example: <code>spotify:episode:0zLhl3WsOCQHbe1BPTiHgr</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.ToDictionary", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.episodesimplified.EpisodeSimplified.ToString", "modulename": "spotifywebapipython.models.episodesimplified", "qualname": "EpisodeSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.explicitcontent", "modulename": "spotifywebapipython.models.explicitcontent", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.explicitcontent.ExplicitContent", "modulename": "spotifywebapipython.models.explicitcontent", "qualname": "ExplicitContent", "kind": "class", "doc": "<p>Spotify Web API Explicit Content object.</p>\n\n<p>Contains information about explicit content settings.</p>\n"}, {"fullname": "spotifywebapipython.models.explicitcontent.ExplicitContent.__init__", "modulename": "spotifywebapipython.models.explicitcontent", "qualname": "ExplicitContent.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.explicitcontent.ExplicitContent.FilterEnabled", "modulename": "spotifywebapipython.models.explicitcontent", "qualname": "ExplicitContent.FilterEnabled", "kind": "variable", "doc": "<p>When true, indicates that explicit content should not be played.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.explicitcontent.ExplicitContent.FilterLocked", "modulename": "spotifywebapipython.models.explicitcontent", "qualname": "ExplicitContent.FilterLocked", "kind": "variable", "doc": "<p>When true, indicates that the explicit content setting is locked and \ncan't be changed by the user.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.explicitcontent.ExplicitContent.ToDictionary", "modulename": "spotifywebapipython.models.explicitcontent", "qualname": "ExplicitContent.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.explicitcontent.ExplicitContent.ToString", "modulename": "spotifywebapipython.models.explicitcontent", "qualname": "ExplicitContent.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.externalids", "modulename": "spotifywebapipython.models.externalids", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.externalids.ExternalIds", "modulename": "spotifywebapipython.models.externalids", "qualname": "ExternalIds", "kind": "class", "doc": "<p>Spotify Web API ExternalIds object.</p>\n\n<p>Contains known external ID's for various object types: artist, track, etc.</p>\n"}, {"fullname": "spotifywebapipython.models.externalids.ExternalIds.__init__", "modulename": "spotifywebapipython.models.externalids", "qualname": "ExternalIds.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.externalids.ExternalIds.Ean", "modulename": "spotifywebapipython.models.externalids", "qualname": "ExternalIds.Ean", "kind": "variable", "doc": "<p>International Article Number.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.externalids.ExternalIds.Isrc", "modulename": "spotifywebapipython.models.externalids", "qualname": "ExternalIds.Isrc", "kind": "variable", "doc": "<p>International Standard Recording Code.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.externalids.ExternalIds.Upc", "modulename": "spotifywebapipython.models.externalids", "qualname": "ExternalIds.Upc", "kind": "variable", "doc": "<p>Universal Product Code.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.externalids.ExternalIds.ToDictionary", "modulename": "spotifywebapipython.models.externalids", "qualname": "ExternalIds.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.externalids.ExternalIds.ToString", "modulename": "spotifywebapipython.models.externalids", "qualname": "ExternalIds.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.externalurls", "modulename": "spotifywebapipython.models.externalurls", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls", "kind": "class", "doc": "<p>Spotify Web API ExternalUrls object.</p>\n\n<p>Contains known external URLs for various object types: artist, track, etc.</p>\n"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls.__init__", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls.Ean", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls.Ean", "kind": "variable", "doc": "<p>International Article Number.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls.Isrc", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls.Isrc", "kind": "variable", "doc": "<p>International Standard Recording Code.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls.Spotify", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls.Spotify", "kind": "variable", "doc": "<p>The Spotify URL for the object.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls.Upc", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls.Upc", "kind": "variable", "doc": "<p>Universal Product Code.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls.ToDictionary", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.externalurls.ExternalUrls.ToString", "modulename": "spotifywebapipython.models.externalurls", "qualname": "ExternalUrls.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.followers", "modulename": "spotifywebapipython.models.followers", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.followers.Followers", "modulename": "spotifywebapipython.models.followers", "qualname": "Followers", "kind": "class", "doc": "<p>Spotify Web API Followers object.</p>\n\n<p>Contains information about the followers of an artist.</p>\n"}, {"fullname": "spotifywebapipython.models.followers.Followers.__init__", "modulename": "spotifywebapipython.models.followers", "qualname": "Followers.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.followers.Followers.Href", "modulename": "spotifywebapipython.models.followers", "qualname": "Followers.Href", "kind": "variable", "doc": "<p>This will always be set to null, as the Web API does not support it at the moment.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.followers.Followers.Total", "modulename": "spotifywebapipython.models.followers", "qualname": "Followers.Total", "kind": "variable", "doc": "<p>The total number of followers.</p>\n\n<p>Example: <code>31288</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.followers.Followers.ToDictionary", "modulename": "spotifywebapipython.models.followers", "qualname": "Followers.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.followers.Followers.ToString", "modulename": "spotifywebapipython.models.followers", "qualname": "Followers.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.imageobject", "modulename": "spotifywebapipython.models.imageobject", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.imageobject.ImageObject", "modulename": "spotifywebapipython.models.imageobject", "qualname": "ImageObject", "kind": "class", "doc": "<p>Spotify Web API Image object.</p>\n"}, {"fullname": "spotifywebapipython.models.imageobject.ImageObject.__init__", "modulename": "spotifywebapipython.models.imageobject", "qualname": "ImageObject.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.imageobject.ImageObject.Height", "modulename": "spotifywebapipython.models.imageobject", "qualname": "ImageObject.Height", "kind": "variable", "doc": "<p>The image height in pixels.</p>\n\n<p>Example: <code>300</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.imageobject.ImageObject.Url", "modulename": "spotifywebapipython.models.imageobject", "qualname": "ImageObject.Url", "kind": "variable", "doc": "<p>The source URL of the image.</p>\n\n<p>Example: <code>https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.imageobject.ImageObject.Width", "modulename": "spotifywebapipython.models.imageobject", "qualname": "ImageObject.Width", "kind": "variable", "doc": "<p>The image width in pixels.</p>\n\n<p>Example: <code>300</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.imageobject.ImageObject.ToDictionary", "modulename": "spotifywebapipython.models.imageobject", "qualname": "ImageObject.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.imageobject.ImageObject.ToString", "modulename": "spotifywebapipython.models.imageobject", "qualname": "ImageObject.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.narrator", "modulename": "spotifywebapipython.models.narrator", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.narrator.Narrator", "modulename": "spotifywebapipython.models.narrator", "qualname": "Narrator", "kind": "class", "doc": "<p>Spotify Web API Content Narrator object.</p>\n\n<p>Contains information about content narrators.</p>\n"}, {"fullname": "spotifywebapipython.models.narrator.Narrator.__init__", "modulename": "spotifywebapipython.models.narrator", "qualname": "Narrator.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.narrator.Narrator.Name", "modulename": "spotifywebapipython.models.narrator", "qualname": "Narrator.Name", "kind": "variable", "doc": "<p>The narrator name for this content.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.narrator.Narrator.ToDictionary", "modulename": "spotifywebapipython.models.narrator", "qualname": "Narrator.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.narrator.Narrator.ToString", "modulename": "spotifywebapipython.models.narrator", "qualname": "Narrator.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.owner", "modulename": "spotifywebapipython.models.owner", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.owner.Owner", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner", "kind": "class", "doc": "<p>Spotify Web API Owner object.</p>\n\n<p>Information about the owner of an object (e.g. playlist, etc).</p>\n"}, {"fullname": "spotifywebapipython.models.owner.Owner.__init__", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.owner.Owner.DisplayName", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.DisplayName", "kind": "variable", "doc": "<p>The name displayed on the user's profile, or null if not available.</p>\n\n<p>Example: <code>John S</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.owner.Owner.ExternalUrls", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.ExternalUrls", "kind": "variable", "doc": "<p>Known public external URLs for this user.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.owner.Owner.Followers", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.Followers", "kind": "variable", "doc": "<p>Information about the followers of the user.</p>\n", "annotation": ": spotifywebapipython.models.followers.Followers"}, {"fullname": "spotifywebapipython.models.owner.Owner.Href", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the user.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.owner.Owner.Id", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.Id", "kind": "variable", "doc": "<p>The Spotify user ID for the user.</p>\n\n<p>Example: <code>2up3OPMp9Tb4dAKM2erWXQ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.owner.Owner.Type", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.Type", "kind": "variable", "doc": "<p>The object type: <code>user</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.owner.Owner.Uri", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the user.</p>\n\n<p>Example: <code>spotify:user:2up3OPMp9Tb4dAKM2erWXQ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.owner.Owner.ToDictionary", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.owner.Owner.ToString", "modulename": "spotifywebapipython.models.owner", "qualname": "Owner.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.pageobject", "modulename": "spotifywebapipython.models.pageobject", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject", "kind": "class", "doc": "<p>Spotify Web API PageObject object.</p>\n\n<p>This allows for multiple pages of objects to be navigated.</p>\n"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.__init__", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.CursorAfter", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.CursorAfter", "kind": "variable", "doc": "<p>The cursor to use as key to find the next page of items. <br />\nThis value will only be populated when cursor-based paging is used, which is infrrequent.</p>\n\n<p>Example: <code>3jdODvx7rIdq0UGU7BOVR3</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.CursorBefore", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.CursorBefore", "kind": "variable", "doc": "<p>The cursor to use as key to find the previous page of items. <br />\nThis value will only be populated when cursor-based paging is used, which is infrrequent.</p>\n\n<p>Example: <code>3jdODvx7rIdq0UGU7BOVR3</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.Href", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint returning the full result of the request.</p>\n\n<p>Example: <code>https://api.spotify.com/v1/me/shows?offset=0&amp;limit=20</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.IsCursor", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.IsCursor", "kind": "variable", "doc": "<p>True if cursors were returned at some point during the life of this paging object.</p>\n", "annotation": ": list[object]"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.Items", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.Items", "kind": "variable", "doc": "<p>Array of objects.</p>\n\n<p>This property will be overrriden by inheriting classes.</p>\n", "annotation": ": list[object]"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.ItemsCount", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.ItemsCount", "kind": "variable", "doc": "<p>Number of objects in the <code>Items</code> property array.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.Limit", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.Limit", "kind": "variable", "doc": "<p>The maximum number of items in the response (as set in the query or by default).</p>\n\n<p>This property can be modified in case the paging request needs to be adjusted\nbased upon overall request limits.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.Next", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.Next", "kind": "variable", "doc": "<p>URL to the next page of items; null if none.</p>\n\n<p>Example: <code>https://api.spotify.com/v1/me/shows?offset=1&amp;limit=1</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.Offset", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.Offset", "kind": "variable", "doc": "<p>The offset of the items returned (as set in the query or by default).</p>\n\n<p>This property can be modified in case the paging request needs to be adjusted\nbased upon overall request limits.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.PagingInfo", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.PagingInfo", "kind": "variable", "doc": "<p>Returns a displayable string of paging parameters.</p>\n\n<p>The return value will vary, based upon if a cursor is used to navigate the results.\nMost methods don't use cursors, but there are a few that do (e.g. <code>GetArtistsFollowed</code>).</p>\n\n<p>For a \"(items {start} to {end} of {total} total)\" message, the <code>start</code> value is the\noffset value of the last page of items retrieved.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.Previous", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.Previous", "kind": "variable", "doc": "<p>URL to the previous page of items; null if none.</p>\n\n<p>Example: <code>https://api.spotify.com/v1/me/shows?offset=1&amp;limit=1</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.Total", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.Total", "kind": "variable", "doc": "<p>The total number of items available from the Spotify Web API to return.</p>\n\n<p>Note that sometimes the Spotify Web API returns a larger total than the actual number \nof items available.  Not sure why this is, but it may not match the <code>ItemsCount</code> value.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.ToDictionary", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.pageobject.PageObject.ToString", "modulename": "spotifywebapipython.models.pageobject", "qualname": "PageObject.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playeractions", "modulename": "spotifywebapipython.models.playeractions", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions", "kind": "class", "doc": "<p>Spotify Web API PlayerActions object.</p>\n"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.__init__", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.InterruptingPlayback", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.InterruptingPlayback", "kind": "variable", "doc": "<p>Interrupting playback. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.Pausing", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.Pausing", "kind": "variable", "doc": "<p>Pausing. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.Resuming", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.Resuming", "kind": "variable", "doc": "<p>Resuming. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.Seeking", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.Seeking", "kind": "variable", "doc": "<p>Seeking playback location. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.SkippingNext", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.SkippingNext", "kind": "variable", "doc": "<p>Skipping to the next context. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.SkippingPrev", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.SkippingPrev", "kind": "variable", "doc": "<p>Skipping to the previous context. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.TogglingRepeatContext", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.TogglingRepeatContext", "kind": "variable", "doc": "<p>Toggling repeat context flag. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.TogglingShuffle", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.TogglingShuffle", "kind": "variable", "doc": "<p>Toggling shuffle flag. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.TogglingRepeatTrack", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.TogglingRepeatTrack", "kind": "variable", "doc": "<p>Toggling repeat track flag. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.TransferringPlayback", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.TransferringPlayback", "kind": "variable", "doc": "<p>Transfering playback between devices. Optional field.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.ToDictionary", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playeractions.PlayerActions.ToString", "modulename": "spotifywebapipython.models.playeractions", "qualname": "PlayerActions.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playerplaystate", "modulename": "spotifywebapipython.models.playerplaystate", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState", "kind": "class", "doc": "<p>Spotify Web API PlayerPlayState object.</p>\n\n<p>Information about the user's current playback state, including track or episode, \nprogress, and active device.</p>\n"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.__init__", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.Actions", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.Actions", "kind": "variable", "doc": "<p>Allows to update the user interface based on which playback actions are \navailable within the current context.</p>\n", "annotation": ": spotifywebapipython.models.playeractions.PlayerActions"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.Context", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.Context", "kind": "variable", "doc": "<p>A Context Object; can be null.</p>\n", "annotation": ": spotifywebapipython.models.context.Context"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.CurrentlyPlayingType", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.CurrentlyPlayingType", "kind": "variable", "doc": "<p>The object type of the currently playing item, or null if nothing is playing.</p>\n\n<p>If not null, it can be one of <code>track</code>, <code>episode</code>, <code>ad</code> or <code>unknown</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.Device", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.Device", "kind": "variable", "doc": "<p>The device that is currently active.</p>\n", "annotation": ": spotifywebapipython.models.device.Device"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.Item", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.Item", "kind": "variable", "doc": "<p>The currently playing track or episode; can be null.  </p>\n\n<p>Will be of type <code>Track</code>, <code>Episode</code>, or null.</p>\n", "annotation": ": object"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.IsAdvertisement", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.IsAdvertisement", "kind": "variable", "doc": "<p>True if the currently playing media is an advertisement; otherwise, false.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.IsPlaying", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.IsPlaying", "kind": "variable", "doc": "<p>True if something is currently playing; otherwise, false.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.IsRepeatEnabled", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.IsRepeatEnabled", "kind": "variable", "doc": "<p>True if repeat play (one or all) is enabled; otherwise, False. </p>\n\n<p>The <code>RepeatState</code> property contains the actual repeat setting.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.IsShuffleEnabled", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.IsShuffleEnabled", "kind": "variable", "doc": "<p>True if shuffle play is enabled; otherwise, False.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.ProgressMS", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.ProgressMS", "kind": "variable", "doc": "<p>Progress into the currently playing track or episode; can be null.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.RepeatState", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.RepeatState", "kind": "variable", "doc": "<p>The repeat state of the playing track: <code>off</code>, <code>track</code>, or <code>context</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.ShuffleState", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.ShuffleState", "kind": "variable", "doc": "<p>If shuffle is <code>on</code> or <code>off</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.SmartShuffle", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.SmartShuffle", "kind": "variable", "doc": "<p>If smart shuffle is <code>on</code> or <code>off</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.Summary", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.Summary", "kind": "variable", "doc": "<p>Returns a summary of what is playing.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.Timestamp", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.Timestamp", "kind": "variable", "doc": "<p>Unix Millisecond Timestamp when data was fetched.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.ToDictionary", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playerplaystate.PlayerPlayState.ToString", "modulename": "spotifywebapipython.models.playerplaystate", "qualname": "PlayerPlayState.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playerqueueinfo", "modulename": "spotifywebapipython.models.playerqueueinfo", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo", "kind": "class", "doc": "<p>Spotify Web API PlayerQueueInfo object.</p>\n\n<p>Information about the user's current playback queue.</p>\n"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.__init__", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.CurrentlyPlaying", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.CurrentlyPlaying", "kind": "variable", "doc": "<p>The currently playing track or episode; can be null.</p>\n", "annotation": ": object"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.CurrentlyPlayingType", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.CurrentlyPlayingType", "kind": "variable", "doc": "<p>The object type of the currently playing item, or null if nothing is playing.</p>\n\n<p>If not null, it can be one of <code>track</code>, <code>episode</code>, <code>ad</code> or <code>unknown</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.Queue", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.Queue", "kind": "variable", "doc": "<p>A Context Object; can be null.</p>\n", "annotation": ": list[object]"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.QueueCount", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.QueueCount", "kind": "variable", "doc": "<p>The number of items in the <code>Queue</code> array.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.Summary", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.Summary", "kind": "variable", "doc": "<p>Returns a summary of what is playing.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.ToDictionary", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playerqueueinfo.PlayerQueueInfo.ToString", "modulename": "spotifywebapipython.models.playerqueueinfo", "qualname": "PlayerQueueInfo.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playhistory", "modulename": "spotifywebapipython.models.playhistory", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory", "kind": "class", "doc": "<p>Spotify Web API PlayHistory object.</p>\n"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory.__init__", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory.PlayedAt", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory.PlayedAt", "kind": "variable", "doc": "<p>The date and time the track was played (in local time).</p>\n\n<p>Example: <code>2024-01-25T15:33:17.136Z</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory.PlayedAtMS", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory.PlayedAtMS", "kind": "variable", "doc": "<p>The <code>PlayedAt</code> value in Unix millisecond timestamp format, or null if the <code>PlayedAt</code> value is null.</p>\n\n<p>Example: <code>1706213826000</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory.Context", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory.Context", "kind": "variable", "doc": "<p>The context the track was played from.</p>\n", "annotation": ": spotifywebapipython.models.context.Context"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory.Track", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory.Track", "kind": "variable", "doc": "<p>The track the user listened to.</p>\n", "annotation": ": spotifywebapipython.models.track.Track"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory.ToDictionary", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playhistory.PlayHistory.ToString", "modulename": "spotifywebapipython.models.playhistory", "qualname": "PlayHistory.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playhistorypage", "modulename": "spotifywebapipython.models.playhistorypage", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playhistorypage.PlayHistoryPage", "modulename": "spotifywebapipython.models.playhistorypage", "qualname": "PlayHistoryPage", "kind": "class", "doc": "<p>Spotify Web API PlayHistoryPage object.</p>\n\n<p>This allows for multiple pages of <code>PlayHistory</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.playhistorypage.PlayHistoryPage.__init__", "modulename": "spotifywebapipython.models.playhistorypage", "qualname": "PlayHistoryPage.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playhistorypage.PlayHistoryPage.Items", "modulename": "spotifywebapipython.models.playhistorypage", "qualname": "PlayHistoryPage.Items", "kind": "variable", "doc": "<p>Array of <code>PlayHistory</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.playhistory.PlayHistory]"}, {"fullname": "spotifywebapipython.models.playhistorypage.PlayHistoryPage.GetTracks", "modulename": "spotifywebapipython.models.playhistorypage", "qualname": "PlayHistoryPage.GetTracks", "kind": "function", "doc": "<p>Gets a list of all tracks contained in the underlying <code>Items</code> list.</p>\n\n<p>This is a convenience method so one does not have to loop through the <code>Items</code>\narray of PlayHistory objects to get the list of tracks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playhistorypage.PlayHistoryPage.ToString", "modulename": "spotifywebapipython.models.playhistorypage", "qualname": "PlayHistoryPage.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlist", "modulename": "spotifywebapipython.models.playlist", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playlist.Playlist", "modulename": "spotifywebapipython.models.playlist", "qualname": "Playlist", "kind": "class", "doc": "<p>Spotify Web API Playlist object.</p>\n", "bases": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified"}, {"fullname": "spotifywebapipython.models.playlist.Playlist.__init__", "modulename": "spotifywebapipython.models.playlist", "qualname": "Playlist.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playlist.Playlist.Followers", "modulename": "spotifywebapipython.models.playlist", "qualname": "Playlist.Followers", "kind": "variable", "doc": "<p>Information about the followers of the playlist.</p>\n", "annotation": ": spotifywebapipython.models.followers.Followers"}, {"fullname": "spotifywebapipython.models.playlist.Playlist.Tracks", "modulename": "spotifywebapipython.models.playlist", "qualname": "Playlist.Tracks", "kind": "variable", "doc": "<p>The tracks of the playlist.</p>\n\n<p>This is a <code>PlaylistPage</code> object, meaning only 50 tracks max are listed per request.</p>\n", "annotation": ": spotifywebapipython.models.playlistpage.PlaylistPage"}, {"fullname": "spotifywebapipython.models.playlist.Playlist.GetTracks", "modulename": "spotifywebapipython.models.playlist", "qualname": "Playlist.GetTracks", "kind": "function", "doc": "<p>Gets a list of all tracks contained in the underlying <code>Items</code> list.</p>\n\n<p>This is a convenience method so one does not have to loop through the <code>Items</code>\narray of PlaylistPage objects to get the list of tracks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlist.Playlist.ToDictionary", "modulename": "spotifywebapipython.models.playlist", "qualname": "Playlist.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlist.Playlist.ToString", "modulename": "spotifywebapipython.models.playlist", "qualname": "Playlist.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlistpage", "modulename": "spotifywebapipython.models.playlistpage", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playlistpage.PlaylistPage", "modulename": "spotifywebapipython.models.playlistpage", "qualname": "PlaylistPage", "kind": "class", "doc": "<p>Spotify Web API PlaylistPage object.</p>\n\n<p>This allows for multiple pages of <code>PlaylistTrack</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.playlistpage.PlaylistPage.__init__", "modulename": "spotifywebapipython.models.playlistpage", "qualname": "PlaylistPage.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playlistpage.PlaylistPage.Items", "modulename": "spotifywebapipython.models.playlistpage", "qualname": "PlaylistPage.Items", "kind": "variable", "doc": "<p>Array of <code>PlaylistTrack</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.playlisttrack.PlaylistTrack]"}, {"fullname": "spotifywebapipython.models.playlistpage.PlaylistPage.GetTracks", "modulename": "spotifywebapipython.models.playlistpage", "qualname": "PlaylistPage.GetTracks", "kind": "function", "doc": "<p>Gets a list of all tracks contained in the underlying <code>Items</code> list.</p>\n\n<p>This is a convenience method so one does not have to loop through the <code>Items</code>\narray of PlaylistTrack objects to get the list of tracks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlistpage.PlaylistPage.ToString", "modulename": "spotifywebapipython.models.playlistpage", "qualname": "PlaylistPage.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlistpagesimplified", "modulename": "spotifywebapipython.models.playlistpagesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playlistpagesimplified.PlaylistPageSimplified", "modulename": "spotifywebapipython.models.playlistpagesimplified", "qualname": "PlaylistPageSimplified", "kind": "class", "doc": "<p>Spotify Web API PlaylistPageSimplified object.</p>\n\n<p>This allows for multiple pages of <code>PlaylistSimplified</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.playlistpagesimplified.PlaylistPageSimplified.__init__", "modulename": "spotifywebapipython.models.playlistpagesimplified", "qualname": "PlaylistPageSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playlistpagesimplified.PlaylistPageSimplified.Items", "modulename": "spotifywebapipython.models.playlistpagesimplified", "qualname": "PlaylistPageSimplified.Items", "kind": "variable", "doc": "<p>Array of <code>PlaylistSimplified</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.playlistsimplified.PlaylistSimplified]"}, {"fullname": "spotifywebapipython.models.playlistpagesimplified.PlaylistPageSimplified.ToString", "modulename": "spotifywebapipython.models.playlistpagesimplified", "qualname": "PlaylistPageSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlistsimplified", "modulename": "spotifywebapipython.models.playlistsimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified", "kind": "class", "doc": "<p>Spotify Web API PlaylistSimplified object.</p>\n"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.__init__", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Collaborative", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Collaborative", "kind": "variable", "doc": "<p>True if the owner allows other users to modify the playlist.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Description", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Description", "kind": "variable", "doc": "<p>The playlist description.  </p>\n\n<p>Only returned for modified, verified playlists; otherwise null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for this playlist.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Href", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the playlist.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Id", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Id", "kind": "variable", "doc": "<p>The Spotify user ID for the playlist.</p>\n\n<p>Example: <code>5v5ETK9WFXAnGQ3MRubKuE</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Images", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Images", "kind": "variable", "doc": "<p>Images for the playlist.  </p>\n\n<p>The array may be empty or contain up to three images. <br />\nThe images are returned by size in descending order. <br />\nNote: If returned, the source URL for the image (url) is temporary and will expire in less than a day.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.ImageUrl", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Name", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Name", "kind": "variable", "doc": "<p>The name of the playlist.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Owner", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Owner", "kind": "variable", "doc": "<p>The user who owns the playlist.</p>\n", "annotation": ": spotifywebapipython.models.owner.Owner"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Public", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Public", "kind": "variable", "doc": "<p>The playlist's public/private status:  </p>\n\n<ul>\n<li>true: the playlist is public.  </li>\n<li>false: the playlist is private.  </li>\n<li>null: the playlist status is not relevant.</li>\n</ul>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.SnapshotId", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.SnapshotId", "kind": "variable", "doc": "<p>The version identifier for the current playlist.  </p>\n\n<p>Can be supplied in other requests to target a specific playlist version.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Tracks", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Tracks", "kind": "variable", "doc": "<p>The tracks summary of the playlist.</p>\n", "annotation": ": spotifywebapipython.models.playlisttracksummary.PlaylistTrackSummary"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Type", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>playlist</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.Uri", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the playlist.</p>\n\n<p>Example: <code>spotify:playlist:5v5ETK9WFXAnGQ3MRubKuE</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.ToDictionary", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlistsimplified.PlaylistSimplified.ToString", "modulename": "spotifywebapipython.models.playlistsimplified", "qualname": "PlaylistSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlisttrack", "modulename": "spotifywebapipython.models.playlisttrack", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack", "kind": "class", "doc": "<p>Spotify Web API PlaylistTrack object.</p>\n"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.__init__", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.AddedAt", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.AddedAt", "kind": "variable", "doc": "<p>The date and time the track or episode was added.  </p>\n\n<p>Note: some very old playlists may return null in this field.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.AddedBy", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.AddedBy", "kind": "variable", "doc": "<p>The Spotify user who added the track or episode.  </p>\n\n<p>Note: some very old playlists may return null in this field.</p>\n", "annotation": ": spotifywebapipython.models.owner.Owner"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.ImageUrl", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the underlying track album <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.IsLocal", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.IsLocal", "kind": "variable", "doc": "<p>Whether this track or episode is a local file (True) or not False).</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.Track", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.Track", "kind": "variable", "doc": "<p>Information about the track.</p>\n", "annotation": ": spotifywebapipython.models.track.Track"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.ToDictionary", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlisttrack.PlaylistTrack.ToString", "modulename": "spotifywebapipython.models.playlisttrack", "qualname": "PlaylistTrack.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlisttracksummary", "modulename": "spotifywebapipython.models.playlisttracksummary", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.playlisttracksummary.PlaylistTrackSummary", "modulename": "spotifywebapipython.models.playlisttracksummary", "qualname": "PlaylistTrackSummary", "kind": "class", "doc": "<p>Spotify Web API PlaylistTrackSummary object.</p>\n"}, {"fullname": "spotifywebapipython.models.playlisttracksummary.PlaylistTrackSummary.__init__", "modulename": "spotifywebapipython.models.playlisttracksummary", "qualname": "PlaylistTrackSummary.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.playlisttracksummary.PlaylistTrackSummary.Href", "modulename": "spotifywebapipython.models.playlisttracksummary", "qualname": "PlaylistTrackSummary.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint where full details of the playlist's \ntracks can be retrieved.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.playlisttracksummary.PlaylistTrackSummary.Total", "modulename": "spotifywebapipython.models.playlisttracksummary", "qualname": "PlaylistTrackSummary.Total", "kind": "variable", "doc": "<p>Number of tracks in the playlist.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.playlisttracksummary.PlaylistTrackSummary.ToDictionary", "modulename": "spotifywebapipython.models.playlisttracksummary", "qualname": "PlaylistTrackSummary.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.playlisttracksummary.PlaylistTrackSummary.ToString", "modulename": "spotifywebapipython.models.playlisttracksummary", "qualname": "PlaylistTrackSummary.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.recommendationseed", "modulename": "spotifywebapipython.models.recommendationseed", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed", "kind": "class", "doc": "<p>Spotify Web API Content RecommendationSeed object.</p>\n\n<p>Contains information about recommended tracks.</p>\n"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.__init__", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.AfterFilteringSize", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.AfterFilteringSize", "kind": "variable", "doc": "<p>The number of tracks available after min_* and max_* filters have been applied.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.AfterRelinkingSize", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.AfterRelinkingSize", "kind": "variable", "doc": "<p>The number of tracks available after relinking for regional availability.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.Href", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.Href", "kind": "variable", "doc": "<p>A link to the full track or artist data for this seed.  </p>\n\n<p>For tracks this will be a link to a Track Object. <br />\nFor artists a link to an Artist Object. <br />\nFor genre seeds, this value will be null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.Id", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.Id", "kind": "variable", "doc": "<p>The id used to select this seed.  </p>\n\n<p>This will be the same as the string used in the seedArtists, seedTracks or seedGenres parameter.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.InitialPoolSize", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.InitialPoolSize", "kind": "variable", "doc": "<p>The number of recommended tracks available for this seed.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.Type", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.Type", "kind": "variable", "doc": "<p>The entity type of this seed.  </p>\n\n<p>One of <code>artist</code>, <code>track</code> or <code>genre</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.ToDictionary", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.recommendationseed.RecommendationSeed.ToString", "modulename": "spotifywebapipython.models.recommendationseed", "qualname": "RecommendationSeed.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.restrictions", "modulename": "spotifywebapipython.models.restrictions", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.restrictions.Restrictions", "modulename": "spotifywebapipython.models.restrictions", "qualname": "Restrictions", "kind": "class", "doc": "<p>Spotify Web API Content Restrictions object.</p>\n\n<p>Contains information about content restrictions.</p>\n"}, {"fullname": "spotifywebapipython.models.restrictions.Restrictions.__init__", "modulename": "spotifywebapipython.models.restrictions", "qualname": "Restrictions.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.restrictions.Restrictions.Reason", "modulename": "spotifywebapipython.models.restrictions", "qualname": "Restrictions.Reason", "kind": "variable", "doc": "<p>The reason for the restriction. Supported values:  </p>\n\n<ul>\n<li>market: The content item is not available in the given market.</li>\n<li>product: The content item is not available for the user's subscription type.</li>\n<li>explicit: The content item is explicit and the user's account is set to not play explicit content.</li>\n</ul>\n\n<p>Additional reasons may be added in the future.  </p>\n\n<p>Note: If you use this field, make sure that your application safely handles unknown values.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.restrictions.Restrictions.ToDictionary", "modulename": "spotifywebapipython.models.restrictions", "qualname": "Restrictions.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.restrictions.Restrictions.ToString", "modulename": "spotifywebapipython.models.restrictions", "qualname": "Restrictions.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.resumepoint", "modulename": "spotifywebapipython.models.resumepoint", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.resumepoint.ResumePoint", "modulename": "spotifywebapipython.models.resumepoint", "qualname": "ResumePoint", "kind": "class", "doc": "<p>Spotify Web API Content ResumePoint object.</p>\n\n<p>Contains information about the user's most recent position in the episode.</p>\n"}, {"fullname": "spotifywebapipython.models.resumepoint.ResumePoint.__init__", "modulename": "spotifywebapipython.models.resumepoint", "qualname": "ResumePoint.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.resumepoint.ResumePoint.FullyPlayed", "modulename": "spotifywebapipython.models.resumepoint", "qualname": "ResumePoint.FullyPlayed", "kind": "variable", "doc": "<p>Whether or not the episode has been fully played by the user.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.resumepoint.ResumePoint.ResumePositionMS", "modulename": "spotifywebapipython.models.resumepoint", "qualname": "ResumePoint.ResumePositionMS", "kind": "variable", "doc": "<p>The user's most recent position in the episode in milliseconds.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.resumepoint.ResumePoint.ToDictionary", "modulename": "spotifywebapipython.models.resumepoint", "qualname": "ResumePoint.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.resumepoint.ResumePoint.ToString", "modulename": "spotifywebapipython.models.resumepoint", "qualname": "ResumePoint.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.searchresponse", "modulename": "spotifywebapipython.models.searchresponse", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse", "kind": "class", "doc": "<p>Spotify Web API SearchResponse object.</p>\n"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.__init__", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>searchCriteria (str):</strong>  Search query specified for the search.  </li>\n<li><strong>searchCriteriaType (str):</strong>  A comma-separated list of item types that were searched.  </li>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">searchCriteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">searchCriteriaType</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.AlbumsCount", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.AlbumsCount", "kind": "variable", "doc": "<p>The total number of album items returned in the <code>Tracks.Items</code> collection</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.Albums", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.Albums", "kind": "variable", "doc": "<p>An <code>AlbumPageSimplified</code> object that allows for multiple pages of albums to be navigated.</p>\n", "annotation": ": spotifywebapipython.models.albumpagesimplified.AlbumPageSimplified"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.ArtistsCount", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.ArtistsCount", "kind": "variable", "doc": "<p>The total number of artist items returned in the <code>Tracks.Items</code> collection</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.Artists", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.Artists", "kind": "variable", "doc": "<p>An <code>ArtistPage</code> object that allows for multiple pages of artists to be navigated.</p>\n", "annotation": ": spotifywebapipython.models.artistpage.ArtistPage"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.AudiobooksCount", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.AudiobooksCount", "kind": "variable", "doc": "<p>The total number of audiobook items returned in the <code>Tracks.Items</code> collection</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.Audiobooks", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.Audiobooks", "kind": "variable", "doc": "<p>An <code>AudiobookPageSimplified</code> object that allows for multiple pages of audiobooks to be navigated.</p>\n", "annotation": ": spotifywebapipython.models.audiobookpagesimplified.AudiobookPageSimplified"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.EpisodesCount", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.EpisodesCount", "kind": "variable", "doc": "<p>The total number of episode items returned in the <code>Tracks.Items</code> collection</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.Episodes", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.Episodes", "kind": "variable", "doc": "<p>An <code>EpisodePageSimplified</code> object that allows for multiple pages of episodes to be navigated.</p>\n", "annotation": ": spotifywebapipython.models.episodepagesimplified.EpisodePageSimplified"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.PlaylistsCount", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.PlaylistsCount", "kind": "variable", "doc": "<p>The total number of playlist items returned in the <code>Tracks.Items</code> collection</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.Playlists", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.Playlists", "kind": "variable", "doc": "<p>An <code>PlaylistPageSimplified</code> object that allows for multiple pages of playlists to be navigated.</p>\n", "annotation": ": spotifywebapipython.models.playlistpagesimplified.PlaylistPageSimplified"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.SearchCriteria", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.SearchCriteria", "kind": "variable", "doc": "<p>The search query used to generate the response.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.SearchCriteriaType", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.SearchCriteriaType", "kind": "variable", "doc": "<p>The comma-separated list of item types that were searched for.  </p>\n\n<p>Search results include hits from all of the specified item types.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.ShowsCount", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.ShowsCount", "kind": "variable", "doc": "<p>The total number of show items returned in the <code>Tracks.Items</code> collection</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.Shows", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.Shows", "kind": "variable", "doc": "<p>An <code>ShowPageSimplified</code> object that allows for multiple pages of shows to be navigated.</p>\n", "annotation": ": spotifywebapipython.models.showpagesimplified.ShowPageSimplified"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.TracksCount", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.TracksCount", "kind": "variable", "doc": "<p>The total number of track items returned in the <code>Tracks.Items</code> collection</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.Tracks", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.Tracks", "kind": "variable", "doc": "<p>A <code>TrackPage</code> object that allows for multiple pages of tracks to be navigated.</p>\n", "annotation": ": spotifywebapipython.models.trackpage.TrackPage"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.GetSpotifyOwnedPlaylists", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.GetSpotifyOwnedPlaylists", "kind": "function", "doc": "<p>Gets a list of all playlists contained in the underlying <code>Playlists</code> list\nthat are owned by <code>spotify:user:spotify</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlistsimplified</span><span class=\"o\">.</span><span class=\"n\">PlaylistSimplified</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.ToDictionary", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.searchresponse.SearchResponse.ToString", "modulename": "spotifywebapipython.models.searchresponse", "qualname": "SearchResponse.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.show", "modulename": "spotifywebapipython.models.show", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.show.Show", "modulename": "spotifywebapipython.models.show", "qualname": "Show", "kind": "class", "doc": "<p>Spotify Web API Show object.</p>\n", "bases": "spotifywebapipython.models.showsimplified.ShowSimplified"}, {"fullname": "spotifywebapipython.models.show.Show.__init__", "modulename": "spotifywebapipython.models.show", "qualname": "Show.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.show.Show.Episodes", "modulename": "spotifywebapipython.models.show", "qualname": "Show.Episodes", "kind": "variable", "doc": "<p>The episodes of the show.</p>\n\n<p>This is a <code>EpisodePageSimplified</code> object.</p>\n", "annotation": ": spotifywebapipython.models.episodepagesimplified.EpisodePageSimplified"}, {"fullname": "spotifywebapipython.models.show.Show.ToDictionary", "modulename": "spotifywebapipython.models.show", "qualname": "Show.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.show.Show.ToString", "modulename": "spotifywebapipython.models.show", "qualname": "Show.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.showpagesaved", "modulename": "spotifywebapipython.models.showpagesaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.showpagesaved.ShowPageSaved", "modulename": "spotifywebapipython.models.showpagesaved", "qualname": "ShowPageSaved", "kind": "class", "doc": "<p>Spotify Web API ShowPageSaved object.</p>\n\n<p>This allows for multiple pages of <code>ShowSaved</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.showpagesaved.ShowPageSaved.__init__", "modulename": "spotifywebapipython.models.showpagesaved", "qualname": "ShowPageSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.showpagesaved.ShowPageSaved.Items", "modulename": "spotifywebapipython.models.showpagesaved", "qualname": "ShowPageSaved.Items", "kind": "variable", "doc": "<p>Array of <code>ShowSaved</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.showsaved.ShowSaved]"}, {"fullname": "spotifywebapipython.models.showpagesaved.ShowPageSaved.GetShows", "modulename": "spotifywebapipython.models.showpagesaved", "qualname": "ShowPageSaved.GetShows", "kind": "function", "doc": "<p>Gets a list of all shows contained in the underlying <code>Items</code> list.</p>\n\n<p>This is a convenience method so one does not have to loop through the <code>Items</code>\narray of ShowSaved objects to get the list of shows.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Show</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.showpagesaved.ShowPageSaved.ToString", "modulename": "spotifywebapipython.models.showpagesaved", "qualname": "ShowPageSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.showpagesimplified", "modulename": "spotifywebapipython.models.showpagesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.showpagesimplified.ShowPageSimplified", "modulename": "spotifywebapipython.models.showpagesimplified", "qualname": "ShowPageSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedShowPage object.</p>\n\n<p>This allows for multiple pages of <code>ShowSimplified</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.showpagesimplified.ShowPageSimplified.__init__", "modulename": "spotifywebapipython.models.showpagesimplified", "qualname": "ShowPageSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.showpagesimplified.ShowPageSimplified.Items", "modulename": "spotifywebapipython.models.showpagesimplified", "qualname": "ShowPageSimplified.Items", "kind": "variable", "doc": "<p>Array of <code>ShowSimplified</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.showsimplified.ShowSimplified]"}, {"fullname": "spotifywebapipython.models.showpagesimplified.ShowPageSimplified.ToString", "modulename": "spotifywebapipython.models.showpagesimplified", "qualname": "ShowPageSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.showsaved", "modulename": "spotifywebapipython.models.showsaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.showsaved.ShowSaved", "modulename": "spotifywebapipython.models.showsaved", "qualname": "ShowSaved", "kind": "class", "doc": "<p>Spotify Web API SavedShow object.</p>\n"}, {"fullname": "spotifywebapipython.models.showsaved.ShowSaved.__init__", "modulename": "spotifywebapipython.models.showsaved", "qualname": "ShowSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.showsaved.ShowSaved.AddedAt", "modulename": "spotifywebapipython.models.showsaved", "qualname": "ShowSaved.AddedAt", "kind": "variable", "doc": "<p>The date and time the show was saved. </p>\n\n<p>Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero \noffset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an \nalbum release), an additional field indicates the precision; see for example, release_date \nin an album object.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsaved.ShowSaved.Show", "modulename": "spotifywebapipython.models.showsaved", "qualname": "ShowSaved.Show", "kind": "variable", "doc": "<p>Information about the show.</p>\n", "annotation": ": spotifywebapipython.models.showsimplified.ShowSimplified"}, {"fullname": "spotifywebapipython.models.showsaved.ShowSaved.ToDictionary", "modulename": "spotifywebapipython.models.showsaved", "qualname": "ShowSaved.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.showsaved.ShowSaved.ToString", "modulename": "spotifywebapipython.models.showsaved", "qualname": "ShowSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.showsimplified", "modulename": "spotifywebapipython.models.showsimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedShow object.</p>\n"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.__init__", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.AvailableMarkets", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.AvailableMarkets", "kind": "variable", "doc": "<p>A list of the countries in which the show can be played, identified by their ISO 3166-1 alpha-2 code.</p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Copyrights", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Copyrights", "kind": "variable", "doc": "<p>The copyright statements of the show.</p>\n", "annotation": ": list[spotifywebapipython.models.copyright.Copyright]"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Description", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Description", "kind": "variable", "doc": "<p>A description of the show. <br />\nHTML tags are stripped away from this field, use <code>HtmlDescription</code> property in case HTML tags are needed.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Explicit", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Explicit", "kind": "variable", "doc": "<p>Whether or not the show has explicit lyrics (true = yes it does; false = no it does not OR unknown).</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for the show.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Href", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the show.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.HtmlDescription", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.HtmlDescription", "kind": "variable", "doc": "<p>A description of the show. <br />\nThis field may contain HTML tags.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Id", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Id", "kind": "variable", "doc": "<p>The Spotify ID for the show.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Images", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Images", "kind": "variable", "doc": "<p>The cover art for the show in various sizes, widest first.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.ImageUrl", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.IsExternallyHosted", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.IsExternallyHosted", "kind": "variable", "doc": "<p>True if all of the shows episodes are hosted outside of Spotify's CDN. <br />\nThis field might be null in some cases.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Languages", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Languages", "kind": "variable", "doc": "<p>A list of the languages used in the show, identified by their ISO 639-1 code.</p>\n\n<p>Example: <code>[fr,en]</code></p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.MediaType", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.MediaType", "kind": "variable", "doc": "<p>The media type of the show.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Name", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Name", "kind": "variable", "doc": "<p>The name of the show.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Publisher", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Publisher", "kind": "variable", "doc": "<p>The publisher of the show.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.TotalEpisodes", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.TotalEpisodes", "kind": "variable", "doc": "<p>The total number of episodes in the show.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Type", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>show</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.Uri", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the show.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.ToDictionary", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.showsimplified.ShowSimplified.ToString", "modulename": "spotifywebapipython.models.showsimplified", "qualname": "ShowSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.track", "modulename": "spotifywebapipython.models.track", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.track.Track", "modulename": "spotifywebapipython.models.track", "qualname": "Track", "kind": "class", "doc": "<p>Spotify Web API Track object.</p>\n", "bases": "spotifywebapipython.models.tracksimplified.TrackSimplified"}, {"fullname": "spotifywebapipython.models.track.Track.__init__", "modulename": "spotifywebapipython.models.track", "qualname": "Track.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.track.Track.Album", "modulename": "spotifywebapipython.models.track", "qualname": "Track.Album", "kind": "variable", "doc": "<p>The album on which the track appears. </p>\n\n<p>The album object includes a link in href to full information about the album.</p>\n", "annotation": ": spotifywebapipython.models.album.Album"}, {"fullname": "spotifywebapipython.models.track.Track.ExternalIds", "modulename": "spotifywebapipython.models.track", "qualname": "Track.ExternalIds", "kind": "variable", "doc": "<p>Known external ID's for the track.</p>\n", "annotation": ": spotifywebapipython.models.externalids.ExternalIds"}, {"fullname": "spotifywebapipython.models.track.Track.ImageUrl", "modulename": "spotifywebapipython.models.track", "qualname": "Track.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the album <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.track.Track.Popularity", "modulename": "spotifywebapipython.models.track", "qualname": "Track.Popularity", "kind": "variable", "doc": "<p>The popularity of the track.  The value will be between 0 and 100, with 100 being the most popular.</p>\n\n<p>The popularity of a track is a value between 0 and 100, with 100 being the most popular. \nThe popularity is calculated by algorithm and is based, in the most part, on the total number \nof plays the track has had and how recent those plays are. Generally speaking, songs that are \nbeing played a lot now will have a higher popularity than songs that were played a lot in the past. </p>\n\n<p>Duplicate tracks (e.g. the same track from a single and an album) are rated independently. \nArtist and album popularity is derived mathematically from track popularity. </p>\n\n<p>Note: the popularity value may lag actual popularity by a few days: the value is not updated in real time.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.track.Track.ToDictionary", "modulename": "spotifywebapipython.models.track", "qualname": "Track.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.track.Track.ToString", "modulename": "spotifywebapipython.models.track", "qualname": "Track.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.trackpage", "modulename": "spotifywebapipython.models.trackpage", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.trackpage.TrackPage", "modulename": "spotifywebapipython.models.trackpage", "qualname": "TrackPage", "kind": "class", "doc": "<p>Spotify Web API TrackPage object.</p>\n\n<p>This allows for multiple pages of <code>Track</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.trackpage.TrackPage.__init__", "modulename": "spotifywebapipython.models.trackpage", "qualname": "TrackPage.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.trackpage.TrackPage.Items", "modulename": "spotifywebapipython.models.trackpage", "qualname": "TrackPage.Items", "kind": "variable", "doc": "<p>Array of <code>Track</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.track.Track]"}, {"fullname": "spotifywebapipython.models.trackpage.TrackPage.ToString", "modulename": "spotifywebapipython.models.trackpage", "qualname": "TrackPage.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.trackpagesaved", "modulename": "spotifywebapipython.models.trackpagesaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.trackpagesaved.TrackPageSaved", "modulename": "spotifywebapipython.models.trackpagesaved", "qualname": "TrackPageSaved", "kind": "class", "doc": "<p>Spotify Web API TrackPageSaved object.</p>\n\n<p>This allows for multiple pages of <code>TrackSaved</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.trackpagesaved.TrackPageSaved.__init__", "modulename": "spotifywebapipython.models.trackpagesaved", "qualname": "TrackPageSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.trackpagesaved.TrackPageSaved.Items", "modulename": "spotifywebapipython.models.trackpagesaved", "qualname": "TrackPageSaved.Items", "kind": "variable", "doc": "<p>Array of <code>TrackSaved</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.tracksaved.TrackSaved]"}, {"fullname": "spotifywebapipython.models.trackpagesaved.TrackPageSaved.GetTracks", "modulename": "spotifywebapipython.models.trackpagesaved", "qualname": "TrackPageSaved.GetTracks", "kind": "function", "doc": "<p>Gets a list of all tracks contained in the underlying <code>Items</code> list.</p>\n\n<p>This is a convenience method so one does not have to loop through the <code>Items</code>\narray of TrackSaved objects to get the list of tracks.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.trackpagesaved.TrackPageSaved.ToString", "modulename": "spotifywebapipython.models.trackpagesaved", "qualname": "TrackPageSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.trackpagesimplified", "modulename": "spotifywebapipython.models.trackpagesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.trackpagesimplified.TrackPageSimplified", "modulename": "spotifywebapipython.models.trackpagesimplified", "qualname": "TrackPageSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedTrackPage object.</p>\n\n<p>This allows for multiple pages of <code>TrackSimplified</code> objects to be navigated.</p>\n", "bases": "spotifywebapipython.models.pageobject.PageObject"}, {"fullname": "spotifywebapipython.models.trackpagesimplified.TrackPageSimplified.__init__", "modulename": "spotifywebapipython.models.trackpagesimplified", "qualname": "TrackPageSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.trackpagesimplified.TrackPageSimplified.Items", "modulename": "spotifywebapipython.models.trackpagesimplified", "qualname": "TrackPageSimplified.Items", "kind": "variable", "doc": "<p>Array of <code>TrackSimplified</code> objects.</p>\n", "annotation": ": list[spotifywebapipython.models.tracksimplified.TrackSimplified]"}, {"fullname": "spotifywebapipython.models.trackpagesimplified.TrackPageSimplified.ToString", "modulename": "spotifywebapipython.models.trackpagesimplified", "qualname": "TrackPageSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.tracksaved", "modulename": "spotifywebapipython.models.tracksaved", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.tracksaved.TrackSaved", "modulename": "spotifywebapipython.models.tracksaved", "qualname": "TrackSaved", "kind": "class", "doc": "<p>Spotify Web API SavedTrack object.</p>\n"}, {"fullname": "spotifywebapipython.models.tracksaved.TrackSaved.__init__", "modulename": "spotifywebapipython.models.tracksaved", "qualname": "TrackSaved.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.tracksaved.TrackSaved.AddedAt", "modulename": "spotifywebapipython.models.tracksaved", "qualname": "TrackSaved.AddedAt", "kind": "variable", "doc": "<p>The date and time the track was saved. </p>\n\n<p>Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero \noffset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an \nalbum release), an additional field indicates the precision; see for example, release_date \nin an album object.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksaved.TrackSaved.Track", "modulename": "spotifywebapipython.models.tracksaved", "qualname": "TrackSaved.Track", "kind": "variable", "doc": "<p>Information about the track.</p>\n", "annotation": ": spotifywebapipython.models.track.Track"}, {"fullname": "spotifywebapipython.models.tracksaved.TrackSaved.ToDictionary", "modulename": "spotifywebapipython.models.tracksaved", "qualname": "TrackSaved.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.tracksaved.TrackSaved.ToString", "modulename": "spotifywebapipython.models.tracksaved", "qualname": "TrackSaved.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include the Items collection of objects; otherwise, False\nto only return base properties.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.tracksimplified", "modulename": "spotifywebapipython.models.tracksimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified", "kind": "class", "doc": "<p>Spotify Web API SimplifiedTrack object.</p>\n"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.__init__", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Artists", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Artists", "kind": "variable", "doc": "<p>A list of artists who performed the track.</p>\n", "annotation": ": list[spotifywebapipython.models.artistsimplified.ArtistSimplified]"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.AvailableMarkets", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.AvailableMarkets", "kind": "variable", "doc": "<p>A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code.</p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.DiscNumber", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.DiscNumber", "kind": "variable", "doc": "<p>The disc number (usually 1 unless the album consists of more than one disc).</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.DurationMS", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.DurationMS", "kind": "variable", "doc": "<p>The track length in milliseconds.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Explicit", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Explicit", "kind": "variable", "doc": "<p>Whether or not the track has explicit lyrics (true = yes it does; false = no it does not OR unknown).</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for the track.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Href", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the track.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Id", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Id", "kind": "variable", "doc": "<p>The Spotify ID for the track.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.ImageUrl", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.ImageUrl", "kind": "variable", "doc": "<p>Always returns null, as tracks currently do not support images.</p>\n\n<p>Added for compatibility with other objects.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.IsLocal", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.IsLocal", "kind": "variable", "doc": "<p>Whether or not the track is from a local file.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.IsPlayable", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.IsPlayable", "kind": "variable", "doc": "<p>Part of the response when Track Relinking is applied. <br />\nIf true, the track is playable in the given market. Otherwise false.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Name", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Name", "kind": "variable", "doc": "<p>The name of the track.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.PreviewUrl", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.PreviewUrl", "kind": "variable", "doc": "<p>A link to a 30 second preview (MP3 format) of the track. Can be null.</p>\n\n<p>Important policy note:</p>\n\n<ul>\n<li>Spotify Audio preview clips can not be a standalone service.</li>\n</ul>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Restrictions", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Restrictions", "kind": "variable", "doc": "<p>Included in the response when a content restriction is applied.</p>\n", "annotation": ": spotifywebapipython.models.restrictions.Restrictions"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.TrackNumber", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.TrackNumber", "kind": "variable", "doc": "<p>The number of the track. </p>\n\n<p>If an album has several discs, the track number is the number on the specified disc.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Type", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>track</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.Uri", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the track.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.ToDictionary", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.tracksimplified.TrackSimplified.ToString", "modulename": "spotifywebapipython.models.tracksimplified", "qualname": "TrackSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.trackrecommendations", "modulename": "spotifywebapipython.models.trackrecommendations", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.trackrecommendations.TrackRecommendations", "modulename": "spotifywebapipython.models.trackrecommendations", "qualname": "TrackRecommendations", "kind": "class", "doc": "<p>Spotify Web API SimplifiedTrack object.</p>\n"}, {"fullname": "spotifywebapipython.models.trackrecommendations.TrackRecommendations.__init__", "modulename": "spotifywebapipython.models.trackrecommendations", "qualname": "TrackRecommendations.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.trackrecommendations.TrackRecommendations.Seeds", "modulename": "spotifywebapipython.models.trackrecommendations", "qualname": "TrackRecommendations.Seeds", "kind": "variable", "doc": "<p>A list of recommendation seed objects.</p>\n", "annotation": ": list[spotifywebapipython.models.recommendationseed.RecommendationSeed]"}, {"fullname": "spotifywebapipython.models.trackrecommendations.TrackRecommendations.Tracks", "modulename": "spotifywebapipython.models.trackrecommendations", "qualname": "TrackRecommendations.Tracks", "kind": "variable", "doc": "<p>A list of Track objects, ordered according to the parameters supplied.\non the <code>GetTrackRecommendations</code> method.</p>\n", "annotation": ": list[spotifywebapipython.models.track.Track]"}, {"fullname": "spotifywebapipython.models.trackrecommendations.TrackRecommendations.ToDictionary", "modulename": "spotifywebapipython.models.trackrecommendations", "qualname": "TrackRecommendations.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.trackrecommendations.TrackRecommendations.ToString", "modulename": "spotifywebapipython.models.trackrecommendations", "qualname": "TrackRecommendations.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.userprofile", "modulename": "spotifywebapipython.models.userprofile", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile", "kind": "class", "doc": "<p>Spotify Web API User Profile object.</p>\n\n<p>Information about the user from their account profile.</p>\n", "bases": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile.__init__", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile.Country", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile.Country", "kind": "variable", "doc": "<p>The country of the user, as set in the user's account profile. </p>\n\n<p>An ISO 3166-1 alpha-2 country code. </p>\n\n<p>This field is only available when the current user has granted access to \nthe <code>user-read-private</code> scope.</p>\n\n<p>Example: <code>US</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile.EMail", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile.EMail", "kind": "variable", "doc": "<p>The user's email address, as entered by the user when creating their account. \nImportant! This email address is unverified; there is no proof that it actually \nbelongs to the user. </p>\n\n<p>This field is only available when the current user has granted access to \nthe <code>user-read-email</code> scope.</p>\n\n<p>Example: <code>johnsmith@example.com</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile.ExplicitContent", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile.ExplicitContent", "kind": "variable", "doc": "<p>The user's explicit content settings. </p>\n\n<p>This field is only available when the current user has granted access to \nthe <code>user-read-private</code> scope.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile.Product", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile.Product", "kind": "variable", "doc": "<p>The user's Spotify subscription level: <code>premium</code>, <code>free</code>, etc. </p>\n\n<p>The subscription level <code>open</code> can be considered the same as <code>free</code>. </p>\n\n<p>This field is only valid when the current user has granted access to \nthe <code>user-read-private</code> scope; otherwise, it is set to <code>unknown</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile.ToDictionary", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.userprofile.UserProfile.ToString", "modulename": "spotifywebapipython.models.userprofile", "qualname": "UserProfile.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.userprofilesimplified", "modulename": "spotifywebapipython.models.userprofilesimplified", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified", "kind": "class", "doc": "<p>Spotify Web API User Profile object.</p>\n\n<p>Information about the user from their account profile.</p>\n"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.__init__", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.DisplayName", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.DisplayName", "kind": "variable", "doc": "<p>The name displayed on the user's profile, or null if not available.</p>\n\n<p>Example: <code>John S</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.ExternalUrls", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.ExternalUrls", "kind": "variable", "doc": "<p>Known external URLs for this user.</p>\n", "annotation": ": spotifywebapipython.models.externalurls.ExternalUrls"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.Followers", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.Followers", "kind": "variable", "doc": "<p>Information about the followers of the user.</p>\n", "annotation": ": spotifywebapipython.models.followers.Followers"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.Href", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.Href", "kind": "variable", "doc": "<p>A link to the Web API endpoint providing full details of the user.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.Id", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.Id", "kind": "variable", "doc": "<p>The Spotify user ID for the user.</p>\n\n<p>Example: <code>2up3OPMp9Tb4dAKM2erWXQ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.Images", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.Images", "kind": "variable", "doc": "<p>The user's profile image.</p>\n", "annotation": ": list[spotifywebapipython.models.imageobject.ImageObject]"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.ImageUrl", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.ImageUrl", "kind": "variable", "doc": "<p>Gets the first image url in the <code>Images</code> list, if images are defined;\notherwise, null.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.Type", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.Type", "kind": "variable", "doc": "<p>The object type: <code>user</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.Uri", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.Uri", "kind": "variable", "doc": "<p>The Spotify URI for the user.</p>\n\n<p>Example: <code>spotify:user:2up3OPMp9Tb4dAKM2erWXQ</code></p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.ToDictionary", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.ToDictionary", "kind": "function", "doc": "<p>Returns a dictionary representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.models.userprofilesimplified.UserProfileSimplified.ToString", "modulename": "spotifywebapipython.models.userprofilesimplified", "qualname": "UserProfileSimplified.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeTitle (str):</strong>  True to include the class name title prefix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeTitle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient", "modulename": "spotifywebapipython.oauthcli.authclient", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient", "kind": "class", "doc": "<p>OAuth2 Authorization client class.</p>\n"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.__init__", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>authorizationType (str):</strong>  OAuth2 authorization type title (e.g. \"Client Credentials\", etc).</li>\n<li><strong>authorizationUrl (str):</strong>  URL used to authorize the requested access.  </li>\n<li><strong>tokenUrl (str):</strong>  URL used to request an access token.  </li>\n<li><strong>scope (str | list[str]):</strong>  A space-delimited list of scopes you wish to request access to. <br />\nIf no scopes are specified, authorization will be granted only to access publicly \navailable information.</li>\n<li><strong>clientId (str):</strong>  The unique identifier of the application.</li>\n<li><strong>clientSecret (str):</strong>  The application's secret key, used to authorize your Web API or SDK calls.</li>\n<li><strong>oauth2Client (Client):</strong>  OAuth2 Client instance to use for this request. <br />\nIf null, a new WebApplicationClient will be created with the specified clientId and scope argument values.</li>\n<li><strong>oauth2Session (requests_oauthlib.oauth2_session.OAuth2Session):</strong>  A <code>OAuth2Session</code> instance to use for this request. <br />\nIf null, a new 'requests_oauthlib.oauth2_session.OAuth2Session' will be created with the specified \nclientId and scope argument values.</li>\n<li><strong>tokenProviderId (str):</strong>  Provider identifier used when storing the token to disk.\nA null value will default to <code>Shared</code>. <br />\nDefault: <code>Shared</code></li>\n<li><strong>tokenProfileId (str):</strong>  Profile identifier used when storing the token to disk. <br />\nA null value will default to <code>Shared</code>. <br />\nDefault: <code>Shared</code></li>\n<li><strong>tokenStorageDir (str):</strong>  The directory path that will contain the <code>tokens.json</code> file. <br />\nA null value will default to the platform specific storage location: <br />\nExample for Windows OS = <code>C:\\ProgramData\\SpotifyWebApiPython</code></li>\n<li><strong>tokenUpdater (Callable):</strong>  A method to call when a token needs to be refreshed by an external provider. <br />\nThe defined method is called with no parameters, and should return a token dictionary. <br />\nDefault is null.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">authorizationType</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">authorizationUrl</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenUrl</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scope</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">clientId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">clientSecret</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">oauth2Client</span><span class=\"p\">:</span> <span class=\"n\">oauthlib</span><span class=\"o\">.</span><span class=\"n\">oauth2</span><span class=\"o\">.</span><span class=\"n\">rfc6749</span><span class=\"o\">.</span><span class=\"n\">clients</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">oauth2Session</span><span class=\"p\">:</span> <span class=\"n\">requests_oauthlib</span><span class=\"o\">.</span><span class=\"n\">oauth2_session</span><span class=\"o\">.</span><span class=\"n\">OAuth2Session</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenProviderId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenProfileId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenStorageDir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenUpdater</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.AuthorizationType", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.AuthorizationType", "kind": "variable", "doc": "<p>OAuth2 authorization type title (e.g. \"Client Credentials\", etc).</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.AuthorizationUrl", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.AuthorizationUrl", "kind": "variable", "doc": "<p>Url used to request user authorization permission for an authorization token.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.ClientId", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.ClientId", "kind": "variable", "doc": "<p>The unique identifier of the application.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.CodeVerifier", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.CodeVerifier", "kind": "variable", "doc": "<p>The code verifier string used as part of the token request authorization process.</p>\n\n<p>According to the PKCE standard, a code verifier is a high-entropy cryptographic \nrandom string with a length between 43 and 128 characters (the longer the better). \nIt can contain letters, digits, underscores, periods, hyphens, or tildes.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.IsAuthorized", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.IsAuthorized", "kind": "variable", "doc": "<p>Indicates whether this session has an OAuth token 'access_token' value or not. </p>\n\n<p>If True, you can reasonably expect OAuth-protected requests to the resource to succeed.  </p>\n\n<p>If False, you need the user to go through the OAuth authentication dance before \nOAuth-protected requests to the resource will succeed.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.Session", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.Session", "kind": "variable", "doc": "<p>OAuth 2 extension to the <code>requests.Session</code> class.</p>\n\n<p>Supports any grant type adhering to <code>oauthlib.oauth2.Client</code> spec\nincluding the four core OAuth 2 grants.</p>\n\n<p>Can be used to create authorization urls, fetch tokens and access protected\nresources using the <code>requests.Session</code> class interface you are used to.</p>\n", "annotation": ": requests_oauthlib.oauth2_session.OAuth2Session"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.TokenProfileId", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.TokenProfileId", "kind": "variable", "doc": "<p>Profile identifier used when loading / storing the token from / to disk.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.TokenUrl", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.TokenUrl", "kind": "variable", "doc": "<p>Url used to request or renew an authorization token.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.Logout", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.Logout", "kind": "function", "doc": "<p>Removes a stored token, but does not clear the current session.</p>\n\n<p>Warning: a request with the current session can refresh and save\nthe token, making this call ineffective.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.process_url", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.process_url", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.request", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.request", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">object</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.get", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.post", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.put", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.put", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.patch", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.patch", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.delete", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.head", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.head", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.options", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.options", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.authorization_url", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.authorization_url", "kind": "function", "doc": "<p>Constructs the authorization url, complete with all querystring parameters.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>**kwargs\nKeyword arguments for the authorization type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The authorization url querystring and a generated state value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.FetchToken", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.FetchToken", "kind": "function", "doc": "<p>Fetch an access token from the token endpoint.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**kwargs:</strong>  Additional keyword arguments to add to the </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A token dictionary.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.HasScopeChanged", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.HasScopeChanged", "kind": "function", "doc": "<p>Indicates whether the scope has changed between this session and the authorization\naccess token scope values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>token (dict):</strong>  The authorization access token dictionary to check the scope of.</li>\n<li><strong>scope (str | list[str]):</strong>  A space-delimited list of scope identifiers you wish to request access to.  </li>\n</ul>\n\n<p>If True, you need the user to go through the OAuth authentication dance before \nOAuth-protected requests to the resource will succeed.</p>\n\n<p>If False, then you can reasonably expect OAuth-protected requests to the resource to succeed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">scope</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.AuthorizeWithConsole", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.AuthorizeWithConsole", "kind": "function", "doc": "<p>Executes the authorization flow without starting a web server.</p>\n\n<p>Note that you must have 'urn:ietf:wg:oauth:2.0:oob' as a redirect URI value \nin the provider app settings for this to work.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>authorization_prompt_message (str | None):</strong>    The message to display that will inform the user to navigate to the \nauthorization URL. If null, then no message is displayed.</li>\n<li><strong>open_browser (bool):</strong>    True to open the authorization URL in the user's browser; otherwise, False\nto not open a browser.</li>\n<li><strong>code_message (str):</strong>    The message to display in the console prompting the user to enter the authorization code.</li>\n<li><strong>token_audience (str):</strong>    Passed along with the request for an access token. <br />\nIt determines the endpoints with which the token can be used. <br />\nDefault is null.</li>\n<li><strong>force (bool):</strong>    True to authorize, even if we already have a token;  otherwise, False\nto only authorize if the token is not authorized, has expired, or the\nscope has changed.</li>\n<li><strong>token_test (Callable):</strong>    Function that receives this object for a param, makes a call, and returns \nthe response.</li>\n<li><strong>kwargs:</strong>   Additional keyword arguments passed through to <code>authorization_url</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The OAuth 2.0 credentials for the user.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">authorization_prompt_message</span><span class=\"o\">=</span><span class=\"s1\">&#39;Please visit this URL to authorize this application: </span><span class=\"si\">{url}</span><span class=\"s1\">&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">open_browser</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">code_message</span><span class=\"o\">=</span><span class=\"s1\">&#39;Enter the authorization code: &#39;</span>,</span><span class=\"param\">\t<span class=\"n\">token_audience</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">token_test</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.AuthorizeWithServer", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.AuthorizeWithServer", "kind": "function", "doc": "<p>Executes the authorization flow by starting a temporary local web server\nto listen for the authorization response.</p>\n\n<p>Note that you must have 'http://localhost:8080/' as a redirect URI value \nin the provider app settings for this to work.</p>\n\n<p>The server strategy instructs the user to open the authorization URL in\ntheir browser and will attempt to automatically open the URL for them.\nIt will start a local web server to listen for the authorization\nresponse. Once authorization is complete the authorization server will\nredirect the user's browser to the local web server. The web server\nwill get the authorization code from the response and shutdown. The\ncode is then exchanged for a token.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>host (str):</strong>    The hostname for the local redirect server. This will be served \nover http, not https.</li>\n<li><strong>bind_addr (str):</strong>    Optionally provide an ip address for the redirect server to listen \non when it is not the same as host (e.g. in a container). <br />\nDefault value is None, which means that the redirect server will listen\non the ip address specified in the host parameter.</li>\n<li><strong>port (int / list[int]):</strong>    The port for the local redirect server. <br />\nIf a list, it would find the first open port in the range.</li>\n<li><strong>authorization_prompt_message (str | None):</strong>    The message to display that will inform the user to navigate to the \nauthorization URL. If null, then no message is displayed.</li>\n<li><strong>success_message (str):</strong>    The message to display in the web browser that the authorization flow \nis complete.</li>\n<li><strong>open_browser (bool):</strong>    True to open the authorization URL in the user's browser; otherwise, False\nto not open a browser.</li>\n<li><strong>redirect_uri_trailing_slash (bool):</strong>    True to add trailing slash when constructing the redirect_uri; otherwise,\nFalse to not add a trailing slash. <br />\nDefault value is True.</li>\n<li><strong>timeout_seconds (int):</strong>    If set, an error will be raised after the timeout value if the user did not\nrespond to the authorization request.  The value is in seconds. <br />\nWhen set to None there is no timeout. <br />\nDefault value is 120 (2 minutes).</li>\n<li><strong>token_audience (str):</strong>    Passed along with the request for an access token. <br />\nIt determines the endpoints with which the token can be used. <br />\nDefault is null.</li>\n<li><strong>force (bool):</strong>    True to authorize, even if we already have a token;  otherwise, False\nto only authorize if the token is not authorized, has expired, or the\nscope has changed.</li>\n<li><strong>token_test (Callable):</strong>    Function that receives this object for a param, makes a call, and returns \nthe response.</li>\n<li><strong>kwargs:</strong>   Additional keyword arguments passed through to <code>authorization_url</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The OAuth 2.0 credentials for the user.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bind_addr</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"mi\">8080</span>,</span><span class=\"param\">\t<span class=\"n\">authorization_prompt_message</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Please visit this URL to authorize this application: </span><span class=\"si\">{url}</span><span class=\"s1\">&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">success_message</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;The authentication flow has completed; you may close this window (or tab).&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">open_browser</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">redirect_uri_trailing_slash</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_seconds</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">120</span>,</span><span class=\"param\">\t<span class=\"n\">token_audience</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">token_test</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.oauthcli.authclient.AuthClient.RefreshToken", "modulename": "spotifywebapipython.oauthcli.authclient", "qualname": "AuthClient.RefreshToken", "kind": "function", "doc": "<p>Refreshes the current session token.</p>\n\n<p>If a TokenUpdater callable was specified, then the token is refreshed externally by the \ncallable function.</p>\n\n<p>Otherwise, the session <code>refresh_token</code> method is invoked using the refresh token value.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**kwargs:</strong>   Additional keyword arguments to include in the token request.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A token dictionary.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.const", "modulename": "spotifywebapipython.const", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.const.VERSION", "modulename": "spotifywebapipython.const", "qualname": "VERSION", "kind": "variable", "doc": "<p>Current version of the Spotify Client Python3 Library.</p>\n", "annotation": ": str", "default_value": "&#x27;1.0.28&#x27;"}, {"fullname": "spotifywebapipython.const.PACKAGENAME", "modulename": "spotifywebapipython.const", "qualname": "PACKAGENAME", "kind": "variable", "doc": "<p>Name of our package (used by PDoc Documentation build).</p>\n", "annotation": ": str", "default_value": "&#x27;spotifywebapiPython&#x27;"}, {"fullname": "spotifywebapipython.const.PDOC_BRAND_ICON_URL", "modulename": "spotifywebapipython.const", "qualname": "PDOC_BRAND_ICON_URL", "kind": "variable", "doc": "<p>PDoc Documentation brand icon link url that is displayed in the help document TOC.</p>\n", "annotation": ": str", "default_value": "&#x27;https://developer.spotify.com/documentation/web-api&#x27;"}, {"fullname": "spotifywebapipython.const.PDOC_BRAND_ICON_URL_SRC", "modulename": "spotifywebapipython.const", "qualname": "PDOC_BRAND_ICON_URL_SRC", "kind": "variable", "doc": "<p>PDoc Documentation brand icon link url that is displayed in the help document TOC.</p>\n", "annotation": ": str", "default_value": "&#x27;spotifywebapipython.ico&#x27;"}, {"fullname": "spotifywebapipython.const.PDOC_BRAND_ICON_URL_TITLE", "modulename": "spotifywebapipython.const", "qualname": "PDOC_BRAND_ICON_URL_TITLE", "kind": "variable", "doc": "<p>PDoc Documentation brand icon link title that is displayed in the help document TOC.</p>\n", "annotation": ": str", "default_value": "&#x27;A Spotify Web Api Client&#x27;"}, {"fullname": "spotifywebapipython.const.SPOTIFY_API_AUTHORIZE_URL", "modulename": "spotifywebapipython.const", "qualname": "SPOTIFY_API_AUTHORIZE_URL", "kind": "variable", "doc": "<p>Url used to request user authorization permission for an authorization token.</p>\n", "default_value": "&#x27;https://accounts.spotify.com/authorize&#x27;"}, {"fullname": "spotifywebapipython.const.SPOTIFY_API_TOKEN_URL", "modulename": "spotifywebapipython.const", "qualname": "SPOTIFY_API_TOKEN_URL", "kind": "variable", "doc": "<p>Url used to request or renew a Spotify authorization token.</p>\n", "default_value": "&#x27;https://accounts.spotify.com/api/token&#x27;"}, {"fullname": "spotifywebapipython.const.SPOTIFY_WEBAPI_URL_BASE", "modulename": "spotifywebapipython.const", "qualname": "SPOTIFY_WEBAPI_URL_BASE", "kind": "variable", "doc": "<p>Url base name used to access tthe Spotify Web API.</p>\n", "default_value": "&#x27;https://api.spotify.com/v1&#x27;"}, {"fullname": "spotifywebapipython.const.SPOTIFY_DEFAULT_MARKET", "modulename": "spotifywebapipython.const", "qualname": "SPOTIFY_DEFAULT_MARKET", "kind": "variable", "doc": "<p>Default country code to use if a country code was not supplied on a request and the \nUserProfile.Country value is not set (e.g. public access token in effect. </p>\n\n<p>Default value is \"US\".</p>\n", "annotation": ": str", "default_value": "&#x27;US&#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_METHOD_RESULT", "modulename": "spotifywebapipython.const", "qualname": "TRACE_METHOD_RESULT", "kind": "variable", "doc": "<p>%s result</p>\n", "default_value": "&#x27;%s result&#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_METHOD_RESULT_TYPE", "modulename": "spotifywebapipython.const", "qualname": "TRACE_METHOD_RESULT_TYPE", "kind": "variable", "doc": "<p>%s result - %s object</p>\n", "default_value": "&#x27;%s result - %s object &#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_METHOD_RESULT_TYPE_CACHED", "modulename": "spotifywebapipython.const", "qualname": "TRACE_METHOD_RESULT_TYPE_CACHED", "kind": "variable", "doc": "<p>%s result - %s object (%s)</p>\n", "default_value": "&#x27;%s result - %s object (%s)&#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_METHOD_RESULT_TYPE_PAGE", "modulename": "spotifywebapipython.const", "qualname": "TRACE_METHOD_RESULT_TYPE_PAGE", "kind": "variable", "doc": "<p>%s page result - %s object</p>\n", "default_value": "&#x27;%s page result - %s object &#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_MSG_AUTHTOKEN_CREATE", "modulename": "spotifywebapipython.const", "qualname": "TRACE_MSG_AUTHTOKEN_CREATE", "kind": "variable", "doc": "<p>Creating a \"%s\" authorization access token</p>\n", "default_value": "&#x27;Creating a &quot;%s&quot; authorization access token&#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_MSG_USERPROFILE", "modulename": "spotifywebapipython.const", "qualname": "TRACE_MSG_USERPROFILE", "kind": "variable", "doc": "<p>User Profile Object: DisplayName=\"%s\", EMail=\"%s\"</p>\n", "default_value": "&#x27;User Profile Object: DisplayName=&quot;%s&quot;, EMail=&quot;%s&quot;&#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_MSG_AUTOPAGING_NEXT", "modulename": "spotifywebapipython.const", "qualname": "TRACE_MSG_AUTOPAGING_NEXT", "kind": "variable", "doc": "<p>Requesting next page of items %s</p>\n", "default_value": "&#x27;Requesting next page of items %s&#x27;"}, {"fullname": "spotifywebapipython.const.TRACE_WARN_SPOTIFY_SEARCH_NO_MARKET", "modulename": "spotifywebapipython.const", "qualname": "TRACE_WARN_SPOTIFY_SEARCH_NO_MARKET", "kind": "variable", "doc": "<p>Warning - Market value (aka country code) was not specified for '%s' search request, and user profile did not have a country code set.  This may cause Spotify Web API to return some weird results, or even cause an exception!</p>\n", "annotation": ": str", "default_value": "&quot;Warning - Market value (aka country code) was not specified for &#x27;%s&#x27; search request, and user profile did not have a country code set.  This may cause Spotify Web API to return some weird results, or even cause an exception!&quot;"}, {"fullname": "spotifywebapipython.saappmessages", "modulename": "spotifywebapipython.saappmessages", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.saappmessages.SAAppMessages", "modulename": "spotifywebapipython.saappmessages", "qualname": "SAAppMessages", "kind": "class", "doc": "<p>A strongly-typed resource class, for looking up localized strings, etc.</p>\n\n<h6 id=\"threadsafety\">Threadsafety:</h6>\n\n<blockquote>\n  <p>This class is fully thread-safe.</p>\n</blockquote>\n"}, {"fullname": "spotifywebapipython.saappmessages.SAAppMessages.UNHANDLED_EXCEPTION", "modulename": "spotifywebapipython.saappmessages", "qualname": "SAAppMessages.UNHANDLED_EXCEPTION", "kind": "variable", "doc": "<p>SAM0001E - An unhandled exception occured while processing method \"{0}\".\n{1}</p>\n", "annotation": ": str", "default_value": "&#x27;SAM0001E - An unhandled exception occured while processing method &quot;{0}&quot;.\\n{1}&#x27;"}, {"fullname": "spotifywebapipython.saappmessages.SAAppMessages.ARGUMENT_REQUIRED_ERROR", "modulename": "spotifywebapipython.saappmessages", "qualname": "SAAppMessages.ARGUMENT_REQUIRED_ERROR", "kind": "variable", "doc": "<p>SAM0002E - The \"%s\" method \"%s\" argument is required, and cannot be null or None.</p>\n", "annotation": ": str", "default_value": "&#x27;SAM0002E - The &quot;%s&quot; method &quot;%s&quot; argument is required, and cannot be null or None.&#x27;"}, {"fullname": "spotifywebapipython.saappmessages.SAAppMessages.ARGUMENT_TYPE_ERROR", "modulename": "spotifywebapipython.saappmessages", "qualname": "SAAppMessages.ARGUMENT_TYPE_ERROR", "kind": "variable", "doc": "<p>SAM0003E - The \"%s\" method \"%s\" argument must be of type \"%s\"; the \"%s\" type is not supported for this argument.</p>\n", "annotation": ": str", "default_value": "&#x27;SAM0003E - The &quot;%s&quot; method &quot;%s&quot; argument must be of type &quot;%s&quot;; the &quot;%s&quot; type is not supported for this argument.&#x27;"}, {"fullname": "spotifywebapipython.saappmessages.SAAppMessages.MSG_SPOTIFY_WEB_API_ERROR", "modulename": "spotifywebapipython.saappmessages", "qualname": "SAAppMessages.MSG_SPOTIFY_WEB_API_ERROR", "kind": "variable", "doc": "<p>SAM1001E - Spotify Web API returned an error status while processing the \"{methodname}\" method.\nStatus: {status} - {httpreason}\nMessage: \"{message}\"</p>\n", "annotation": ": str", "default_value": "&#x27;SAM1001E - Spotify Web API returned an error status while processing the &quot;{methodname}&quot; method.\\nStatus: {status} - {httpreason}\\nMessage: &quot;{message}&quot;&#x27;"}, {"fullname": "spotifywebapipython.saappmessages.SAAppMessages.MSG_SPOTIFY_WEB_API_AUTH_ERROR", "modulename": "spotifywebapipython.saappmessages", "qualname": "SAAppMessages.MSG_SPOTIFY_WEB_API_AUTH_ERROR", "kind": "variable", "doc": "<p>SAM1002E - Spotify Web API returned an authorization error status while processing the \"{methodname}\" method.\nHTTP Status: {httpstatus} - {httpreason}\nError: {error}\nError Description: \"{errordescription}\"</p>\n", "annotation": ": str", "default_value": "&#x27;SAM1002E - Spotify Web API returned an authorization error status while processing the &quot;{methodname}&quot; method.\\nHTTP Status: {httpstatus} - {httpreason}\\nError: {error}\\nError Description: &quot;{errordescription}&quot;&#x27;"}, {"fullname": "spotifywebapipython.sautils", "modulename": "spotifywebapipython.sautils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.sautils.GetUnixTimestampMSFromUtcNow", "modulename": "spotifywebapipython.sautils", "qualname": "GetUnixTimestampMSFromUtcNow", "kind": "function", "doc": "<p>Returns a Unix millisecond timestamp value from the current utc datetime for the\ndifference specified by input arguments.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">days</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">hours</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">minutes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">seconds</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.sautils.static_init", "modulename": "spotifywebapipython.sautils", "qualname": "static_init", "kind": "function", "doc": "<p>Define the decorator used to call an initializer for a class with all static methods.\nThis allows static variables to be initialized one time for the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.sautils.export", "modulename": "spotifywebapipython.sautils", "qualname": "export", "kind": "function", "doc": "<p>Define the decorator used to modify a module's \"__all__\" variable.\nThis avoids us having to manually modify a module's \"__all__\" variable when adding new classes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fn</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.sautils.Event", "modulename": "spotifywebapipython.sautils", "qualname": "Event", "kind": "class", "doc": "<p>C# like event processing in Python3.</p>\n\n<p><details>\n    <summary>View Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Define the class that will be raising events:</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyFileWatcher</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fileChanged</span> <span class=\"o\">=</span> <span class=\"n\">Event</span><span class=\"p\">()</span>      <span class=\"c1\"># define event</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">watchFiles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">source_path</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;foo&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fileChanged</span><span class=\"p\">(</span><span class=\"n\">source_path</span><span class=\"p\">)</span>   <span class=\"c1\"># fire event</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">log_file_change</span><span class=\"p\">(</span><span class=\"n\">source_path</span><span class=\"p\">):</span>       <span class=\"c1\"># event handler 1</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">&quot;</span><span class=\"si\">%r</span><span class=\"s2\"> changed.&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">source_path</span><span class=\"p\">,)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">log_file_change2</span><span class=\"p\">(</span><span class=\"n\">source_path</span><span class=\"p\">):</span>      <span class=\"c1\"># event handler 2</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">&quot;</span><span class=\"si\">%r</span><span class=\"s2\"> changed!&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">source_path</span><span class=\"p\">,)</span>\n\n<span class=\"c1\"># Define the code that will be handling raised events.</span>\n<span class=\"n\">watcher</span>              <span class=\"o\">=</span> <span class=\"n\">MyFileWatcher</span><span class=\"p\">()</span>\n<span class=\"n\">watcher</span><span class=\"o\">.</span><span class=\"n\">fileChanged</span> <span class=\"o\">+=</span> <span class=\"n\">log_file_change2</span>\n<span class=\"n\">watcher</span><span class=\"o\">.</span><span class=\"n\">fileChanged</span> <span class=\"o\">+=</span> <span class=\"n\">log_file_change</span>\n<span class=\"n\">watcher</span><span class=\"o\">.</span><span class=\"n\">fileChanged</span> <span class=\"o\">-=</span> <span class=\"n\">log_file_change2</span>\n<span class=\"n\">watcher</span><span class=\"o\">.</span><span class=\"n\">watchFiles</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p></details></p>\n"}, {"fullname": "spotifywebapipython.sautils.Event.__init__", "modulename": "spotifywebapipython.sautils", "qualname": "Event.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span>)</span>"}, {"fullname": "spotifywebapipython.sautils.Event.handlers", "modulename": "spotifywebapipython.sautils", "qualname": "Event.handlers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.sautils.Event.fire", "modulename": "spotifywebapipython.sautils", "qualname": "Event.fire", "kind": "function", "doc": "<p>Calls (i.e. \"fires\") all method handlers defined for this event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.sautils.Event.getHandlerCount", "modulename": "spotifywebapipython.sautils", "qualname": "Event.getHandlerCount", "kind": "function", "doc": "<p>Returns the number of method handlers defined for this event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.sautils.Event.handle", "modulename": "spotifywebapipython.sautils", "qualname": "Event.handle", "kind": "function", "doc": "<p>Adds a method handler for this event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.sautils.Event.unhandle", "modulename": "spotifywebapipython.sautils", "qualname": "Event.unhandle", "kind": "function", "doc": "<p>Removes the specified method handler for this event.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>handler (object):</strong>  The method handler to remove.</li>\n</ul>\n\n<p>This method will not throw an exception.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.sautils.Event.unhandle_all", "modulename": "spotifywebapipython.sautils", "qualname": "Event.unhandle_all", "kind": "function", "doc": "<p>Removes all method handlers (if any) for this event.</p>\n\n<p>This method will not throw an exception.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyapierror", "modulename": "spotifywebapipython.spotifyapierror", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.spotifyapierror.SpotifyApiError", "modulename": "spotifywebapipython.spotifyapierror", "qualname": "SpotifyApiError", "kind": "class", "doc": "<p>Exception thrown when a SpotifyApi error occurs.</p>\n", "bases": "builtins.Exception"}, {"fullname": "spotifywebapipython.spotifyapierror.SpotifyApiError.__init__", "modulename": "spotifywebapipython.spotifyapierror", "qualname": "SpotifyApiError.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>message (str):</strong>  A short description of the cause of the error.</li>\n<li><strong>ex (Exception):</strong>  Inner exception that caused the current exception. <br />\nDefault is None.</li>\n<li><strong>logsi (SISession):</strong>  Trace session object that this exception will be logged to, or null to bypass trace logging. <br />\nDefault is None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ex</span><span class=\"p\">:</span> <span class=\"ne\">Exception</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">logsi</span><span class=\"p\">:</span> <span class=\"n\">smartinspectpython</span><span class=\"o\">.</span><span class=\"n\">sisession</span><span class=\"o\">.</span><span class=\"n\">SISession</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.spotifyapierror.SpotifyApiError.Message", "modulename": "spotifywebapipython.spotifyapierror", "qualname": "SpotifyApiError.Message", "kind": "variable", "doc": "<p>A description of the cause of the error.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyapierror.SpotifyApiError.ToString", "modulename": "spotifywebapipython.spotifyapierror", "qualname": "SpotifyApiError.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyapimessage", "modulename": "spotifywebapipython.spotifyapimessage", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage", "kind": "class", "doc": "<p>A class representing an exchange object between a client and the Spotify Web API.</p>\n"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.__init__", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>methodName (str):</strong>  Name of the client method that executed the request.</li>\n<li><strong>uri (str):</strong>  Target uri which should be queried.</li>\n<li><strong>urlParameters (dict):</strong>  Parameter values to be placed into the http request url, if the specified\nuri service requires it; otherwise, None.</li>\n<li><strong>requestData (dict):</strong>  Request data that is to be placed into the http request body, if the specified\nuri service requires it; otherwise, None.</li>\n<li><strong>requestHeaders (dict):</strong>  Request header that is to be placed into the http request headers, if the specified\nuri service requires it; otherwise, None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">methodName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">urlParameters</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">requestData</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">requestHeaders</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.HasRequestData", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.HasRequestData", "kind": "variable", "doc": "<p>Returns True if request data is present, and should be supplied as part of the \nhttp request body; otherwise, False.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.HasRequestHeaders", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.HasRequestHeaders", "kind": "variable", "doc": "<p>Returns True if request headers are present, and should be supplied as part of the \nhttp request headers; otherwise, False.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.HasRequestJson", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.HasRequestJson", "kind": "variable", "doc": "<p>Returns True if request json is present, and should be supplied as part of the \nhttp request body; otherwise, False.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.HasUrlParameters", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.HasUrlParameters", "kind": "variable", "doc": "<p>Returns True if url parameters are present, and should be supplied as part of the \nhttp request url; otherwise, False.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.HasResponseData", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.HasResponseData", "kind": "variable", "doc": "<p>Returns True if data was returned with the response; otherwise, False.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.IsRequestDataEncoded", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.IsRequestDataEncoded", "kind": "variable", "doc": "<p>Indicates if the <code>RequestData</code> property is already encoded (True) or not (False).</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.IsResponseEmpty", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.IsResponseEmpty", "kind": "variable", "doc": "<p>Returns True if the response contains no data (e.g. a pass / fail response)\nand is not null; otherwise, False.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.IsSimpleResponse", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.IsSimpleResponse", "kind": "variable", "doc": "<p>Returns True if the response contains no data (e.g. a pass / fail response); \notherwise, False if the response requires further processing.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.MethodName", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.MethodName", "kind": "variable", "doc": "<p>The client method that executed the request.</p>\n\n<p>Example: <code>GetArtist</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.RequestData", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.RequestData", "kind": "variable", "doc": "<p>Request data that is to be placed into the http request body, if the specified\nuri service requires it.</p>\n", "annotation": ": dict"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.RequestHeaders", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.RequestHeaders", "kind": "variable", "doc": "<p>Request header data that is to be sent with the http request body, if the specified\nuri service requires it.</p>\n", "annotation": ": Mapping[str, str]"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.RequestJson", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.RequestJson", "kind": "variable", "doc": "<p>Request data that is to be placed into the http request body, if the specified\nuri service requires it.</p>\n", "annotation": ": dict"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.ResponseData", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.ResponseData", "kind": "variable", "doc": "<p>Response data returned from the server, if the specified uri returned\na response that contains data.</p>\n", "annotation": ": dict"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.Uri", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.Uri", "kind": "variable", "doc": "<p>Target uri which should be queried.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.UrlParameters", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.UrlParameters", "kind": "variable", "doc": "<p>Parameter values to be placed into the http request url, if the specified\nuri service requires it.</p>\n", "annotation": ": dict"}, {"fullname": "spotifywebapipython.spotifyapimessage.SpotifyApiMessage.ToString", "modulename": "spotifywebapipython.spotifyapimessage", "qualname": "SpotifyApiMessage.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyauthtoken", "modulename": "spotifywebapipython.spotifyauthtoken", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken", "kind": "class", "doc": "<p>Spotify Authorization Token class.</p>\n"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.__init__", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>authorizationType (str):</strong>  Authorization type chosen when this token was generated.</li>\n<li><strong>profileId (str):</strong>  Profile identifier used when loading / storing the token to disk.  </li>\n<li><strong>root (dict):</strong>  Spotify Web API JSON response in dictionary format, used to load object\nattributes; otherwise, None to not load attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">authorizationType</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">profileId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.AccessToken", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.AccessToken", "kind": "variable", "doc": "<p>An access token that can be provided in subsequent calls to Spotify Web API services.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.AuthorizationType", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.AuthorizationType", "kind": "variable", "doc": "<p>Authorization type chosen when this token was generated.</p>\n\n<p>It will be one of the following values:</p>\n\n<ul>\n<li>\"Authorization Code\".</li>\n<li>\"Authorization Code with PKCE\".</li>\n<li>\"Client Credentials\".</li>\n<li>\"Implicit Grant\".</li>\n</ul>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.CreateDateTimeUtc", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.CreateDateTimeUtc", "kind": "function", "doc": "<p>DateTime (in UTC format) that the authorization token was created.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.ExpireDateTimeUtc", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.ExpireDateTimeUtc", "kind": "variable", "doc": "<p>DateTime (in UTC format) that the authorization token will expire.</p>\n", "annotation": ": datetime.datetime"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.ExpiresIn", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.ExpiresIn", "kind": "variable", "doc": "<p>The time period (in seconds) for which the access token is valid.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.ExpiresAt", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.ExpiresAt", "kind": "variable", "doc": "<p>DateTime (in epoch seconds) that the authorization token will expire.</p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.HeaderKey", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.HeaderKey", "kind": "variable", "doc": "<p>Returns a string containing the header key to assign the authorization token value to.\nThis will always return 'Authorization'.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.HeaderValue", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.HeaderValue", "kind": "variable", "doc": "<p>Returns the value portion of the authorization header, in the form of '{tokentype} {token}'.</p>\n\n<p>Example: `Bearer {token value ...}'</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.IsExpired", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.IsExpired", "kind": "variable", "doc": "<p>Returns true if the token has expired; otherwise, False if not expired.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.ProfileId", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.ProfileId", "kind": "variable", "doc": "<p>Profile identifier used when loading / storing the token to disk.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.RefreshToken", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.RefreshToken", "kind": "variable", "doc": "<p>The refresh token returned from the authorization token request.</p>\n\n<p>This is only set when using the \"Authorization code\" or \"Authorization code with PKCE\"\nauthorization types.  </p>\n\n<p>There will be no refresh token for the \"Client Credentials\" or \"Impllicit Grant\"\nauthorization types.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.Scope", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.Scope", "kind": "variable", "doc": "<p>A space-separated list of scopes which have been granted for the <code>AccessToken</code>.</p>\n\n<p>If no scopes are specified, authorization will be granted only to access publicly available \ninformation: that is, only information normally visible in the Spotify desktop, web, and \nmobile players.</p>\n\n<p>Scopes can only be used with the \"Authorization Code\", \"Authorization Code with PKCE\", and\n\"Implicit Grant\" authorization types.</p>\n\n<p>Scopes cannot be used with the \"Client Credentials\" authorization type.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.Scopes", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.Scopes", "kind": "variable", "doc": "<p>A list of scopes which have been granted for the <code>AccessToken</code>.</p>\n", "annotation": ": list[str]"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.TokenType", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.TokenType", "kind": "variable", "doc": "<p>How the access token may be used: always \"Bearer\" in this case.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyauthtoken.SpotifyAuthToken.ToString", "modulename": "spotifywebapipython.spotifyauthtoken", "qualname": "SpotifyAuthToken.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient", "modulename": "spotifywebapipython.spotifyclient", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient", "kind": "class", "doc": "<p>The SpotifyClient uses the Spotify Web API to retrieve information from the\nSpotify music service.</p>\n"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.__init__", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>manager (urllib3.PoolManager):</strong>  The manager for HTTP requests to the device.</li>\n<li><strong>tokenStorageDir (str):</strong>  The directory path that will contain the <code>tokens.json</code> file. <br />\nA null value will default to the platform specific storage location: <br />\nExample for Windows OS = <code>C:\\ProgramData\\SpotifyWebApiPython</code></li>\n<li><strong>tokenUpdater (Callable):</strong>  A method to call when a token needs to be refreshed by an external provider. <br />\nThe defined method is called with no parameters, and should return a token dictionary. <br />\nDefault is null.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">manager</span><span class=\"p\">:</span> <span class=\"n\">urllib3</span><span class=\"o\">.</span><span class=\"n\">poolmanager</span><span class=\"o\">.</span><span class=\"n\">PoolManager</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenStorageDir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenUpdater</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SpotifyApiAuthorizeUrl", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SpotifyApiAuthorizeUrl", "kind": "variable", "doc": "<p>Url used to request user authorization permission for an authorization token.</p>\n", "default_value": "&#x27;https://accounts.spotify.com/authorize&#x27;"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SpotifyApiTokenUrl", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SpotifyApiTokenUrl", "kind": "variable", "doc": "<p>Url used to request or renew a Spotify authorization token.</p>\n", "default_value": "&#x27;https://accounts.spotify.com/api/token&#x27;"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SpotifyWebApiUrlBase", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SpotifyWebApiUrlBase", "kind": "variable", "doc": "<p>Url base name used to access tthe Spotify Web API.</p>\n", "default_value": "&#x27;https://api.spotify.com/v1&#x27;"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ConfigurationCache", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ConfigurationCache", "kind": "variable", "doc": "<p>A dictionary of cached configuration objects that have been obtained from\nthe spotify web api.  Use the objects in this cache whenever it is too\nexpensive or time consuming to make a real-time request from the spotify web api.</p>\n\n<p>The configuration cache is updated for selected \"Get...()\" methods that return\ndevice information.  All of the selected \"Get...()\" methods have a <code>refresh:bool</code>\nargument that controls where information is obtained from; if refresh=True,\nthen the spotify web api is queried for real-time configuration information. If\nrefresh=False, then the configuration information is pulled from the configuration\ncache dictionary; if the cache does not contain the object, then the spotify web api\nis queried for real-time configuration information.</p>\n\n<p>It is obviously MUCH faster to retrieve configuration objects from the cache than\nfrom real-time spotify web api queries.  This works very well for configuration\nobjects that do not change very often (e.g. Devices, Categories, Markets, etc).\nYou will still want to make real-time queries for configuration objects\nthat change frequently (e.g. PlayerPlayState, PlayHistory, etc).</p>\n\n<p>This property is read-only, and is set when the class is instantiated.  The\ndictionary entries can be changed, but not the dictionary itself.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The <code>_ConfigurationCache</code> property value.</p>\n</blockquote>\n", "annotation": ": dict"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.AuthToken", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.AuthToken", "kind": "variable", "doc": "<p>Authorization token used to access the Spotify Web API.</p>\n", "annotation": ": spotifywebapipython.spotifyauthtoken.SpotifyAuthToken"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ClientId", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ClientId", "kind": "variable", "doc": "<p>The unique identifier of the application.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The ClientId of the AuthClient instance if set; otherwise, null.</p>\n</blockquote>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.Manager", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.Manager", "kind": "variable", "doc": "<p>The request PoolManager object to use for http requests to the Spotify Web API.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The <code>Manager</code> property value.</p>\n</blockquote>\n", "annotation": ": urllib3.poolmanager.PoolManager"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.TokenProfileId", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.TokenProfileId", "kind": "variable", "doc": "<p>Profile identifier used when loading / storing an authorization token from / to disk.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The TokenProfileId of the AuthClient instance if set; otherwise, null.</p>\n</blockquote>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.TokenStorageDir", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.TokenStorageDir", "kind": "variable", "doc": "<p>The directory path that will contain the authorization token cache file.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.UserProfile", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.UserProfile", "kind": "variable", "doc": "<p>Information about the user from their account profile.</p>\n\n<p>This information is only populated for authorized access types; furthermore, some \nproperties may not be populated if the appropriate scope(s) was not specified when\nthe access token was created.  Please refer to the <code>UserProfile</code> model for the\nproperties that require specific scope.</p>\n", "annotation": ": spotifywebapipython.models.userprofile.UserProfile"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.MakeRequest", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.MakeRequest", "kind": "function", "doc": "<p>Performs a generic Spotify Web API request.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>method (str):</strong>   The preferred HTTP method (e.g. \"GET\", \"POST\", etc).</li>\n<li><strong>msg (SpotifyApiMessage):</strong>   The api message object that contains input parameters and the\noutput response.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The status code (integer) or allowed methods (list).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If an error occurs while requesting content.</li>\n</ul>\n\n<p>A 400 status code is immediately returned for the following scenarios:  </p>\n\n<ul>\n<li>The method argument is not supplied.  </li>\n<li>The msg argument is not supplied.  </li>\n</ul>\n\n<p>Per Spotify Developer Docs, here are the possible status codes:  </p>\n\n<ul>\n<li>200 OK - The request has succeeded. The client can read the result of the request in the body and the headers of the response.  </li>\n<li>201 Created - The request has been fulfilled and resulted in a new resource being created.  </li>\n<li>202 Accepted - The request has been accepted for processing, but the processing has not been completed.  </li>\n<li>204 No Content - The request has succeeded but returns no message body.  </li>\n<li>304 Not Modified. See Conditional requests.  </li>\n<li>400 Bad Request - The request could not be understood by the server due to malformed syntax. The message body will contain more information; see Response Schema.  </li>\n<li>401 Unauthorized - The request requires user authentication or, if the request included authorization credentials, authorization has been refused for those credentials.  </li>\n<li>403 Forbidden - The server understood the request, but is refusing to fulfill it.  </li>\n<li>404 Not Found - The requested resource could not be found. This error can be due to a temporary or permanent condition.  </li>\n<li>429 Too Many Requests - Rate limiting has been applied.  </li>\n<li>500 Internal Server Error. You should never receive this error because our clever coders catch them all ... but if you are unlucky enough to get one, please report it to us through a comment at the bottom of this page.  </li>\n<li>502 Bad Gateway - The server was acting as a gateway or proxy and received an invalid response from the upstream server.  </li>\n<li>503 Service Unavailable - The server is currently unable to handle the request due to a temporary condition which will be alleviated after some delay. You can choose to resend the request again.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">spotifyapimessage</span><span class=\"o\">.</span><span class=\"n\">SpotifyApiMessage</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.AddPlayerQueueItem", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.AddPlayerQueueItem", "kind": "function", "doc": "<p>Add an item to the end of the user's current playback queue. </p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>uri (str):</strong>  The uri of the item to add to the queue; must be a track or an episode uri. <br />\nExample: <code>spotify:track:4iV5W9uYEdYUVa79Axb7Rh</code></li>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># add an item to the end of the user&#39;s current playback queue.</span>\n    <span class=\"n\">trackUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:27JODWXo4VNa6s7HqDL9yQ&#39;</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding item to the users current playback queue:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">trackUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AddPlayerQueueItem</span><span class=\"p\">(</span><span class=\"n\">trackUri</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - item was added to the queue&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.AddPlaylistCoverImage", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.AddPlaylistCoverImage", "kind": "function", "doc": "<p>Replace the image used to represent a specific playlist.</p>\n\n<p>This method requires the <code>ugc-image-upload</code>, <code>playlist-modify-public</code> \nand <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist. <br />\nExample: <code>5v5ETK9WFXAnGQ3MRubKuE</code></li>\n<li><strong>imagePath (str):</strong>  The fully-qualified path of the image to be uploaded. <br />\nThe image must be in JPEG format, and cannot exceed 256KB in Base64 encoded size.  </li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># upload playlist cover image for specified playlist id.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"n\">imagePath</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;./test/testdata/PlaylistCoverImage.jpg&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Updating cover image for playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">From path: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">imagePath</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AddPlaylistCoverImage</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">imagePath</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - cover image was uploaded&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">imagePath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.AddPlaylistItems", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.AddPlaylistItems", "kind": "function", "doc": "<p>Add one or more items to a user's playlist.</p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist.\nExample: <code>5AC9ZXA7nJ7oGWO911FuDG</code></li>\n<li><strong>uris (str):</strong>    A comma-separated list of Spotify URIs to add; can be track or episode URIs. <br />\nExample: <code>spotify:track:4iV5W9uYEdYUVa79Axb7Rh,spotify:episode:512ojhOuo1ktJprKbVcKyQ</code>. <br />\nA maximum of 100 items can be added in one request.</li>\n<li><strong>position (int):</strong>    The position to insert the items, a zero-based index. <br />\nFor example, to insert the items in the first position: position=0; <br />\nto insert the items in the third position: position=2. <br />\nIf omitted, the items will be appended to the playlist. <br />\nItems are added in the order they are listed in the <code>uris</code> argument.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A snapshot ID for the updated playlist.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># add items to end of a playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"n\">itemUris</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:2takcwOaAZWiXQijPHIx7B, spotify:track:4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding items to end of playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AddPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">itemUris</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># add items to begining of a playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"n\">itemUris</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:1kWUud3vY5ij5r62zxpTRy&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding items to beginning of playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AddPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">itemUris</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">uris</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ChangePlaylistDetails", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ChangePlaylistDetails", "kind": "function", "doc": "<p>Change a playlist's details (name, description, and public / private state).  </p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist.\nExample: <code>5AC9ZXA7nJ7oGWO911FuDG</code></li>\n<li><strong>name (str):</strong>  The updated name for the playlist, for example \"My New Playlist Title\"\nThis name does not need to be unique; a user may have several playlists with \nthe same name.</li>\n<li><strong>description (str):</strong>  The updated playlist description, as displayed in Spotify Clients and in the Web API.</li>\n<li><strong>public (bool):</strong>  If true, the playlist will be public; if false, it will be private.  </li>\n<li><strong>collaborative (bool):</strong>  If true, the playlist will become collaborative and other users will be able to modify \nthe playlist in their Spotify client. <br />\nNote: You can only set collaborative to true on non-public playlists.</li>\n</ul>\n\n<p>The user must own the playlist.</p>\n\n<p>The <code>public</code> argument will be set to False if the <code>collaborative</code> argument is True.</p>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Setting the <code>public</code> argument to true will publish the playlist on the user's profile,\nwhich means it will appear under <code>public playlists</code>. This will also make the playlist \nvisible in search results. Note that the <code>public</code> argument does not refer to access control, \nso anyone with the link to the playlist can access it unless it's made private.</p>\n\n<p>A playlist can also be made collaborative by setting the <code>collaborative</code> argument to true. \nThis means that anyone with the link can add to or remove a track from it.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># change playlist details.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Changing playlist details for id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ChangePlaylistDetails</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> \n                                  <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;My Updated Playlist Name&#39;</span><span class=\"p\">,</span>\n                                  <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;This is an updated playlist description with a unicode copyright </span><span class=\"se\">\\u00A9</span><span class=\"s1\"> character in it.&#39;</span><span class=\"p\">,</span>\n                                  <span class=\"n\">public</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                  <span class=\"n\">collaborative</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - playlist details were updated&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">collaborative</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckAlbumFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckAlbumFavorites", "kind": "function", "doc": "<p>Check if one or more albums is already saved in the current Spotify user's \n'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the albums. <br />\nMaximum: 20 IDs. <br />\nExample: <code>6vc9OTcyd3hyzabCmsdnwE,2noRn2Aes5aoNVsU6iWThc</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the ids, along with a boolean status for each that indicates \n  if the album is saved (True) in the users 'Your Library' or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check if one or more albums is already saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">albumIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;382ObEPsp2rxGrnsizN5TX,6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TY&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking if albums are saved by the current user: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">albumIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckAlbumFavorites</span><span class=\"p\">(</span><span class=\"n\">albumIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckArtistsFollowing", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckArtistsFollowing", "kind": "function", "doc": "<p>Check to see if the current user is following one or more artists.</p>\n\n<p>This method requires the <code>user-follow-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of Spotify artist ID's to check. <br />\nMaximum: 50 ID's. <br />\nExample: <code>2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk</code>  </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the IDs, along with a boolean status for each that indicates \n  if the user follows the ID (True) or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check to see if the current user is following one or more artists.</span>\n    <span class=\"n\">ids</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking if these artists are followed by me:</span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckArtistsFollowing</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckAudiobookFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckAudiobookFavorites", "kind": "function", "doc": "<p>Check if one or more audiobooks is already saved in the current Spotify user's \n'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the audiobooks. <br />\nMaximum: 50 IDs. <br />\nExample: <code>74aydHJKgYz3AIq3jjBSv1,4nfQ1hBJWjD0Jq9sK3YRW8,3PFyizE2tGCSRLusl2Qizf</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the ids, along with a boolean status for each that indicates \n  if the audiobook is saved (True) in the users 'Your Library' or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check if one or more audiobooks is already saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">audiobookIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;74aydHJKgYz3AIq3jjBSv1,4nfQ1hBJWjD0Jq9sK3YRW8,3PFyizE2tGCSRLusl2Qizf&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking if audiobooks are saved by the current user: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">audiobookIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckAudiobookFavorites</span><span class=\"p\">(</span><span class=\"n\">audiobookIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckEpisodeFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckEpisodeFavorites", "kind": "function", "doc": "<p>Check if one or more episodes is already saved in the current Spotify user's \n'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the episodes. <br />\nMaximum: 50 IDs. <br />\nExample: <code>1kWUud3vY5ij5r62zxpTRy,2takcwOaAZWiXQijPHIx7B</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the ids, along with a boolean status for each that indicates \n  if the episode is saved (True) in the users 'Your Library' or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check if one or more episodes is already saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">episodeIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1hPX5WJY6ja6yopgVPBqm4,3F97boSWlXi8OzuhWClZHQ&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking if episodes are saved by the current user: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">episodeIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckEpisodeFavorites</span><span class=\"p\">(</span><span class=\"n\">episodeIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckPlaylistFollowers", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckPlaylistFollowers", "kind": "function", "doc": "<p>Check to see if one or more Spotify users are following a specified playlist.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist. <br />\nExample: <code>3cEYpjA9oz9GiPac4AsH4n</code></li>\n<li><strong>userIds (str):</strong>    A comma-separated list of Spotify User ID's to check. <br />\nMaximum: 5 ID's. <br />\nExample: <code>1kWUud3vY5ij5r62zxpTRy,2takcwOaAZWiXQijPHIx7B</code>  </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the userIds, along with a boolean status for each that indicates \n  if the user follows the playlist (True) or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check to see if one or more users are following a specified playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;3cEYpjA9oz9GiPac4AsH4n&#39;</span>\n    <span class=\"n\">userIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;jmperezperez,thelinmichael,wizzler&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking followers of playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;:</span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">userIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckPlaylistFollowers</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">userIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">userIds</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckShowFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckShowFavorites", "kind": "function", "doc": "<p>Check if one or more shows is already saved in the current Spotify user's \n'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the shows. <br />\nMaximum: 50 IDs. <br />\nExample: <code>1kWUud3vY5ij5r62zxpTRy,2takcwOaAZWiXQijPHIx7B</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the ids, along with a boolean status for each that indicates \n  if the show is saved (True) in the users 'Your Library' or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check if one or more shows is already saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">showIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6kAsbP8pxwaU2kPibKTuHE,4rOoJ6Egrf8K2IrywzwOMk,1y3SUbFMUSESC1N43tBleK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking if shows are saved by the current user: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">showIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckShowFavorites</span><span class=\"p\">(</span><span class=\"n\">showIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckTrackFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckTrackFavorites", "kind": "function", "doc": "<p>Check if one or more tracks is already saved in the current Spotify user's \n'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the tracks. <br />\nMaximum: 50 IDs. <br />\nExample: <code>1kWUud3vY5ij5r62zxpTRy,2takcwOaAZWiXQijPHIx7B</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the ids, along with a boolean status for each that indicates \n  if the track is saved (True) in the users 'Your Library' or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check if one or more tracks is already saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">trackIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1kWUud3vY5ij5r62zxpTRy,2takcwOaAZWiXQijPHIx7B,4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking if tracks are saved by the current user: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">trackIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckTrackFavorites</span><span class=\"p\">(</span><span class=\"n\">trackIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CheckUsersFollowing", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CheckUsersFollowing", "kind": "function", "doc": "<p>Check to see if the current user is following one or more users.</p>\n\n<p>This method requires the <code>user-follow-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of Spotify user ID's to check. <br />\nMaximum: 50 ID's. <br />\nExample: <code>smedjan</code>  </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of the IDs, along with a boolean status for each that indicates \n  if the user follows the ID (True) or not (False).</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># check to see if the current user is following one or more users.</span>\n    <span class=\"n\">ids</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;smedjan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Checking if these users are followed by me:</span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CheckUsersFollowing</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Results:&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">%s</span><span class=\"s1\"> = </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ClearConfigurationCache", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ClearConfigurationCache", "kind": "function", "doc": "<p>Removes (clears) all items from the configuration cache.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ClearPlaylistItems", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ClearPlaylistItems", "kind": "function", "doc": "<p>Removes (clears) all items from a user's playlist.</p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist.\nExample: <code>5AC9ZXA7nJ7oGWO911FuDG</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A snapshot ID for the updated playlist.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove (clear) all items items in a playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing all items in playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ClearPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlist items cleared successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.CreatePlaylist", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.CreatePlaylist", "kind": "function", "doc": "<p>Create an empty playlist for a Spotify user.  </p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>userId (str):</strong>    The user's Spotify user ID.\nExample: <code>32k99y2kg5lnn3mxhtmd2bpdkjfu</code></li>\n<li><strong>name (str):</strong>  The name for the new playlist, for example \"My Playlist\". <br />\nThis name does not need to be unique; a user may have several playlists with \nthe same name.</li>\n<li><strong>description (str):</strong>  The playlist description, as displayed in Spotify Clients and in the Web API.</li>\n<li><strong>public (bool):</strong>  If true, the playlist will be public; if false, it will be private. <br />\nTo be able to create private playlists, the user must have granted the \n<code>playlist-modify-private</code> scope. <br />\nDefaults to true. </li>\n<li><strong>collaborative (bool):</strong>  If true, the playlist will be collaborative. <br />\nNote: to create a collaborative playlist you must also set public to false. \nTo create collaborative playlists you must have granted <code>playlist-modify-private</code>\nand <code>playlist-modify-public</code> scope. <br />\nDefaults to false.</li>\n</ul>\n\n<p>The playlist will be empty until you add tracks. </p>\n\n<p>Setting the <code>public</code> argument to true will publish the playlist on the user's profile,\nwhich means it will appear under <code>public playlists</code>. This will also make the playlist \nvisible in search results. Note that the <code>public</code> argument does not refer to access control, \nso anyone with the link to the playlist can access it unless it's made private.</p>\n\n<p>A playlist can also be made collaborative by setting the <code>collaborative</code> argument to true. \nThis means that anyone with the link can add to or remove a track from it.</p>\n\n<p>Each user is generally limited to a maximum of 11,000 playlists.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Playlist</code> object that contains the playlist details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># create a playlist for the current user.</span>\n    <span class=\"n\">userId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">Id</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Creating new (empty) playlist for user &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">userId</span><span class=\"p\">)</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">Playlist</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">CreatePlaylist</span><span class=\"p\">(</span><span class=\"n\">userId</span><span class=\"p\">,</span> <span class=\"s1\">&#39;My New Playlist 04&#39;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Created from the SpotifyWebApiPython&#39;s library - test unicode </span><span class=\"se\">\\u00A9</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">userId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">collaborative</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Playlist</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.FollowArtists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.FollowArtists", "kind": "function", "doc": "<p>Add the current user as a follower of one or more artists.</p>\n\n<p>This method requires the <code>user-follow-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify artist IDs. <br />\nA maximum of 50 IDs can be sent in one request.\nExample: <code>2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No exception is raised if an artist is already followed.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># add the current user as a follower of one or more artists.</span>\n    <span class=\"n\">ids</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Start following these artists:</span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">FollowArtists</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Success - artists are now followed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.FollowPlaylist", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.FollowPlaylist", "kind": "function", "doc": "<p>Add the current user as a follower of a playlist.</p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist. <br />\nExample: <code>3cEYpjA9oz9GiPac4AsH4n</code></li>\n<li><strong>public (bool):</strong>  If true the playlist will be included in user's public playlists, if false it \nwill remain private. <br />\nDefault = True. </li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># add the current user as a follower of a playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;3cEYpjA9oz9GiPac4AsH4n&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Following playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">FollowPlaylist</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - playlist is now followed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.FollowUsers", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.FollowUsers", "kind": "function", "doc": "<p>Add the current user as a follower of one or more users.</p>\n\n<p>This method requires the <code>user-follow-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify user IDs. <br />\nA maximum of 50 IDs can be sent in one request.\nExample: <code>smedjan</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No exception is raised if a user is already followed.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># add the current user as a follower of one or more users.</span>\n    <span class=\"n\">ids</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;smedjan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Start following these users:</span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">FollowUsers</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Success - users are now followed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAlbum", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAlbum", "kind": "function", "doc": "<p>Get Spotify catalog information for a single album.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>albumId (str):</strong>    The Spotify ID of the album. <br />\nExample: <code>6vc9OTcyd3hyzabCmsdnwE</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>Album</code> object that contains the album details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a single album.</span>\n    <span class=\"n\">albumId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6vc9OTcyd3hyzabCmsdnwE&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for Album &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">albumId</span><span class=\"p\">)</span>\n    <span class=\"n\">album</span><span class=\"p\">:</span><span class=\"n\">Album</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbum</span><span class=\"p\">(</span><span class=\"n\">albumId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">album</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artists:&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">ArtistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Tracks:&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">TrackSaved</span>\n    <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">albumId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Album</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAlbumFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAlbumFavorites", "kind": "function", "doc": "<p>Get a list of the albums saved in the current Spotify user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>AlbumPageSaved</code> object that contains saved album information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the albums saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting saved albums for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AlbumPageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumFavorites</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Items in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display album details.</span>\n        <span class=\"n\">albumSaved</span><span class=\"p\">:</span><span class=\"n\">AlbumSaved</span>\n        <span class=\"k\">for</span> <span class=\"n\">albumSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">albumSaved</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">albumSaved</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumFavorites</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a complete list of the albums saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL saved albums for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AlbumPageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumFavorites</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display results.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Albums in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display album details.</span>\n    <span class=\"n\">albumSaved</span><span class=\"p\">:</span><span class=\"n\">AlbumSaved</span>\n    <span class=\"k\">for</span> <span class=\"n\">albumSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">albumSaved</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">albumSaved</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">albumpagesaved</span><span class=\"o\">.</span><span class=\"n\">AlbumPageSaved</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAlbumNewReleases", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAlbumNewReleases", "kind": "function", "doc": "<p>Get a list of new album releases featured in Spotify (shown, for example, on a \nSpotify player's \"Browse\" tab).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>country (str):</strong>  A country in the form of an ISO 3166-1 alpha-2 country code. <br />\nProvide this parameter if you want the list of returned items to be relevant to a\nparticular country. If omitted, the returned items will be relevant to all countries. <br />\nExample: <code>SE</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>AlbumPageSimplified</code> object that contains simplified album information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of new album releases featured in Spotify.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of new album releases featured in Spotify ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AlbumPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumNewReleases</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Albums in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display album details.</span>\n        <span class=\"n\">albumSimplified</span><span class=\"p\">:</span><span class=\"n\">AlbumSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">albumSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumNewReleases</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of new album releases featured in Spotify.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of ALL new album releases featured in Spotify ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AlbumPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumNewReleases</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display results.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Albums in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display album details.</span>\n    <span class=\"n\">albumSimplified</span><span class=\"p\">:</span><span class=\"n\">AlbumSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">albumSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">albumpagesimplified</span><span class=\"o\">.</span><span class=\"n\">AlbumPageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAlbums", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAlbums", "kind": "function", "doc": "<p>Get Spotify catalog information for multiple albums.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the albums. <br />\nMaximum: 20 IDs. <br />\nExample: <code>6vc9OTcyd3hyzabCmsdnwE,2noRn2Aes5aoNVsU6iWThc</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Album</code> objects that contain the album details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a multiple albums.</span>\n    <span class=\"n\">albumIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TX,1A2GTWGtFfWp7KSQTwWOyo,2noRn2Aes5aoNVsU6iWThc&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for multiple albums: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">albumIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">albums</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Album</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbums</span><span class=\"p\">(</span><span class=\"n\">albumIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">album</span><span class=\"p\">:</span><span class=\"n\">Album</span>\n    <span class=\"k\">for</span> <span class=\"n\">album</span> <span class=\"ow\">in</span> <span class=\"n\">albums</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">album</span><span class=\"p\">))</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artist(s):&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Tracks:&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">TrackSaved</span>\n        <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAlbumTracks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAlbumTracks", "kind": "function", "doc": "<p>Get Spotify catalog information about an album's tracks.  </p>\n\n<p>Optional parameters can be used to limit the number of tracks returned.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>albumId (str):</strong>    The Spotify ID of the album. <br />\nExample: <code>6vc9OTcyd3hyzabCmsdnwE</code></li>\n<li><strong>limit (int):</strong>    The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>    The index of the first item to return; use with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>TrackPageSimplified</code> object that contains simplified track information for the albumId.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about an album&#39;s tracks.</span>\n    <span class=\"n\">albumId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6vc9OTcyd3hyzabCmsdnwE&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of tracks for album id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">albumId</span><span class=\"p\">)</span>\n    <span class=\"n\">trackPage</span><span class=\"p\">:</span><span class=\"n\">TrackPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumTracks</span><span class=\"p\">(</span><span class=\"n\">albumId</span><span class=\"p\">)</span> \n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">trackPage</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Tracks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display track details.</span>\n        <span class=\"n\">trackSimplified</span><span class=\"p\">:</span><span class=\"n\">TrackPageSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">trackSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">trackPage</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">trackSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">trackSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># or dump the entire object:</span>\n            <span class=\"c1\">#print(str(trackSimplified))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">trackPage</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">trackPage</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">trackPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumTracks</span><span class=\"p\">(</span><span class=\"n\">albumId</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">trackPage</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">trackPage</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">trackPage</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about an album&#39;s tracks.</span>\n    <span class=\"n\">albumId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6vc9OTcyd3hyzabCmsdnwE&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of ALL tracks for album id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">albumId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">TrackPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAlbumTracks</span><span class=\"p\">(</span><span class=\"n\">albumId</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span> \n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Tracks in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display track details.</span>\n    <span class=\"n\">trackSimplified</span><span class=\"p\">:</span><span class=\"n\">TrackPageSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">trackSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">trackSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">trackSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">albumId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">trackpagesimplified</span><span class=\"o\">.</span><span class=\"n\">TrackPageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetArtist", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetArtist", "kind": "function", "doc": "<p>Get Spotify catalog information for a single artist identified by their unique Spotify ID.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>artistId (str):</strong>    The Spotify ID of the artist. <br />\nExample: <code>6APm8EjxOHSYM5B4i3vT3q</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>Artist</code> object that contains the artist details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a single artist.</span>\n    <span class=\"n\">artistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6APm8EjxOHSYM5B4i3vT3q&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for Artist &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">artistId</span><span class=\"p\">)</span>\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtist</span><span class=\"p\">(</span><span class=\"n\">artistId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">artist</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">artistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Artist</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetArtistAlbums", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetArtistAlbums", "kind": "function", "doc": "<p>Get Spotify catalog information about an artist's albums.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>artistId (str):</strong>    The Spotify ID of the artist. <br />\nExample: <code>6APm8EjxOHSYM5B4i3vT3q</code></li>\n<li><strong>include_groups (str):</strong>    A comma-separated list of keywords that will be used to filter the response. <br />\nIf not supplied, all album types will be returned. <br />\nValid values are: <code>album</code>, <code>single</code>, <code>appears_on</code>, <code>compilation</code> <br />\nExample: <code>single,appears_on</code></li>\n<li><strong>limit (int):</strong>    The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>    The index of the first item to return; use with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>market (str):</strong>    An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is \navailable in that market will be returned.\nIf a valid user access token is specified in the request header, the country associated with \nthe user account will take priority over this parameter.\nNote: If neither market or user country are provided, the content is considered unavailable for the client.\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>AlbumPageSimplified</code> object of matching results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about an artist&#39;s albums.</span>\n    <span class=\"n\">artistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6APm8EjxOHSYM5B4i3vT3q&#39;</span>\n    <span class=\"n\">includeGroups</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;album,single,appears_on,compilation&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting albums for artist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">artistId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AlbumPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistAlbums</span><span class=\"p\">(</span><span class=\"n\">artistId</span><span class=\"p\">,</span> <span class=\"n\">includeGroups</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Albums in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display album details.</span>\n        <span class=\"n\">albumSimplified</span><span class=\"p\">:</span><span class=\"n\">AlbumSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">albumSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistAlbums</span><span class=\"p\">(</span><span class=\"n\">artistId</span><span class=\"p\">,</span> <span class=\"n\">includeGroups</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about an artist&#39;s albums.</span>\n    <span class=\"n\">artistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6APm8EjxOHSYM5B4i3vT3q&#39;</span>\n    <span class=\"n\">includeGroups</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;album,single,appears_on,compilation&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL albums for artist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">artistId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AlbumPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistAlbums</span><span class=\"p\">(</span><span class=\"n\">artistId</span><span class=\"p\">,</span> <span class=\"n\">includeGroups</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display results.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Albums in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display album details.</span>\n    <span class=\"n\">albumSimplified</span><span class=\"p\">:</span><span class=\"n\">AlbumSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">albumSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">albumSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">artistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">include_groups</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;album&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">albumpagesimplified</span><span class=\"o\">.</span><span class=\"n\">AlbumPageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetArtistRelatedArtists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetArtistRelatedArtists", "kind": "function", "doc": "<p>Get Spotify catalog information about artists similar to a given artist. <br />\nSimilarity is based on analysis of the Spotify community's listening history.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>artistId (str):</strong>    The Spotify ID of the artist. <br />\nExample: <code>6APm8EjxOHSYM5B4i3vT3q</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Artist</code> objects that contain the artist details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about artists similar to a given artist.</span>\n    <span class=\"n\">artistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6APm8EjxOHSYM5B4i3vT3q&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting artists similar to artist &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">artistId</span><span class=\"p\">)</span>\n    <span class=\"n\">artists</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Artist</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistRelatedArtists</span><span class=\"p\">(</span><span class=\"n\">artistId</span><span class=\"p\">)</span>\n\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span>\n    <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">artists</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">artist</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">artistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Artist</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetArtists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetArtists", "kind": "function", "doc": "<p>Get Spotify catalog information for several artists based on their Spotify IDs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (list[str]):</strong>    A comma-separated list of the Spotify IDs for the artists. <br />\nMaximum: 50 IDs. <br />\nExample: <code>2CIMQHirSU0MQqyYHq0eOx,1vCWHaC5f2uS3yhpwWbIA6</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Artist</code> objects that contain the artist details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for several artists.</span>\n    <span class=\"n\">artistIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6APm8EjxOHSYM5B4i3vT3q,22sg0OT5BG5eWLBN97WPIZ,1LmsXfZSt1nutb8OCvt00G&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for multiple artists: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">artistIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">artists</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Artist</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtists</span><span class=\"p\">(</span><span class=\"n\">artistIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span>\n    <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">artists</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">artist</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Artist</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetArtistsFollowed", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetArtistsFollowed", "kind": "function", "doc": "<p>Get the current user's followed artists.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>after (str):</strong>  The last artist ID retrieved from the previous request, or null for\nthe first request. <br />\nExample: <code>6APm8EjxOHSYM5B4i3vT3q</code>  </li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>ArtistPage</code> object of matching results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get the current user&#39;s followed artists.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting current users followed artists ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ArtistPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistsFollowed</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Artists in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display artist details.</span>\n        <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span>\n        <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistsFollowed</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get the current user&#39;s followed artists.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL of the current users followed artists ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ArtistPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistsFollowed</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display results.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display artist details.</span>\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span>\n    <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">after</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">artistpage</span><span class=\"o\">.</span><span class=\"n\">ArtistPage</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetArtistTopTracks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetArtistTopTracks", "kind": "function", "doc": "<p>Get Spotify catalog information about an artist's top tracks by country.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>artistId (str):</strong>    The Spotify ID of the artist. <br />\nExample: <code>6APm8EjxOHSYM5B4i3vT3q</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Track</code> objects that contain the track details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about an artist&#39;s top tracks by country.</span>\n    <span class=\"n\">artistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6APm8EjxOHSYM5B4i3vT3q&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting top tracks for artist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">artistId</span><span class=\"p\">)</span>\n    <span class=\"n\">tracks</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Track</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetArtistTopTracks</span><span class=\"p\">(</span><span class=\"n\">artistId</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ES&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n    <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">tracks</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">artistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAudiobook", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAudiobook", "kind": "function", "doc": "<p>Get Spotify catalog information for a single audiobook.  </p>\n\n<p>Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audiobookId (str):</strong>    The Spotify ID for the audiobook.\nExample: <code>74aydHJKgYz3AIq3jjBSv1</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Audiobook</code> object that contain the audiobook details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a single audiobook.</span>\n    <span class=\"n\">audiobookId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;7iHfbu1YPACw6oZPAFJtqe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for audiobook id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">audiobookId</span><span class=\"p\">)</span>\n    <span class=\"n\">audiobook</span><span class=\"p\">:</span><span class=\"n\">Audiobook</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobook</span><span class=\"p\">(</span><span class=\"n\">audiobookId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">audiobook</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># prepare to retrieve all chapters.</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ChapterPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Chapters</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Chapters in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display chapter details.</span>\n        <span class=\"n\">chapterSimplified</span><span class=\"p\">:</span><span class=\"n\">ChapterSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">chapterSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">chapterSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">chapterSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobookChapters</span><span class=\"p\">(</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">audiobookId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Audiobook</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAudiobookChapters", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAudiobookChapters", "kind": "function", "doc": "<p>Get Spotify catalog information about an audiobook's chapters.</p>\n\n<p>Optional parameters can be used to limit the number of chapters returned.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>audiobookId (str):</strong>    The Spotify ID for the audiobook.\nExample: <code>74aydHJKgYz3AIq3jjBSv1</code></li>\n<li><strong>limit (int):</strong>    The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>    The index of the first item to return; use with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>ChapterPageSimplified</code> object that contains simplified track information for the audiobookId.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about a audiobook&#39;s chapters.</span>\n    <span class=\"n\">audiobookId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;7iHfbu1YPACw6oZPAFJtqe&#39;</span>  <span class=\"c1\"># &lt;- Dune - Author=Frank Herbert</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of chapters for audiobook id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">audiobookId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ChapterPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobookChapters</span><span class=\"p\">(</span><span class=\"n\">audiobookId</span><span class=\"p\">)</span> \n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Chapters in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display chapter details.</span>\n        <span class=\"n\">chapterSimplified</span><span class=\"p\">:</span><span class=\"n\">ChapterPageSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">chapterSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">chapterSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">chapterSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># or dump the entire object:</span>\n            <span class=\"c1\">#print(str(chapterSimplified))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobookChapters</span><span class=\"p\">(</span><span class=\"n\">audiobookId</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about a audiobook&#39;s chapters.</span>\n    <span class=\"n\">audiobookId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;7iHfbu1YPACw6oZPAFJtqe&#39;</span>  <span class=\"c1\"># &lt;- Dune - Author=Frank Herbert</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of ALL chapters for audiobook id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">audiobookId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ChapterPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobookChapters</span><span class=\"p\">(</span><span class=\"n\">audiobookId</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span> \n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Chapters in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display chapter details.</span>\n    <span class=\"n\">chapterSimplified</span><span class=\"p\">:</span><span class=\"n\">ChapterPageSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">chapterSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">chapterSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">chapterSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">audiobookId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">chapterpagesimplified</span><span class=\"o\">.</span><span class=\"n\">ChapterPageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAudiobookFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAudiobookFavorites", "kind": "function", "doc": "<p>Get a list of the audiobooks saved in the current Spotify user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>AudiobookPageSimplified</code> object that contains saved audiobook information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the audiobooks saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting saved audiobooks for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AudiobookPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobookFavorites</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Audiobooks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display audiobook details.</span>\n        <span class=\"n\">audiobook</span><span class=\"p\">:</span><span class=\"n\">AudiobookSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">audiobook</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># use the following to display all object properties.</span>\n            <span class=\"c1\">#print(str(audiobook))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobookFavorites</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># get a list of the audiobooks saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL saved audiobooks for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AudiobookPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobookFavorites</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Audiobooks in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display audiobook details.</span>\n    <span class=\"n\">audiobook</span><span class=\"p\">:</span><span class=\"n\">AudiobookSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">audiobook</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">audiobookpagesimplified</span><span class=\"o\">.</span><span class=\"n\">AudiobookPageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetAudiobooks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetAudiobooks", "kind": "function", "doc": "<p>Get Spotify catalog information for several audiobooks based on their Spotify IDs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the audiobooks. <br />\nMaximum: 50 IDs. <br />\nExample: <code>74aydHJKgYz3AIq3jjBSv1,2kbbNqAvJZxwGyCukHoTLA</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>AudiobookSimplified</code> objects that contain the audiobook details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a multiple audiobooks.</span>\n    <span class=\"n\">audiobookIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;74aydHJKgYz3AIq3jjBSv1,4nfQ1hBJWjD0Jq9sK3YRW8&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for multiple audiobooks: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">audiobookIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">audiobooks</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">AudiobookSimplified</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetAudiobooks</span><span class=\"p\">(</span><span class=\"n\">audiobookIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">audiobook</span><span class=\"p\">:</span><span class=\"n\">AudiobookSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">audiobook</span> <span class=\"ow\">in</span> <span class=\"n\">audiobooks</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">audiobook</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">audiobooksimplified</span><span class=\"o\">.</span><span class=\"n\">AudiobookSimplified</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetBrowseCategory", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetBrowseCategory", "kind": "function", "doc": "<p>Get a single category used to tag items in Spotify.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>categoryId (str):</strong>    The Spotify category ID of the category. <br />\nNote that some category id's are common names (e.g. <code>toplists</code> = <code>Top Lists</code>), while others are\nunique identifiers (e.g. <code>0JQ5DAqbMKFDXXwE9BDJAr</code> = <code>Rock</code>). <br />\nExample: <code>toplists</code></li>\n<li><strong>country (str):</strong>  A country: an ISO 3166-1 alpha-2 country code. <br />\nProvide this parameter if you want the list of returned items to be relevant to a \nparticular country. If omitted, the returned items will be relevant to all countries. <br />\nExample: <code>SE</code></li>\n<li><strong>locale (str):</strong>  The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase \nISO 3166-1 alpha-2 country code, joined by an underscore. <br />\nFor example: <code>es_MX</code>, meaning \"Spanish (Mexico)\". <br />\nProvide this parameter if you want the results returned in a particular language (where available). <br />\nNote: if locale is not supplied, or if the specified language is not available, all strings will \nbe returned in the Spotify default language (American English). The locale parameter, combined with \nthe country parameter, may give odd results if not carefully matched. For example country=<code>SE</code> and\nlocale=<code>de_DE</code> will return a list of categories relevant to Sweden but as German language strings. <br />\nExample: <code>sv_SE</code>  </li>\n<li><strong>refresh (bool):</strong>  True (default) to return real-time information from the spotify web api; otherwise, False to\nto return a cached value IF a call has been made to the <code>GetBrowseCategorys</code> method (which\ncreates a caches list of <code>Category</code> objects).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Category</code> object that contains the category details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>ConfigurationCache</code> is updated with the results of this method.  Use the\n<code>refresh</code> argument (with False value) to retrieve the cached value and avoid\nthe spotify web api request.  This results in better performance.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a single category used to tag items in Spotify.</span>\n    <span class=\"n\">categoryId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;0JQ5DAqbMKFy0OenPG51Av&#39;</span> <span class=\"c1\"># &quot;Christian and Gospel&quot; category id</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for category &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">categoryId</span><span class=\"p\">)</span>\n    <span class=\"n\">category</span><span class=\"p\">:</span><span class=\"n\">Category</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategory</span><span class=\"p\">(</span><span class=\"n\">categoryId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Icons(s):&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">icon</span> <span class=\"ow\">in</span> <span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Icons</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">icon</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategorys</span><span class=\"p\">()</span>  <span class=\"c1\"># load cache</span>\n    <span class=\"n\">category</span><span class=\"p\">:</span><span class=\"n\">Category</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategory</span><span class=\"p\">(</span><span class=\"n\">categoryId</span><span class=\"p\">,</span> <span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">categoryId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">locale</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Playlist</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetBrowseCategorys", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetBrowseCategorys", "kind": "function", "doc": "<p>Get a page of categories used to tag items in Spotify.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>country (str):</strong>  A country: an ISO 3166-1 alpha-2 country code. <br />\nProvide this parameter if you want the list of returned items to be relevant to a \nparticular country. If omitted, the returned items will be relevant to all countries. <br />\nExample: <code>SE</code></li>\n<li><strong>locale (str):</strong>  The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase \nISO 3166-1 alpha-2 country code, joined by an underscore. <br />\nFor example: <code>es_MX</code>, meaning \"Spanish (Mexico)\". <br />\nProvide this parameter if you want the results returned in a particular language (where available). <br />\nNote: if locale is not supplied, or if the specified language is not available, all strings will \nbe returned in the Spotify default language (American English). The locale parameter, combined with \nthe country parameter, may give odd results if not carefully matched. For example country=<code>SE</code> and\nlocale=<code>de_DE</code> will return a list of categories relevant to Sweden but as German language strings. <br />\nExample: <code>sv_SE</code>  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>CategoryPage</code> object that contains a page of category details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of categories used to tag items in Spotify.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting browse categories ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">CategoryPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategorys</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Categories in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display category details.</span>\n        <span class=\"n\">category</span><span class=\"p\">:</span><span class=\"n\">Category</span>\n        <span class=\"k\">for</span> <span class=\"n\">category</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># uncomment to dump Category object:</span>\n            <span class=\"c1\">#print(str(category))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategorys</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of categories used to tag items in Spotify.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL browse categories ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">CategoryPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategorys</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Categories in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display category details.</span>\n    <span class=\"n\">category</span><span class=\"p\">:</span><span class=\"n\">Category</span>\n    <span class=\"k\">for</span> <span class=\"n\">category</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">locale</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">categorypage</span><span class=\"o\">.</span><span class=\"n\">CategoryPage</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetBrowseCategorysList", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetBrowseCategorysList", "kind": "function", "doc": "<p>Get a sorted list of ALL categories used to tag items in Spotify.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>country (str):</strong>  A country: an ISO 3166-1 alpha-2 country code. <br />\nProvide this parameter if you want the list of returned items to be relevant to a \nparticular country. If omitted, the returned items will be relevant to all countries. <br />\nExample: <code>SE</code></li>\n<li><strong>locale (str):</strong>  The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase \nISO 3166-1 alpha-2 country code, joined by an underscore. <br />\nFor example: <code>es_MX</code>, meaning \"Spanish (Mexico)\". <br />\nProvide this parameter if you want the results returned in a particular language (where available). <br />\nNote: if locale is not supplied, or if the specified language is not available, all strings will \nbe returned in the Spotify default language (American English). The locale parameter, combined with \nthe country parameter, may give odd results if not carefully matched. For example country=<code>SE</code> and\nlocale=<code>de_DE</code> will return a list of categories relevant to Sweden but as German language strings. <br />\nExample: <code>sv_SE</code>  </li>\n<li><strong>refresh (bool):</strong>  True to return real-time information from the spotify web api and\nupdate the cache; otherwise, False to just return the cached value.       </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>list[Category]</code> object that contains the list category details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>ConfigurationCache</code> is updated with the results of this method.  Use the\n<code>refresh</code> argument (with False value) to retrieve the cached value and avoid\nthe spotify web api request.  This results in better performance.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a sorted list of all categories used to tag items in Spotify.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of all browse categories ...&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">categories</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Category</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategorysList</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># display category details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">All Browse Categories (sorted by name - </span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">categories</span><span class=\"p\">))</span>\n    <span class=\"n\">category</span><span class=\"p\">:</span><span class=\"n\">Category</span>\n    <span class=\"k\">for</span> <span class=\"n\">category</span> <span class=\"ow\">in</span> <span class=\"n\">categories</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">categories</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Category</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetBrowseCategorysList</span><span class=\"p\">(</span><span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">categories</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration directly from the configuration manager dictionary.</span>\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;GetBrowseCategorysList&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">:</span>\n        <span class=\"n\">categories</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Category</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">[</span><span class=\"s2\">&quot;GetBrowseCategorysList&quot;</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration direct access (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">categories</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">locale</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">category</span><span class=\"o\">.</span><span class=\"n\">Category</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetCategoryPlaylists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetCategoryPlaylists", "kind": "function", "doc": "<p>Get a list of Spotify playlists tagged with a particular category.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>categoryId (str):</strong>  The Spotify category ID for the category. <br />\nExample: <code>dinner</code></li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>country (str):</strong>  A country: an ISO 3166-1 alpha-2 country code. <br />\nProvide this parameter if you want the list of returned items to be relevant to a \nparticular country. If omitted, the returned items will be relevant to all countries. <br />\nExample: <code>SE</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A tuple of 2 objects:  </p>\n  \n  <ul>\n  <li><code>PlaylistPageSimplified</code> object that contains playlist information.  </li>\n  <li>string that describes what was returned (e.g. 'Popular Playlists').</li>\n  </ul>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of Spotify playlists tagged with a particular category.</span>\n    <span class=\"n\">categoryId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;toplists&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting playlists for category &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">categoryId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetCategoryPlaylists</span><span class=\"p\">(</span><span class=\"n\">categoryId</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlist Results Type: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlists in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display playlist details.</span>\n        <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># use the following to display all object properties.</span>\n            <span class=\"c1\">#print(str(playlist))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetCategoryPlaylists</span><span class=\"p\">(</span><span class=\"n\">categoryId</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of Spotify playlists tagged with a particular category.</span>\n    <span class=\"n\">categoryId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;toplists&#39;</span> <span class=\"c1\"># &#39;pop&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL playlists for category &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">categoryId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetCategoryPlaylists</span><span class=\"p\">(</span><span class=\"n\">categoryId</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display results.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlist Results Type: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display playlist details.</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">categoryId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlistpagesimplified</span><span class=\"o\">.</span><span class=\"n\">PlaylistPageSimplified</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetChapter", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetChapter", "kind": "function", "doc": "<p>Get Spotify catalog information for a single audiobook chapter identified by its unique Spotify ID.</p>\n\n<p>This method requires the <code>user-read-playback-position</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>chapterId (str):</strong>    The Spotify ID for the chapter.\nExample: <code>0D5wENdkdwbqlrHoaJ9g29</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>Chapter</code> object that contain the chapter details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a single chapter.</span>\n    <span class=\"n\">chapterId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;0D5wENdkdwbqlrHoaJ9g29&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for chapter id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">chapterId</span><span class=\"p\">)</span>\n    <span class=\"n\">chapter</span><span class=\"p\">:</span><span class=\"n\">Chapter</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetChapter</span><span class=\"p\">(</span><span class=\"n\">chapterId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chapter</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chapter</span><span class=\"o\">.</span><span class=\"n\">Audiobook</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chapterId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">chapter</span><span class=\"o\">.</span><span class=\"n\">Chapter</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetChapters", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetChapters", "kind": "function", "doc": "<p>Get Spotify catalog information for several chapters based on their Spotify IDs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the chapters. <br />\nMaximum: 50 IDs. <br />\nExample: <code>5CfCWKI5pZ28U0uOzXkDHe,5as3aKmN2k11yfDDDSrvaZ</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Chapter</code> objects that contain the chapter details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a multiple chapters.</span>\n    <span class=\"n\">chapterIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;0D5wENdkdwbqlrHoaJ9g29,0PMQAsGZ8f9tSTd9moghJs&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for multiple chapters: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">chapterIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">chapters</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">ChapterSimplified</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetChapters</span><span class=\"p\">(</span><span class=\"n\">chapterIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">chapter</span><span class=\"p\">:</span><span class=\"n\">ChapterSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">chapter</span> <span class=\"ow\">in</span> <span class=\"n\">chapters</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chapter</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">chapter</span><span class=\"o\">.</span><span class=\"n\">Chapter</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetEpisode", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetEpisode", "kind": "function", "doc": "<p>Get Spotify catalog information for a single episode identified by its unique Spotify ID.</p>\n\n<p>This method requires the <code>user-read-playback-position</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>episodeId (str):</strong>    The Spotify ID for the episode.\nExample: <code>512ojhOuo1ktJprKbVcKyQ</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>Episode</code> object that contain the episode details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a single episode.</span>\n    <span class=\"n\">episodeId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;26c0zVyOv1lzfYpBXdh1zC&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for episode id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">episodeId</span><span class=\"p\">)</span>\n    <span class=\"n\">episode</span><span class=\"p\">:</span><span class=\"n\">Episode</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetEpisode</span><span class=\"p\">(</span><span class=\"n\">episodeId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">episode</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">episodeId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">episode</span><span class=\"o\">.</span><span class=\"n\">Episode</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetEpisodeFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetEpisodeFavorites", "kind": "function", "doc": "<p>Get a list of the episodes saved in the current Spotify user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>EpisodePageSaved</code> object that contains saved episode information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the episodes saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting saved episodes for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetEpisodeFavorites</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Episodes in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display episode details.</span>\n        <span class=\"n\">episodeSaved</span><span class=\"p\">:</span><span class=\"n\">EpisodeSaved</span>\n        <span class=\"k\">for</span> <span class=\"n\">episodeSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">episodeSaved</span><span class=\"o\">.</span><span class=\"n\">Episode</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">episodeSaved</span><span class=\"o\">.</span><span class=\"n\">Episode</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># use the following to display all object properties.</span>\n            <span class=\"c1\">#print(str(episodeSaved.Episode))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetEpisodeFavorites</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the episodes saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL saved episodes for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetEpisodeFavorites</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Episodes in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display episode details.</span>\n    <span class=\"n\">episodeSaved</span><span class=\"p\">:</span><span class=\"n\">EpisodeSaved</span>\n    <span class=\"k\">for</span> <span class=\"n\">episodeSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">episodeSaved</span><span class=\"o\">.</span><span class=\"n\">Episode</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">episodeSaved</span><span class=\"o\">.</span><span class=\"n\">Episode</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">episodepagesaved</span><span class=\"o\">.</span><span class=\"n\">EpisodePageSaved</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetEpisodes", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetEpisodes", "kind": "function", "doc": "<p>Get Spotify catalog information for several episodes based on their Spotify IDs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the episodes. <br />\nMaximum: 50 IDs. <br />\nExample: <code>5CfCWKI5pZ28U0uOzXkDHe,5as3aKmN2k11yfDDDSrvaZ</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Episode</code> objects that contain the episode details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a multiple episodes.</span>\n    <span class=\"n\">episodeIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;16OUc3NwQe7kJNaH8zmzfP,1hPX5WJY6ja6yopgVPBqm4,3F97boSWlXi8OzuhWClZHQ&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for multiple episodes: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">episodeIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">episodes</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Episode</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetEpisodes</span><span class=\"p\">(</span><span class=\"n\">episodeIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">episode</span><span class=\"p\">:</span><span class=\"n\">Episode</span>\n    <span class=\"k\">for</span> <span class=\"n\">episode</span> <span class=\"ow\">in</span> <span class=\"n\">episodes</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">episode</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">episode</span><span class=\"o\">.</span><span class=\"n\">Episode</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetFeaturedPlaylists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetFeaturedPlaylists", "kind": "function", "doc": "<p>Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>country (str):</strong>  A country: an ISO 3166-1 alpha-2 country code. <br />\nProvide this parameter if you want the list of returned items to be relevant to a \nparticular country. If omitted, the returned items will be relevant to all countries. <br />\nExample: <code>SE</code></li>\n<li><strong>locale (str):</strong>  The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase \nISO 3166-1 alpha-2 country code, joined by an underscore. <br />\nFor example: <code>es_MX</code>, meaning \"Spanish (Mexico)\". <br />\nProvide this parameter if you want the results returned in a particular language (where available). <br />\nNote: if locale is not supplied, or if the specified language is not available, all strings will \nbe returned in the Spotify default language (American English). The locale parameter, combined with \nthe country parameter, may give odd results if not carefully matched. For example country=<code>SE</code> and\nlocale=<code>de_DE</code> will return a list of categories relevant to Sweden but as German language strings. <br />\nExample: <code>sv_SE</code></li>\n<li><strong>timestamp (str):</strong>  A timestamp in ISO 8601 format: yyyy-MM-ddTHH:mm:ss. <br />\nUse this parameter to specify the user's local time to get results tailored for that specific date \nand time in the day. If not provided, the response defaults to the current UTC time. \nExample: <code>2023-10-23T09:00:00</code> for a user whose local time is 9AM. \nIf there were no featured playlists (or there is no data) at the specified time, the response will \nrevert to the current UTC time.\nExample: <code>2023-10-23T09:00:00</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A tuple of 2 objects:  </p>\n  \n  <ul>\n  <li><code>PlaylistPageSimplified</code> object that contains playlist information.  </li>\n  <li>string that describes what was returned (e.g. 'Popular Playlists').</li>\n  </ul>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of Spotify featured playlists.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting Spotify featured playlists ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetFeaturedPlaylists</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlists in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display playlist details.</span>\n        <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># use the following to display all object properties.</span>\n            <span class=\"c1\">#print(str(playlist))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetFeaturedPlaylists</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of Spotify featured playlists.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL Spotify featured playlists ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetFeaturedPlaylists</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlist Results Type: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display playlist details.</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">locale</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timestamp</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlistpagesimplified</span><span class=\"o\">.</span><span class=\"n\">PlaylistPageSimplified</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetGenres", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetGenres", "kind": "function", "doc": "<p>Get a sorted list of available genres seed parameter values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>refresh (bool):</strong>  True to return real-time information from the spotify web api and\nupdate the cache; otherwise, False to just return the cached value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A sorted list of genre strings.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>ConfigurationCache</code> is updated with the results of this method.  Use the\n<code>refresh</code> argument (with False value) to retrieve the cached value and avoid\nthe spotify web api request.  This results in better performance.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of available genre seed parameter values for recommendations.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of genres ...&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">genres</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetGenres</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># display genre details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">All Genres (sorted by name):&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">genre</span><span class=\"p\">:</span><span class=\"nb\">str</span>\n    <span class=\"k\">for</span> <span class=\"n\">genre</span> <span class=\"ow\">in</span> <span class=\"n\">genres</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">genre</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">genres</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetGenres</span><span class=\"p\">(</span><span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">genres</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration directly from the configuration manager dictionary.</span>\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;GetGenres&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">:</span>\n        <span class=\"n\">genres</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">[</span><span class=\"s2\">&quot;GetGenres&quot;</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration direct access (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">genres</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">refresh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetIdFromUri", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetIdFromUri", "kind": "function", "doc": "<p>Get the id portion from a Spotify uri value.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>uri (str):</strong>    The Spotify URI value.\nExample: <code>spotify:track:5v5ETK9WFXAnGQ3MRubKuE</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A string containing the id value.</p>\n</blockquote>\n\n<p>No exceptions are raised with this method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetMarkets", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetMarkets", "kind": "function", "doc": "<p>Get the list of markets (country codes) where Spotify is available.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>refresh (bool):</strong>  True to return real-time information from the spotify web api and\nupdate the cache; otherwise, False to just return the cached value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A sorted list of market identifier strings.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>ConfigurationCache</code> is updated with the results of this method.  Use the\n<code>refresh</code> argument (with False value) to retrieve the cached value and avoid\nthe spotify web api request.  This results in better performance.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get the list of markets where Spotify is available.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of markets ...&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">markets</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetMarkets</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># display genre details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">All Markets (sorted by id):&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">market</span><span class=\"p\">:</span><span class=\"nb\">str</span>\n    <span class=\"k\">for</span> <span class=\"n\">market</span> <span class=\"ow\">in</span> <span class=\"n\">markets</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">market</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">markets</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetMarkets</span><span class=\"p\">(</span><span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">markets</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration directly from the configuration manager dictionary.</span>\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;GetMarkets&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">:</span>\n        <span class=\"n\">markets</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">[</span><span class=\"s2\">&quot;GetMarkets&quot;</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration direct access (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">markets</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">refresh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlayerDevice", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlayerDevice", "kind": "function", "doc": "<p>Get information about a user's available Spotify Connect player device. </p>\n\n<p>This method requires the <code>user-read-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>deviceId (str):</strong>  The device id or name to retrieve.</li>\n<li><strong>refresh (bool):</strong>  True (default) to resolve the device real-time from the spotify web api \ndevice list; otherwise, False to use the cached device list to resolve the\ndevice.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Device</code> object if found; otherwise, null.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>ConfigurationCache</code> is updated with the results of this method.  Use the\n<code>refresh</code> argument (with False value) to retrieve the cached value and avoid\nthe spotify web api request.  This results in better performance.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-playback-state&#39;</span><span class=\"p\">,</span> \n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify Connect player device by it&#39;s Id value.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;30fbc80e35598f3c242f2120413c943dfd9715fe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting Spotify Connect player device: </span><span class=\"se\">\\n</span><span class=\"s1\">- ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n    <span class=\"n\">device</span><span class=\"p\">:</span><span class=\"n\">Device</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerDevice</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">device</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Device Id was not found in the list of devices&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># get Spotify Connect player device by it&#39;s Name value.</span>\n    <span class=\"n\">deviceName</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Bose-ST10-1&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting Spotify Connect player device: </span><span class=\"se\">\\n</span><span class=\"s1\">- Name = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">deviceName</span><span class=\"p\">)</span>\n    <span class=\"n\">device</span><span class=\"p\">:</span><span class=\"n\">Device</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerDevice</span><span class=\"p\">(</span><span class=\"n\">deviceName</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">device</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Device Name was not found in the list of devices&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">device</span><span class=\"p\">:</span><span class=\"n\">Device</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerDevice</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration (by Id):</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">device</span><span class=\"p\">:</span><span class=\"n\">Device</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerDevice</span><span class=\"p\">(</span><span class=\"n\">deviceName</span><span class=\"p\">,</span> <span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration (by Name):</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">refresh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">Device</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlayerDevices", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlayerDevices", "kind": "function", "doc": "<p>Get information about a user's available Spotify Connect player devices. </p>\n\n<p>Some device models are not supported and will not be listed in the API response.</p>\n\n<p>This method requires the <code>user-read-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>refresh (bool):</strong>  True (default) to return real-time information from the spotify web api and\nupdate the cache; otherwise, False to just return the cached value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Device</code> objects that contain the device details, sorted by name.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>ConfigurationCache</code> is updated with the results of this method.  Use the\n<code>refresh</code> argument (with False value) to retrieve the cached value and avoid\nthe spotify web api request.  This results in better performance.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-playback-state&#39;</span><span class=\"p\">,</span> \n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get information about a user&#39;s available Spotify Connect player devices.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting available Spotify Connect player devices ...&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">devices</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Device</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerDevices</span><span class=\"p\">()</span>\n\n    <span class=\"n\">device</span><span class=\"p\">:</span><span class=\"n\">Device</span>\n    <span class=\"k\">for</span> <span class=\"n\">device</span> <span class=\"ow\">in</span> <span class=\"n\">devices</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">devices</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Device</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerDevices</span><span class=\"p\">(</span><span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">devices</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration directly from the configuration manager dictionary.</span>\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;GetPlayerDevices&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">:</span>\n        <span class=\"n\">devices</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Device</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">[</span><span class=\"s2\">&quot;GetPlayerDevices&quot;</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration direct access (count): </span><span class=\"si\">%d</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">devices</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">refresh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">Device</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlayerNowPlaying", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlayerNowPlaying", "kind": "function", "doc": "<p>Get the object currently being played on the user's Spotify account.</p>\n\n<p>This method requires the <code>user-read-currently-playing</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>additionalTypes (str):</strong>  A comma-separated list of item types that your client supports besides the default track type. <br />\nValid types are: <code>track</code> and <code>episode</code>. <br />\nSpecify <code>episode</code> to get podcast track information. <br />\nNote: This parameter was introduced to allow existing clients to maintain their current behaviour \nand might be deprecated in the future. In addition to providing this parameter, make sure that your client \nproperly handles cases of new types in the future by checking against the type field of each object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>PlayerPlayState</code> object that contains the currently playing media, or null if nothing is playing.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-currently-playing&#39;</span><span class=\"p\">,</span> \n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get the object currently being played on the user&#39;s Spotify account.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting object that is now playing on the users account ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">nowPlaying</span><span class=\"p\">:</span><span class=\"n\">PlayerPlayState</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerNowPlaying</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">nowPlaying</span><span class=\"o\">.</span><span class=\"n\">CurrentlyPlayingType</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">nowPlaying</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">nowPlaying</span><span class=\"o\">.</span><span class=\"n\">Item</span><span class=\"p\">))</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Nothing is currently playing via Spotify Connect&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">additionalTypes</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playerplaystate</span><span class=\"o\">.</span><span class=\"n\">PlayerPlayState</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlayerPlaybackState", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlayerPlaybackState", "kind": "function", "doc": "<p>Get information about the user's current playback state, including track or episode, progress, \nand active device.</p>\n\n<p>This method requires the <code>user-read-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>additionalTypes (str):</strong>  A comma-separated list of item types that your client supports besides the default track type. <br />\nValid types are: <code>track</code> and <code>episode</code>. <br />\nSpecify <code>episode</code> to get podcast track information. <br />\nNote: This parameter was introduced to allow existing clients to maintain their current behaviour \nand might be deprecated in the future. In addition to providing this parameter, make sure that your client \nproperly handles cases of new types in the future by checking against the type field of each object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>PlayerPlayState</code> object that contains the currently playing media, or null if nothing is playing.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify Connect playback state.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting Spotify Connect playback state ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">playerState</span><span class=\"p\">:</span><span class=\"n\">PlayerPlayState</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerPlaybackState</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">playerState</span><span class=\"o\">.</span><span class=\"n\">CurrentlyPlayingType</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playerState</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playerState</span><span class=\"o\">.</span><span class=\"n\">Item</span><span class=\"p\">))</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Spotify Connect playback State is unavailable at this time&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">additionalTypes</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playerplaystate</span><span class=\"o\">.</span><span class=\"n\">PlayerPlayState</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlayerQueueInfo", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlayerQueueInfo", "kind": "function", "doc": "<p>Get the list of objects that make up the user's playback queue.</p>\n\n<p>This method requires the <code>user-read-currently-playing</code> and <code>user-read-playback-state</code> scope.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>PlayerQueueInfo</code> object that contains the player queue information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-currently-playing&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-state&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify Connect player queue info for the current user.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting Spotify Connect player queue info ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">queueInfo</span><span class=\"p\">:</span><span class=\"n\">PlayerQueueInfo</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerQueueInfo</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">queueInfo</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">queueInfo</span><span class=\"o\">.</span><span class=\"n\">CurrentlyPlaying</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Currently Playing:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">queueInfo</span><span class=\"o\">.</span><span class=\"n\">CurrentlyPlaying</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Queue: (</span><span class=\"si\">%s</span><span class=\"s1\"> items)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">queueInfo</span><span class=\"o\">.</span><span class=\"n\">QueueCount</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">queueInfo</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">{type}</span><span class=\"s1\">: &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playerqueueinfo</span><span class=\"o\">.</span><span class=\"n\">PlayerQueueInfo</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlayerRecentTracks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlayerRecentTracks", "kind": "function", "doc": "<p>Get tracks from the current user's recently played tracks. <br />\nNote: Currently doesn't support podcast episodes.</p>\n\n<p>This method requires the <code>user-read-recently-played</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: <code>20</code>, Range: <code>1</code> to <code>50</code>.  </li>\n<li><strong>after (int):</strong>  Returns all items after (but not including) this cursor position, which is \na Unix timestamp in milliseconds. <br />\nIf <code>after</code> is specified, <code>before</code> must not be specified. <br />\nUse with limit to get the next set of items. <br />\nDefault: <code>0</code> (the first item).  </li>\n<li><strong>before (int):</strong>  Returns all items before (but not including) this cursor position, which is \na Unix timestamp in milliseconds. <br />\nIf <code>before</code> is specified, <code>after</code> must not be specified. <br />\nUse with limit to get the next set of items. <br />\nDefault: <code>0</code> (the first item).  </li>\n</ul>\n\n<p>The <code>after</code> and <code>before</code> arguments are based upon local time (not UTC time).  Recently\nplayed item history uses a local timestamp, and NOT a UTC timestamp.</p>\n\n<p>If both <code>after</code> and <code>before</code> arguments are null (or zero), then an <code>after</code> value\nis generated that will retrieve recently played tracks for the past 24 hours.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>PlayHistoryPage</code> object that contains the recently played items.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - After DateTime</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-recently-played&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get all tracks played after UTC date 2024-01-25T21:34:16.821Z (1706218456821)</span>\n    <span class=\"n\">afterMS</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1706218456821</span>\n\n    <span class=\"c1\"># get tracks from current user&#39;s recently played tracks.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting recently played tracks for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlayHistoryPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerRecentTracks</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"o\">=</span><span class=\"n\">afterMS</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Tracks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display history details.</span>\n        <span class=\"n\">history</span><span class=\"p\">:</span><span class=\"n\">PlayHistory</span>\n        <span class=\"k\">for</span> <span class=\"n\">history</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">{played_at}</span><span class=\"s1\"> </span><span class=\"si\">{played_atMS}</span><span class=\"s1\">: &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">played_at</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">PlayedAt</span><span class=\"p\">,</span> <span class=\"n\">played_atMS</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">PlayedAtMS</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerRecentTracks</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">CursorAfter</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<p><details>\n  <summary>Sample Code - For Past 1 Hour</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-recently-played&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get all tracks played within the past 1 hour.</span>\n    <span class=\"n\">afterMS</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">GetUnixTimestampMSFromUtcNow</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>     <span class=\"c1\"># last 1 hour</span>\n    <span class=\"c1\">#afterMS:int = GetUnixTimestampMSFromUtcNow(hours=-24)   # last 24 hours</span>\n    <span class=\"c1\">#afterMS:int = GetUnixTimestampMSFromUtcNow(days=-7)     # last 7 days</span>\n\n    <span class=\"c1\"># get tracks from current user&#39;s recently played tracks.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting recently played tracks for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlayHistoryPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerRecentTracks</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"o\">=</span><span class=\"n\">afterMS</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Tracks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display history details.</span>\n        <span class=\"n\">history</span><span class=\"p\">:</span><span class=\"n\">PlayHistory</span>\n        <span class=\"k\">for</span> <span class=\"n\">history</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- </span><span class=\"si\">{played_at}</span><span class=\"s1\"> </span><span class=\"si\">{played_atMS}</span><span class=\"s1\">: &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">played_at</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">PlayedAt</span><span class=\"p\">,</span> <span class=\"n\">played_atMS</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">PlayedAtMS</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlayerRecentTracks</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">CursorAfter</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">after</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">before</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playhistorypage</span><span class=\"o\">.</span><span class=\"n\">PlayHistoryPage</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlaylist", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlaylist", "kind": "function", "doc": "<p>Get a playlist owned by a Spotify user.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist. <br />\nExample: <code>5v5ETK9WFXAnGQ3MRubKuE</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>fields (str):</strong>  Filters for the query: a comma-separated list of the fields to return. <br />\nIf omitted, all fields are returned. \nFor example, to get just the playlist's description and URI: <br />\n<code>fields=description,uri</code>. \nA dot separator can be used to specify non-reoccurring fields, while parentheses can be used \nto specify reoccurring fields within objects. For example, to get just the added date and user \nID of the adder: <br />\n<code>fields=tracks.items(added_at,added_by.id)</code>. <br />\nUse multiple parentheses to drill down into nested objects, for example: <br />\n<code>fields=tracks.items(track(name,href,album(name,href)))</code>. <br />\nFields can be excluded by prefixing them with an exclamation mark, for example: <br />\n<code>fields=tracks.items(track(name,href,album(!name,href)))</code> <br />\nExample: fields=items(added_by.id,track(name,href,album(name,href)))</li>\n<li><strong>additionalTypes (str):</strong>  A comma-separated list of item types that your client supports besides the default track type. <br />\nValid types are: track and episode. <br />\nNote: This parameter was introduced to allow existing clients to maintain their current behaviour \nand might be deprecated in the future.  In addition to providing this parameter, make sure that your \nclient properly handles cases of new types in the future by checking against the type field of each object.                </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Playlist</code> object that contains the playlist details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a playlist owned by a Spotify user.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5v5ETK9WFXAnGQ3MRubKuE&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for playlist &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">Playlist</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylist</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Tracks:&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">playlistTrack</span><span class=\"p\">:</span><span class=\"n\">PlaylistTrack</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlistTrack</span> <span class=\"ow\">in</span> <span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">additionalTypes</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Playlist</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlaylistCoverImage", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlaylistCoverImage", "kind": "function", "doc": "<p>Get the current image associated with a specific playlist.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist. <br />\nExample: <code>5v5ETK9WFXAnGQ3MRubKuE</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>ImageObject</code> object that contains the image details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get the current image details associated with a specific playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting cover image details for playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">imageObj</span><span class=\"p\">:</span><span class=\"n\">ImageObject</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistCoverImage</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">imageObj</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">imageobject</span><span class=\"o\">.</span><span class=\"n\">ImageObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlaylistItems", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlaylistItems", "kind": "function", "doc": "<p>Get full details of the items of a playlist owned by a Spotify user.</p>\n\n<p>This method requires the <code>playlist-read-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist. <br />\nExample: <code>5v5ETK9WFXAnGQ3MRubKuE</code></li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 50, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>fields (str):</strong>  Filters for the query: a comma-separated list of the fields to return. <br />\nIf omitted, all fields are returned. \nFor example, to get just the playlist's description and URI: <br />\n<code>fields=description,uri</code>. \nA dot separator can be used to specify non-reoccurring fields, while parentheses can be used \nto specify reoccurring fields within objects. For example, to get just the added date and user \nID of the adder: <br />\n<code>fields=tracks.items(added_at,added_by.id)</code>. <br />\nUse multiple parentheses to drill down into nested objects, for example: <br />\n<code>fields=tracks.items(track(name,href,album(name,href)))</code>. <br />\nFields can be excluded by prefixing them with an exclamation mark, for example: <br />\n<code>fields=tracks.items(track(name,href,album(!name,href)))</code> <br />\nExample: fields=items(added_by.id,track(name,href,album(name,href)))</li>\n<li><strong>additionalTypes (str):</strong>  A comma-separated list of item types that your client supports besides the default track type. <br />\nValid types are: track and episode. <br />\nNote: This parameter was introduced to allow existing clients to maintain their current behaviour \nand might be deprecated in the future.  In addition to providing this parameter, make sure that your \nclient properly handles cases of new types in the future by checking against the type field of each object.                </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Playlist</code> object that contains the playlist details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get full details of the items of a playlist owned by a Spotify user.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5v5ETK9WFXAnGQ3MRubKuE&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting item details for playlist &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Tracks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display track details.</span>\n        <span class=\"n\">playlistTrack</span><span class=\"p\">:</span><span class=\"n\">PlaylistTrack</span>\n        <span class=\"k\">for</span> <span class=\"n\">playlistTrack</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">), added on </span><span class=\"si\">{added}</span><span class=\"s1\"> &#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">,</span> <span class=\"n\">added</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">AddedAt</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># uncomment to dump PlaylistTrack and Track objects:</span>\n            <span class=\"c1\"># print(str(playlistTrack))</span>\n            <span class=\"c1\"># print(&#39;&#39;)</span>\n\n            <span class=\"c1\"># print(str(playlistTrack.Track))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get full details of the items of a playlist owned by a Spotify user.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5v5ETK9WFXAnGQ3MRubKuE&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL item details for playlist &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Track Item results: (</span><span class=\"si\">%d</span><span class=\"s1\"> items)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display track details.</span>\n    <span class=\"n\">playlistTrack</span><span class=\"p\">:</span><span class=\"n\">PlaylistTrack</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlistTrack</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">), added on </span><span class=\"si\">{added}</span><span class=\"s1\"> &#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">,</span> <span class=\"n\">added</span><span class=\"o\">=</span><span class=\"n\">playlistTrack</span><span class=\"o\">.</span><span class=\"n\">AddedAt</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">additionalTypes</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlistpage</span><span class=\"o\">.</span><span class=\"n\">PlaylistPage</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlaylistFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlaylistFavorites", "kind": "function", "doc": "<p>Get a list of the playlists owned or followed by the current Spotify user.</p>\n\n<p>This method requires the <code>playlist-read-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>PlaylistPageSimplified</code> object that contains playlist information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the playlists owned or followed by the current Spotify user.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting playlists for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistFavorites</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display playlist details.</span>\n        <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"p\">))</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistFavorites</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the playlists owned or followed by the current Spotify user.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL playlists for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistFavorites</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display playlist details.</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlistpagesimplified</span><span class=\"o\">.</span><span class=\"n\">PlaylistPageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetPlaylistsForUser", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetPlaylistsForUser", "kind": "function", "doc": "<p>Get a list of the playlists owned or followed by a Spotify user.</p>\n\n<p>This method requires the <code>playlist-read-private</code> and <code>playlist-read-collaborative</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>userId (str):</strong>  The user's Spotify user ID. <br />\nExample: <code>smedjan</code></li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>PlaylistPageSimplified</code> object that contains playlist information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the playlists owned or followed by a Spotify user.</span>\n    <span class=\"n\">userId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;smedjan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting playlists for user &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">userId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistsForUser</span><span class=\"p\">(</span><span class=\"n\">userId</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display playlist details.</span>\n        <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"p\">))</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistsForUser</span><span class=\"p\">(</span><span class=\"n\">userId</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the playlists owned or followed by a Spotify user.</span>\n    <span class=\"n\">userId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;smedjan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL playlists for user &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">userId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetPlaylistsForUser</span><span class=\"p\">(</span><span class=\"n\">userId</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display playlist details.</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">userId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playlistpagesimplified</span><span class=\"o\">.</span><span class=\"n\">PlaylistPageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetShow", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetShow", "kind": "function", "doc": "<p>Get Spotify catalog information for a single show identified by its unique Spotify ID.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>showId (str):</strong>    The Spotify ID for the show.\nExample: <code>5CfCWKI5pZ28U0uOzXkDHe</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Show</code> object that contain the show details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a single show.</span>\n    <span class=\"n\">showId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6E1u3kxII5CbbFR4VObax4&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for show id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">showId</span><span class=\"p\">)</span>\n    <span class=\"n\">show</span><span class=\"p\">:</span><span class=\"n\">Show</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShow</span><span class=\"p\">(</span><span class=\"n\">showId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># prepare to retrieve all episodes.</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Episodes</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Episodes in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display episode details.</span>\n        <span class=\"n\">episodeSimplified</span><span class=\"p\">:</span><span class=\"n\">EpisodeSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">episodeSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">episodeSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">episodeSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShowEpisodes</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">showId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Show</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetShowEpisodes", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetShowEpisodes", "kind": "function", "doc": "<p>Get Spotify catalog information about a show's episodes.</p>\n\n<p>Optional parameters can be used to limit the number of episodes returned.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>showId (str):</strong>    The Spotify ID for the show.\nExample: <code>38bS44xjbVVZ3No3ByF1dJ</code></li>\n<li><strong>limit (int):</strong>    The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>    The index of the first item to return; use with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>EpisodePageSimplified</code> object that contains simplified track information for the showId.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about a show&#39;s episodes.</span>\n    <span class=\"n\">showId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6E1u3kxII5CbbFR4VObax4&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of episodes for show id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">showId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShowEpisodes</span><span class=\"p\">(</span><span class=\"n\">showId</span><span class=\"p\">)</span> \n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Episodes in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display episode details.</span>\n        <span class=\"n\">episodeSimplified</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">episodeSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">episodeSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">episodeSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># or dump the entire object:</span>\n            <span class=\"c1\">#print(str(episodeSimplified))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShowEpisodes</span><span class=\"p\">(</span><span class=\"n\">showId</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;ugc-image-upload&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-position&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about a show&#39;s episodes.</span>\n    <span class=\"n\">showId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6E1u3kxII5CbbFR4VObax4&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting list of ALL episodes for show id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">showId</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShowEpisodes</span><span class=\"p\">(</span><span class=\"n\">showId</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span> \n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Episodes in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display episode details.</span>\n    <span class=\"n\">episodeSimplified</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">episodeSimplified</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">episodeSimplified</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">episodeSimplified</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">showId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">episodepagesimplified</span><span class=\"o\">.</span><span class=\"n\">EpisodePageSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetShowFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetShowFavorites", "kind": "function", "doc": "<p>Get a list of the shows saved in the current Spotify user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>ShowPageSaved</code> object that contains saved show information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the shows saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting saved shows for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ShowPageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShowFavorites</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Shows in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display show details.</span>\n        <span class=\"n\">showSaved</span><span class=\"p\">:</span><span class=\"n\">ShowSaved</span>\n        <span class=\"k\">for</span> <span class=\"n\">showSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">showSaved</span><span class=\"o\">.</span><span class=\"n\">Show</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">showSaved</span><span class=\"o\">.</span><span class=\"n\">Show</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># use the following to display all object properties.</span>\n            <span class=\"c1\">#print(str(showSaved.Show))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShowFavorites</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the shows saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL saved shows for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ShowPageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShowFavorites</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Shows in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display show details.</span>\n    <span class=\"n\">showSaved</span><span class=\"p\">:</span><span class=\"n\">ShowSaved</span>\n    <span class=\"k\">for</span> <span class=\"n\">showSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">showSaved</span><span class=\"o\">.</span><span class=\"n\">Show</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">showSaved</span><span class=\"o\">.</span><span class=\"n\">Show</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">showpagesaved</span><span class=\"o\">.</span><span class=\"n\">ShowPageSaved</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetShows", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetShows", "kind": "function", "doc": "<p>Get Spotify catalog information for several shows based on their Spotify IDs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the shows. <br />\nMaximum: 50 IDs. <br />\nExample: <code>5CfCWKI5pZ28U0uOzXkDHe,5as3aKmN2k11yfDDDSrvaZ</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>ShowSimplified</code> objects that contain the show details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Important policy notes:  </p>\n\n<ul>\n<li>Spotify content may not be downloaded.  </li>\n<li>Keep visual content in its original form.  </li>\n<li>Ensure content attribution.  </li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a multiple shows.</span>\n    <span class=\"n\">showIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6kAsbP8pxwaU2kPibKTuHE,5yX0eiyk7OVq1TpNt8Owkh,6m5al8OnkyVCunFq56qwRE,6E1u3kxII5CbbFR4VObax4&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for multiple shows: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">showIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">shows</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">ShowSimplified</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetShows</span><span class=\"p\">(</span><span class=\"n\">showIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">show</span><span class=\"p\">:</span><span class=\"n\">ShowSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">show</span> <span class=\"ow\">in</span> <span class=\"n\">shows</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">showsimplified</span><span class=\"o\">.</span><span class=\"n\">ShowSimplified</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetTrack", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetTrack", "kind": "function", "doc": "<p>Get Spotify catalog information for a single track identified by its unique Spotify ID.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>trackId (str):</strong>    The Spotify ID of the track. <br />\nExample: <code>1kWUud3vY5ij5r62zxpTRy</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>Track</code> object that contains the track details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a single track.</span>\n    <span class=\"n\">trackId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1kWUud3vY5ij5r62zxpTRy&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for track &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">trackId</span><span class=\"p\">)</span>\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTrack</span><span class=\"p\">(</span><span class=\"n\">trackId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artists:&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">ArtistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">trackId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Track</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetTrackAudioFeatures", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetTrackAudioFeatures", "kind": "function", "doc": "<p>Get audio feature information for a single track identified by its unique Spotify ID.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>trackId (str):</strong>    The Spotify ID of the track. <br />\nExample: <code>1kWUud3vY5ij5r62zxpTRy</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>AudioFeatures</code> object that contains the audio feature details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get audio feature information for a single track.</span>\n    <span class=\"n\">trackId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1kWUud3vY5ij5r62zxpTRy&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting audio features for track &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">trackId</span><span class=\"p\">)</span>\n    <span class=\"n\">audioFeatures</span><span class=\"p\">:</span><span class=\"n\">AudioFeatures</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTrackAudioFeatures</span><span class=\"p\">(</span><span class=\"n\">trackId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">audioFeatures</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">trackId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">audiofeatures</span><span class=\"o\">.</span><span class=\"n\">AudioFeatures</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetTrackFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetTrackFavorites", "kind": "function", "doc": "<p>Get a list of the tracks saved in the current Spotify user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-read</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>TrackPageSaved</code> object that contains saved track information.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the tracks saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting saved tracks for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">TrackPageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTrackFavorites</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Tracks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display track details.</span>\n        <span class=\"n\">trackSaved</span><span class=\"p\">:</span><span class=\"n\">TrackSaved</span>\n        <span class=\"k\">for</span> <span class=\"n\">trackSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">trackSaved</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">trackSaved</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># use the following to display all object properties.</span>\n            <span class=\"c1\">#print(str(trackSaved.Track))</span>\n            <span class=\"c1\">#print(&#39;&#39;)</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTrackFavorites</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get a list of the tracks saved in the current Spotify user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL saved tracks for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">TrackPageSaved</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTrackFavorites</span><span class=\"p\">(</span><span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Tracks in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display track details.</span>\n    <span class=\"n\">trackSaved</span><span class=\"p\">:</span><span class=\"n\">TrackSaved</span>\n    <span class=\"k\">for</span> <span class=\"n\">trackSaved</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">trackSaved</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">trackSaved</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">trackpagesaved</span><span class=\"o\">.</span><span class=\"n\">TrackPageSaved</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetTracks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetTracks", "kind": "function", "doc": "<p>Get Spotify catalog information for multiple tracks based on their Spotify IDs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (list[str]):</strong>    A comma-separated list of the Spotify track IDs. \nMaximum: 50 IDs. <br />\nExample: <code>7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ,2takcwOaAZWiXQijPHIx7B</code></li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>Track</code> objects that contain the track details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information for a multiple tracks.</span>\n    <span class=\"n\">trackIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1kWUud3vY5ij5r62zxpTRy,4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting details for multiple tracks: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">trackIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">tracks</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Track</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTracks</span><span class=\"p\">(</span><span class=\"n\">trackIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n    <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">tracks</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"p\">))</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artist(s):&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Album</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Track</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetTracksAudioFeatures", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetTracksAudioFeatures", "kind": "function", "doc": "<p>Get audio features for multiple tracks based on their Spotify IDs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (list[str]):</strong>    A comma-separated list of the Spotify track IDs. \nMaximum: 100 IDs. <br />\nExample: <code>7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ,2takcwOaAZWiXQijPHIx7B</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of <code>AudioFeatures</code> objects that contain the audio feature details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get audio features for multiple tracks based on their Spotify IDs.</span>\n    <span class=\"n\">trackIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1kWUud3vY5ij5r62zxpTRy,4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting audio features for multiple tracks: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">trackIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">items</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">AudioFeatures</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTracksAudioFeatures</span><span class=\"p\">(</span><span class=\"n\">trackIds</span><span class=\"p\">)</span>\n\n    <span class=\"n\">audioFeatures</span><span class=\"p\">:</span><span class=\"n\">AudioFeatures</span>\n    <span class=\"k\">for</span> <span class=\"n\">audioFeatures</span> <span class=\"ow\">in</span> <span class=\"n\">items</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">audioFeatures</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">audiofeatures</span><span class=\"o\">.</span><span class=\"n\">AudioFeatures</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetTrackRecommendations", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetTrackRecommendations", "kind": "function", "doc": "<p>Get track recommendations for specified criteria.</p>\n\n<p>Use the <code>GetTrackAudioFeatures</code> method to get an idea of what to specify for some of the\nminX / maxX / and targetX argument values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>seedArtists (str):</strong>  A comma separated list of Spotify IDs for seed artists. <br />\nUp to 5 seed values may be provided in any combination of seedArtists, seedTracks and seedGenres. <br />\nNote: only required if seedGenres and seedTracks are not set. <br />\nExample: <code>4NHQUGzhtTLFvgF5SZesLK</code></li>\n<li><strong>seedGenres (str):</strong>  A comma separated list of any genres in the set of available genre seeds. <br />\nUp to 5 seed values may be provided in any combination of seedArtists, seedTracks and seedGenres. <br />\nNote: only required if seedArtists and seedTracks are not set. <br />\nExample: <code>classical,country</code></li>\n<li><strong>seedTracks (str):</strong>  A comma separated list of Spotify IDs for a seed track. <br />\nUp to 5 seed values may be provided in any combination of seedArtists, seedTracks and seedGenres. <br />\nNote: only required if seedArtists and seedGenres are not set. <br />\nExample: <code>0c6xIDDpzE81m2q797ordA</code>  </li>\n<li><strong>minAcousticness (float):</strong>  Restrict results to only those tracks whose acousticness level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code></li>\n<li><strong>maxAcousticness (float):</strong>  Restrict results to only those tracks whose acousticness level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetAcousticness (float):</strong>  Restrict results to only those tracks whose acousticness level is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>minDanceability (float):</strong>  Restrict results to only those tracks whose danceability level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>maxDanceability (float):</strong>  Restrict results to only those tracks whose danceability level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetDanceability (float):</strong>  Restrict results to only those tracks whose acousticness is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>minDurationMS (int):</strong>  Restrict results to only those tracks whose duration is greater than the specified value in milliseconds.  </li>\n<li><strong>maxDurationMS (int):</strong>  Restrict results to only those tracks whose duration is less than the specified value in milliseconds.  </li>\n<li><strong>targetDurationMS (int):</strong>  Restrict results to only those tracks whose duration is equal to the specified value in milliseconds.  </li>\n<li><strong>minEnergy (float):</strong>  Restrict results to only those tracks whose energy level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>maxEnergy (float):</strong>  Restrict results to only those tracks whose energy level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetEnergy (float):</strong>  Restrict results to only those tracks whose energy level is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>minInstrumentalness (float):</strong>  Restrict results to only those tracks whose instrumentalness level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>maxInstrumentalness (float):</strong>  Restrict results to only those tracks whose instrumentalness level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetInstrumentalness (float):</strong>  Restrict results to only those tracks whose instrumentalness level is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>minKey (int):</strong>  Restrict results to only those tracks whose key level is greater than the specified value. <br />\nRange: <code>0</code> - <code>11</code>  </li>\n<li><strong>maxKey (int):</strong>  Restrict results to only those tracks whose key level is less than the specified value. <br />\nRange: <code>0</code> - <code>11</code>  </li>\n<li><strong>targetKey (int):</strong>  Restrict results to only those tracks whose key level is equal to the specified value. <br />\nRange: <code>0</code> - <code>11</code></li>\n<li><strong>minLiveness (float):</strong>  Restrict results to only those tracks whose liveness level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>maxLiveness (float):</strong>  Restrict results to only those tracks whose liveness level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetLiveness (float):</strong>  Restrict results to only those tracks whose liveness level is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>minLoudness (float):</strong>  Restrict results to only those tracks whose loudness level is greater than the specified value.  </li>\n<li><strong>maxLoudness (float):</strong>  Restrict results to only those tracks whose loudness level is less than the specified value.  </li>\n<li><strong>targetLoudness (float):</strong>  Restrict results to only those tracks whose loudness level is equal to the specified value.  </li>\n<li><strong>minMode (float):</strong>  Restrict results to only those tracks whose mode level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>maxMode (float):</strong>  Restrict results to only those tracks whose mode level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetMode (float):</strong>  Restrict results to only those tracks whose mode level is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>minPopularity (int):</strong>  Restrict results to only those tracks whose popularity level is greater than the specified value. <br />\nRange: <code>0</code> - <code>100</code>  </li>\n<li><strong>maxPopularity (int):</strong>  Restrict results to only those tracks whose popularity level is less than the specified value. <br />\nRange: <code>0</code> - <code>100</code>  </li>\n<li><strong>targetPopularity (int):</strong>  Restrict results to only those tracks whose popularity level is equal to the specified value. <br />\nRange: <code>0</code> - <code>100</code>  </li>\n<li><strong>minSpeechiness (float):</strong>  Restrict results to only those tracks whose speechiness level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>maxSpeechiness (float):</strong>  Restrict results to only those tracks whose speechiness level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetSpeechiness (float):</strong>  Restrict results to only those tracks whose speechiness level is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>minTempo (int):</strong>  Restrict results to only those tracks with a tempo greater than the specified number of beats per minute.  </li>\n<li><strong>maxTempo (int):</strong>  Restrict results to only those tracks with a tempo less than the specified number of beats per minute.  </li>\n<li><strong>targetTempo (int):</strong>  Restrict results to only those tracks with a tempo equal to the specified number of beats per minute.  </li>\n<li><strong>minTimeSignature (int):</strong>  Restrict results to only those tracks whose time signature is greater than the specified value. <br />\nMaximum value: 11</li>\n<li><strong>maxTimeSignature (int):</strong>  Restrict results to only those tracks whose time signature is less than the specified value.  </li>\n<li><strong>targetTimeSignature (int):</strong>  Restrict results to only those tracks whose time signature is equal to the specified value.  </li>\n<li><strong>minValence (float):</strong>  Restrict results to only those tracks whose valence level is greater than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>maxValence (float):</strong>  Restrict results to only those tracks whose valence level is less than the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n<li><strong>targetValence (float):</strong>  Restrict results to only those tracks whose valence level is equal to the specified value. <br />\nRange: <code>0</code> - <code>1</code>  </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>TrackRecommendations</code> object that contain the recommendations.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Recommendations are generated based on the available information for a given seed entity and matched \nagainst similar artists and tracks. If there is sufficient information about the provided seeds, a \nlist of tracks will be returned together with pool size details.  </p>\n\n<p>For artists and tracks that are very new or obscure there might not be enough data to generate a list of tracks.</p>\n\n<p>Important policy note:  </p>\n\n<ul>\n<li>Spotify content may not be used to train machine learning or AI model.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Wind Down</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify track recommendations for specified criteria.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting track recommendations - Wind Down!</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">recommendations</span><span class=\"p\">:</span><span class=\"n\">TrackRecommendations</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTrackRecommendations</span><span class=\"p\">(</span><span class=\"n\">seedArtists</span><span class=\"o\">=</span><span class=\"s1\">&#39;3jdODvx7rIdq0UGU7BOVR3&#39;</span><span class=\"p\">,</span><span class=\"n\">seedGenres</span><span class=\"o\">=</span><span class=\"s1\">&#39;piano&#39;</span><span class=\"p\">,</span><span class=\"n\">maxEnergy</span><span class=\"o\">=</span><span class=\"mf\">0.175</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">recommendations</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">seed</span><span class=\"p\">:</span><span class=\"n\">RecommendationSeed</span>\n    <span class=\"k\">for</span> <span class=\"n\">seed</span> <span class=\"ow\">in</span> <span class=\"n\">recommendations</span><span class=\"o\">.</span><span class=\"n\">Seeds</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Recommended Tracks:&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n    <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">recommendations</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n        <span class=\"c1\">#print(str(track))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<p><details>\n  <summary>Sample Code - I Wanna Rock!</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify track recommendations for specified criteria.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting track recommendations - I wanna rock!</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">recommendations</span><span class=\"p\">:</span><span class=\"n\">TrackRecommendations</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetTrackRecommendations</span><span class=\"p\">(</span><span class=\"n\">seedGenres</span><span class=\"o\">=</span><span class=\"s1\">&#39;rock,hard-rock,rock-n-roll&#39;</span><span class=\"p\">,</span><span class=\"n\">minLoudness</span><span class=\"o\">=-</span><span class=\"mf\">9.201</span><span class=\"p\">,</span><span class=\"n\">minTimeSignature</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"n\">minEnergy</span><span class=\"o\">=</span><span class=\"mf\">0.975</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">recommendations</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">seed</span><span class=\"p\">:</span><span class=\"n\">RecommendationSeed</span>\n    <span class=\"k\">for</span> <span class=\"n\">seed</span> <span class=\"ow\">in</span> <span class=\"n\">recommendations</span><span class=\"o\">.</span><span class=\"n\">Seeds</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Recommended Tracks:&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n    <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">recommendations</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"p\">:</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n        <span class=\"c1\">#print(str(track))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">seedArtists</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">seedGenres</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">seedTracks</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minAcousticness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxAcousticness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetAcousticness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minDanceability</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxDanceability</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetDanceability</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minDurationMS</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxDurationMS</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetDurationMS</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minEnergy</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxEnergy</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetEnergy</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minInstrumentalness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxInstrumentalness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetInstrumentalness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minKey</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxKey</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetKey</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minLiveness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxLiveness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetLiveness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minLoudness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxLoudness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetLoudness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minMode</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxMode</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetMode</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minPopularity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxPopularity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetPopularity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minSpeechiness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxSpeechiness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetSpeechiness</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minTempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxTempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetTempo</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minTimeSignature</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxTimeSignature</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetTimeSignature</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minValence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxValence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">targetValence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">trackrecommendations</span><span class=\"o\">.</span><span class=\"n\">TrackRecommendations</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetTypeFromUri", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetTypeFromUri", "kind": "function", "doc": "<p>Get the type portion from a Spotify uri value.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>uri (str):</strong>    The Spotify URI value.\nExample: <code>spotify:track:5v5ETK9WFXAnGQ3MRubKuE</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A string containing the type value (e.g. <code>track</code>).</p>\n</blockquote>\n\n<p>No exceptions are raised with this method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetUsersCurrentProfile", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetUsersCurrentProfile", "kind": "function", "doc": "<p>Get detailed profile information about the current user (including the current user's username).</p>\n\n<p>This method requires the <code>user-read-private</code> and <code>user-read-email</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>refresh (bool):</strong>  True (default) to return real-time information from the spotify web api and\nupdate the cache; otherwise, False to just return the cached value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>UserProfile</code> object that contains the user details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>ConfigurationCache</code> is updated with the results of this method.  Use the\n<code>refresh</code> argument (with False value) to retrieve the cached value and avoid\nthe spotify web api request.  This results in better performance.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># note - the spotify.UserProfile contains the same object, but you can also do it this way ...</span>\n\n    <span class=\"c1\"># get detailed profile information about the current user.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting user profile for current user ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">userProfile</span><span class=\"p\">:</span><span class=\"n\">UserProfile</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersCurrentProfile</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">userProfile</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration, refreshing from device if needed.</span>\n    <span class=\"n\">userProfile</span><span class=\"p\">:</span><span class=\"n\">UserProfile</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersCurrentProfile</span><span class=\"p\">(</span><span class=\"n\">refresh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">userProfile</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get cached configuration directly from the configuration manager dictionary.</span>\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;GetUsersCurrentProfile&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">:</span>\n        <span class=\"n\">userProfile</span><span class=\"p\">:</span><span class=\"n\">UserProfile</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ConfigurationCache</span><span class=\"p\">[</span><span class=\"s2\">&quot;GetUsersCurrentProfile&quot;</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Cached configuration direct access:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">userProfile</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">refresh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">userprofile</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetUsersPublicProfile", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetUsersPublicProfile", "kind": "function", "doc": "<p>Get public profile information about a Spotify user.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>userId (str):</strong>  The user's Spotify user ID.\nExample: <code>smedjan</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>UserProfileSimplified</code> object that contains the user's public details.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get public profile information about a Spotify user.</span>\n    <span class=\"n\">userId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;smedjan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting public user profile for user id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">userId</span><span class=\"p\">)</span>\n    <span class=\"n\">userProfile</span><span class=\"p\">:</span><span class=\"n\">UserProfileSimplified</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersPublicProfile</span><span class=\"p\">(</span><span class=\"n\">userId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">userProfile</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">userId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">userprofilesimplified</span><span class=\"o\">.</span><span class=\"n\">UserProfileSimplified</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetUsersTopArtists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetUsersTopArtists", "kind": "function", "doc": "<p>Get the current user's top artists based on calculated affinity.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>timeRange (str):</strong>  Over what time frame the affinities are computed. <br />\nValid values: <br />\n<ul>\n<li>long_term (calculated from several years of data and including all new data as it becomes available).  </li>\n<li>medium_term (approximately last 6 months).  </li>\n<li>short_term (approximately last 4 weeks). <br />\nDefault: <code>medium_term</code> <br />\nExample: <code>long_term</code></li>\n</ul></li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item), Range: 0 to 1000</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>ArtistPage</code> object of matching results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-top-read&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get current user&#39;s top artists based on calculated affinity.</span>\n    <span class=\"n\">affinity</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;long_term&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting current user top artists for &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; affinity ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">affinity</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ArtistPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersTopArtists</span><span class=\"p\">(</span><span class=\"n\">affinity</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Artists in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display artist details.</span>\n        <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span>\n        <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersTopArtists</span><span class=\"p\">(</span><span class=\"n\">affinity</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-top-read&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get current user&#39;s top artists based on calculated affinity.</span>\n    <span class=\"n\">affinity</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;long_term&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL current user top artists for &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; affinity ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">affinity</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ArtistPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersTopArtists</span><span class=\"p\">(</span><span class=\"n\">affinity</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display artist details.</span>\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span>\n    <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">timeRange</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;medium_term&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">artistpage</span><span class=\"o\">.</span><span class=\"n\">ArtistPage</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.GetUsersTopTracks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.GetUsersTopTracks", "kind": "function", "doc": "<p>Get the current user's top tracks based on calculated affinity.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>timeRange (str):</strong>  Over what time frame the affinities are computed. <br />\nValid values: <br />\n<ul>\n<li>long_term (calculated from several years of data and including all new data as it becomes available).  </li>\n<li>medium_term (approximately last 6 months).  </li>\n<li>short_term (approximately last 4 weeks). <br />\nDefault: <code>medium_term</code> <br />\nExample: <code>long_term</code></li>\n</ul></li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  </li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>An <code>TrackPage</code> object of matching results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-top-read&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get current user&#39;s top tracks based on calculated affinity.</span>\n    <span class=\"n\">affinity</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;long_term&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting current user top tracks for &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; affinity ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">affinity</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">TrackPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersTopTracks</span><span class=\"p\">(</span><span class=\"n\">affinity</span><span class=\"p\">,</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Tracks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display track details.</span>\n        <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n        <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">pageObj</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersTopTracks</span><span class=\"p\">(</span><span class=\"n\">affinity</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-top-read&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get current user&#39;s top tracks based on calculated affinity.</span>\n    <span class=\"n\">affinity</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;long_term&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting ALL current user top tracks for &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; affinity ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">affinity</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">TrackPage</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">GetUsersTopTracks</span><span class=\"p\">(</span><span class=\"n\">affinity</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Tracks in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display track details.</span>\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n    <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">timeRange</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;medium_term&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">trackpage</span><span class=\"o\">.</span><span class=\"n\">TrackPage</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerMediaPause", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerMediaPause", "kind": "function", "doc": "<p>Pause media play for the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># pause play on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Pause media on Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPause</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - media was paused&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerMediaPlayContext", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerMediaPlayContext", "kind": "function", "doc": "<p>Start playing one or more tracks of the specified context on a Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>contextUri (str):</strong>  Spotify URI of the context to play. <br />\nValid contexts are albums, artists &amp; playlists. <br />\nExample: <code>spotify:album:6vc9OTcyd3hyzabCmsdnwE</code>.   </li>\n<li><strong>offsetUri (str):</strong>  Indicates from where in the context playback should start. <br />\nOnly available when contextUri corresponds to an artist, album or playlist. <br />\nThe offsetPosition argument will be used if\nDefault is null. <br />\nExample: <code>5</code>  start playing at track # 4 (0=track 1, etc).  </li>\n<li><strong>offsetPosition (int):</strong>  Indicates from where in the context playback should start. <br />\nThe value is zero-based, and can't be negative. <br />\nOnly available when contextUri corresponds to an album or playlist. <br />\nDefault is <code>0</code>. <br />\nExample: <code>3</code>  start playing at track number 4.</li>\n<li><strong>positionMS (int):</strong>  The position in milliseconds to seek to; must be a positive number. <br />\nPassing in a position that is greater than the length of the track will cause the \nplayer to start playing the next song. <br />\nDefault is <code>0</code>. <br />\nExample: <code>25000</code>  </li>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code - Play Album</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># play album on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:album:6vc9OTcyd3hyzabCmsdnwE&#39;</span>  <span class=\"c1\"># Album = Welcome to the New</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing album on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - album should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play album starting at track #7 on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:album:6vc9OTcyd3hyzabCmsdnwE&#39;</span>  <span class=\"c1\"># Album = Welcome to the New</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing album starting at track #7 on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">offsetPosition</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - album should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play album starting at track #5 and 25 seconds position on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:album:6vc9OTcyd3hyzabCmsdnwE&#39;</span>  <span class=\"c1\"># Album = Welcome to the New</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing album starting at track #5 (25 seconds) on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">offsetPosition</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">positionMS</span><span class=\"o\">=</span><span class=\"mi\">25000</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - album should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play album starting at track id #7 on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:album:6vc9OTcyd3hyzabCmsdnwE&#39;</span>  <span class=\"c1\"># Album = Welcome to the New</span>\n    <span class=\"n\">offsetUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:1kWUud3vY5ij5r62zxpTRy&#39;</span>   <span class=\"c1\"># Track = Flawless</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing album starting at track #7 on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">offsetUri</span><span class=\"o\">=</span><span class=\"n\">offsetUri</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - album should be playing&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<p><details>\n  <summary>Sample Code - Play Artist</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># play artist on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:artist:6APm8EjxOHSYM5B4i3vT3q&#39;</span>  <span class=\"c1\"># Artist = MercyMe</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing artist on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - artist should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play artist and start first song played at the 25 seconds position on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:artist:6APm8EjxOHSYM5B4i3vT3q&#39;</span>  <span class=\"c1\"># Artist = MercyMe</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing artist at the 25 seconds position on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">positionMS</span><span class=\"o\">=</span><span class=\"mi\">25000</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - artist should be playing&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<p><details>\n  <summary>Sample Code - Play Playlist</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># play playlist on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:playlist:5v5ETK9WFXAnGQ3MRubKuE&#39;</span>  <span class=\"c1\"># Playlist = My Playlist</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing playlist on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - playlist should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play playlist starting at track #7 on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:playlist:5v5ETK9WFXAnGQ3MRubKuE&#39;</span>  <span class=\"c1\"># Playlist = My Playlist</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing playlist starting at track #7 on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">offsetPosition</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - playlist should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play playlist starting at track #5 and 25 seconds position on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:playlist:5v5ETK9WFXAnGQ3MRubKuE&#39;</span>  <span class=\"c1\"># Playlist = My Playlist</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing playlist starting at track #5 (25 seconds) on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">offsetPosition</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">positionMS</span><span class=\"o\">=</span><span class=\"mi\">25000</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - playlist should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play playlist starting at track id #7 on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">contextUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:playlist:5v5ETK9WFXAnGQ3MRubKuE&#39;</span>  <span class=\"c1\"># Playlist = My Playlist</span>\n    <span class=\"n\">offsetUri</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:1kWUud3vY5ij5r62zxpTRy&#39;</span>      <span class=\"c1\"># Track = Flawless</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing playlist starting at track #7 on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">contextUri</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayContext</span><span class=\"p\">(</span><span class=\"n\">contextUri</span><span class=\"p\">,</span> <span class=\"n\">offsetUri</span><span class=\"o\">=</span><span class=\"n\">offsetUri</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"o\">=</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - playlist should be playing&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">contextUri</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">offsetUri</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">offsetPosition</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">positionMS</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerMediaPlayTracks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerMediaPlayTracks", "kind": "function", "doc": "<p>Start playing one or more tracks on the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>uris (str):</strong>  A list of Spotify track URIs to play; can be track or episode URIs. <br />\nExample: [<code>spotify:track:4iV5W9uYEdYUVa79Axb7Rh</code> ,<code>spotify:episode:512ojhOuo1ktJprKbVcKyQ</code>]. <br />\nIt can also be specified as a comma-delimited string. <br />\nExample: <code>spotify:track:4iV5W9uYEdYUVa79Axb7Rh,spotify:episode:512ojhOuo1ktJprKbVcKyQ</code>. <br />\nA maximum of 50 items can be added in one request.</li>\n<li><strong>positionMS (int):</strong>  The position in milliseconds to seek to; must be a positive number. <br />\nPassing in a position that is greater than the length of the track will cause the \nplayer to start playing the next song. <br />\nDefault is <code>0</code>. <br />\nExample: <code>25000</code>  </li>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># play single track on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">uris</span><span class=\"p\">:</span><span class=\"nb\">str</span><span class=\"o\">=</span><span class=\"s1\">&#39;spotify:track:1kWUud3vY5ij5r62zxpTRy&#39;</span>  <span class=\"c1\"># Flawless</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing media on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">uris</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayTracks</span><span class=\"p\">(</span><span class=\"n\">uris</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - media should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play single track on the specified Spotify Connect device.</span>\n    <span class=\"c1\"># start playing at the 25 seconds (25000 milliseconds) point in the track.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">uris</span><span class=\"p\">:</span><span class=\"nb\">str</span><span class=\"o\">=</span><span class=\"s1\">&#39;spotify:track:1kWUud3vY5ij5r62zxpTRy&#39;</span>  <span class=\"c1\"># Flawless</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing media on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">uris</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayTracks</span><span class=\"p\">(</span><span class=\"n\">uris</span><span class=\"p\">,</span> <span class=\"mi\">25000</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - media should be playing&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># play multiple tracks on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"n\">uris</span><span class=\"p\">:</span><span class=\"nb\">str</span><span class=\"o\">=</span><span class=\"s1\">&#39;spotify:track:1kWUud3vY5ij5r62zxpTRy,spotify:track:27JODWXo4VNa6s7HqDL9yQ,spotify:track:4iV5W9uYEdYUVa79Axb7Rh&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playing media on Spotify Connect device: </span><span class=\"se\">\\n</span><span class=\"s1\">ID: </span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"n\">uris</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaPlayTracks</span><span class=\"p\">(</span><span class=\"n\">uris</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - media should be playing&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uris</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">positionMS</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerMediaResume", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerMediaResume", "kind": "function", "doc": "<p>Resume media play for the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># resume play on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Resume media on Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaResume</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - media was resumed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerMediaSeek", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerMediaSeek", "kind": "function", "doc": "<p>Seeks to the given position in the user's currently playing track for the specified \nSpotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>positionMS (int):</strong>  The position in milliseconds to seek to; must be a positive number. <br />\nPassing in a position that is greater than the length of the track will cause the \nplayer to start playing the next song.\nExample: <code>25000</code>  </li>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># seek to the given position in the on the specified Spotify Connect device.</span>\n    <span class=\"n\">positionMS</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">25000</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Seeking to </span><span class=\"si\">%d</span><span class=\"s1\"> milliseconds on Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">positionMS</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaSeek</span><span class=\"p\">(</span><span class=\"n\">positionMS</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - seek to position in track&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">positionMS</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerMediaSkipNext", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerMediaSkipNext", "kind": "function", "doc": "<p>Skips to next track in the user's queue for the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># skip to next track on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Skip to next track on Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaSkipNext</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - skipped to next track&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerMediaSkipPrevious", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerMediaSkipPrevious", "kind": "function", "doc": "<p>Skips to previous track in the user's queue for the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># skip to previous track on the specified Spotify Connect device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Skip to previous track on Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerMediaSkipPrevious</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - skipped to previous track&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerSetRepeatMode", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerSetRepeatMode", "kind": "function", "doc": "<p>Set repeat mode for the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>state (str):</strong>  The repeat mode to set: \n<ul>\n<li><code>track</code>   - will repeat the current track.</li>\n<li><code>context</code> - will repeat the current context.</li>\n<li><code>off</code>     - will turn repeat off.\nDefault: <code>off</code>  </li>\n</ul></li>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># set repeat mode CONTEXT for the user&#39;s current playback device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Set repeat mode CONTEXT for Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerSetRepeatMode</span><span class=\"p\">(</span><span class=\"s1\">&#39;context&#39;</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - repeat mode CONTEXT was set&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># set repeat mode TRACK for the user&#39;s current playback device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Set repeat mode to single track for Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerSetRepeatMode</span><span class=\"p\">(</span><span class=\"s1\">&#39;track&#39;</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - repeat mode TRACK was set&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># set repeat mode OFF for the user&#39;s current playback device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Set repeat mode OFF for Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerSetRepeatMode</span><span class=\"p\">(</span><span class=\"s1\">&#39;off&#39;</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - repeat mode OFF was set&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;off&#39;</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerSetShuffleMode", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerSetShuffleMode", "kind": "function", "doc": "<p>Set shuffle mode for the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>state (bool):</strong>  The shuffle mode to set: \n<ul>\n<li><code>True</code>  - Shuffle user's playback.</li>\n<li><code>False</code> - Do not shuffle user's playback.\nDefault: <code>False</code>  </li>\n</ul></li>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># set shuffle mode ON for the user&#39;s current playback device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Set shuffle mode ON for Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerSetShuffleMode</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - shuffle mode ON was set&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># set shuffle mode OFF for the user&#39;s current playback device.</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Set shuffle mode OFF for Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerSetShuffleMode</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - shuffle mode OFF was set&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerSetVolume", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerSetVolume", "kind": "function", "doc": "<p>Set volume level for the specified Spotify Connect device.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>volumePercent (int):</strong>  The volume to set. <br />\nMust be a value from 0 to 100 inclusive.\nExample: <code>50</code></li>\n<li><strong>deviceId (str):</strong>  The id of the device this command is targeting. <br />\nIf not supplied, the user's currently active device is the target. <br />\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># set the volume for the user&#39;s current playback device.</span>\n    <span class=\"n\">volumePercent</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>   <span class=\"c1\"># use currently playing device</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Set </span><span class=\"si\">%d%%</span><span class=\"s1\"> volume on Spotify Connect device:</span><span class=\"se\">\\n</span><span class=\"s1\">- &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">volumePercent</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerSetVolume</span><span class=\"p\">(</span><span class=\"n\">volumePercent</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - volume was set&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">volumePercent</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerTransferPlayback", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerTransferPlayback", "kind": "function", "doc": "<p>Transfer playback to a new Spotify Connect device and optionally begin playback.</p>\n\n<p>This method requires the <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>deviceId (str):</strong>  The id of the device on which playback should be started/transferred.\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n<li><strong>play (bool):</strong>  The transfer method: <br />\n<ul>\n<li><code>True</code>  - ensure playback happens on new device.   </li>\n<li><code>False</code> - keep the current playback state. <br />\nDefault: <code>True</code>  </li>\n</ul></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>This API only works for users who have Spotify Premium. </p>\n\n<p>The order of execution is not guaranteed when you use this API with other Player API endpoints.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># transfer Spotify Connect playback control to another device.</span>\n    <span class=\"c1\"># the device name and id can be retrieved from `GetPlayerDevices` method.</span>\n    <span class=\"n\">deviceName</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Web Player (Chrome)&#39;</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;13c7b6361ab322f28c39bf7638f058290d88bb58&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Transfer Spotify Connect playback control to:</span><span class=\"se\">\\n</span><span class=\"s1\">-Name: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">ID:   </span><span class=\"si\">%s</span><span class=\"s1\"> ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceName</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerTransferPlayback</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - control was transferred&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># transfer Spotify Connect playback control to another device.</span>\n    <span class=\"c1\"># the device name and id can be retrieved from `GetPlayerDevices` method.</span>\n    <span class=\"n\">deviceName</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Bose ST-10 Speaker&#39;</span>\n    <span class=\"n\">deviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;30fbc80e35598f3c242f2120413c943dfd9715fe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Transfer Spotify Connect playback control to:</span><span class=\"se\">\\n</span><span class=\"s1\">-Name: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">ID:   </span><span class=\"si\">%s</span><span class=\"s1\"> ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">deviceName</span><span class=\"p\">,</span> <span class=\"n\">deviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerTransferPlayback</span><span class=\"p\">(</span><span class=\"n\">deviceId</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - control was transferred&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">play</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.PlayerVerifyDeviceDefault", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.PlayerVerifyDeviceDefault", "kind": "function", "doc": "<p>Checks to see if there is an active Spotify Connect device, and if not to make one active.</p>\n\n<p>If no active device was found, then it will activate the device specified by the defaultDeviceId argument\nand optionally start play on the device.</p>\n\n<p>This method requires the <code>user-read-playback-state</code> and <code>user-modify-playback-state</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>defaultDeviceId (str):</strong>  The id of the device on which playback should be started/transferred if there is\ncurrently no active device.\nExample: <code>0d1841b0976bae2a3a310dd74c0f3df354899bc8</code></li>\n<li><strong>play (bool):</strong>  The transfer method: <br />\n<ul>\n<li><code>True</code>  - ensure playback happens on new device.   </li>\n<li><code>False</code> - keep the current playback state. <br />\nDefault: <code>False</code>  </li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>PlayerPlayState</code> object that contains the currently playing media, or null if nothing is playing.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-modify-playback-state&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-playback-state&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># verify that Spotify Connect has a default player active.</span>\n    <span class=\"n\">defaultDeviceId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;236427c8c0d510caa323f84cb42bc03eec090750&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Verifying Spotify Connect player is active; default device if not:</span><span class=\"se\">\\n</span><span class=\"s1\">- ID: </span><span class=\"si\">%s</span><span class=\"s1\"> ...&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">defaultDeviceId</span><span class=\"p\">))</span>\n    <span class=\"n\">playerState</span><span class=\"p\">:</span><span class=\"n\">PlayerPlayState</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">PlayerVerifyDeviceDefault</span><span class=\"p\">(</span><span class=\"n\">defaultDeviceId</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playerState</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">playerState</span><span class=\"o\">.</span><span class=\"n\">Item</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">defaultDeviceId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">play</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">playerplaystate</span><span class=\"o\">.</span><span class=\"n\">PlayerPlayState</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.RemoveAlbumFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.RemoveAlbumFavorites", "kind": "function", "doc": "<p>Remove one or more albums from the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the albums. <br />\nMaximum: 50 IDs. <br />\nExample: <code>6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TX</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if an album id in the list does not exist in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove one or more albums from the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">albumIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;382ObEPsp2rxGrnsizN5TX,6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TY&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing saved album(s) from the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">albumIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">RemoveAlbumFavorites</span><span class=\"p\">(</span><span class=\"n\">albumIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - album(s) were removed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.RemoveAudiobookFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.RemoveAudiobookFavorites", "kind": "function", "doc": "<p>Remove one or more audiobooks from the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the audiobooks. <br />\nMaximum: 50 IDs. <br />\nExample: <code>3PFyizE2tGCSRLusl2Qizf,7iHfbu1YPACw6oZPAFJtqe</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if a audiobook id in the list does not exist in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove one or more audiobooks from the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">audiobookIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;3PFyizE2tGCSRLusl2Qizf,7iHfbu1YPACw6oZPAFJtqe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing saved audiobook(s) from the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">audiobookIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">RemoveAudiobookFavorites</span><span class=\"p\">(</span><span class=\"n\">audiobookIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - audiobook(s) were removed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.RemoveEpisodeFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.RemoveEpisodeFavorites", "kind": "function", "doc": "<p>Remove one or more episodes from the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the episodes. <br />\nMaximum: 50 IDs. <br />\nExample: <code>6kAsbP8pxwaU2kPibKTuHE,4rOoJ6Egrf8K2IrywzwOMk</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if a episode id in the list does not exist in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove one or more episodes from the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">episodeIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1hPX5WJY6ja6yopgVPBqm4,3F97boSWlXi8OzuhWClZHQ&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing saved episode(s) from the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">episodeIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">RemoveEpisodeFavorites</span><span class=\"p\">(</span><span class=\"n\">episodeIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - episode(s) were removed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.RemovePlaylistItems", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.RemovePlaylistItems", "kind": "function", "doc": "<p>Remove one or more items from a user's playlist.</p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist.\nExample: <code>5AC9ZXA7nJ7oGWO911FuDG</code></li>\n<li><strong>uris (str):</strong>    A comma-separated list of Spotify URIs to remove; can be track or episode URIs. <br />\nExample: <code>spotify:track:4iV5W9uYEdYUVa79Axb7Rh,spotify:episode:512ojhOuo1ktJprKbVcKyQ</code>. <br />\nA maximum of 100 items can be removed in one request.</li>\n<li><strong>snapshotId (str):</strong>    The playlist's snapshot ID against which you want to make the changes. <br />\nThe API will validate that the specified items exist and in the specified positions and \nmake the changes, even if more recent changes have been made to the playlist.\nIf null, the current playlist is updated. <br />\nDefault is null.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A snapshot ID for the updated playlist.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>snapshotId</code> argument value will be returned if no items were removed; otherwise, a\nnew snapshot id value will be returned.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove items from current playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"n\">itemUris</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:2takcwOaAZWiXQijPHIx7B,spotify:track:4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing items from playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">itemUris</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">RemovePlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">itemUris</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># remove items from a playlist snapshot.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"n\">snapshotId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;NDQsMGI2ZjJhMTcyNWY3NmMyZDZhNTkxNTc5ODI0ZGFjOWRkYWM2N2QyMw====&#39;</span>\n    <span class=\"n\">itemUris</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:2takcwOaAZWiXQijPHIx7B,spotify:track:4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing items from snapshot playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">itemUris</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">RemovePlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">itemUris</span><span class=\"p\">,</span> <span class=\"n\">snapshotId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">uris</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">snapshotId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.RemoveShowFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.RemoveShowFavorites", "kind": "function", "doc": "<p>Remove one or more shows from the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the shows. <br />\nMaximum: 50 IDs. <br />\nExample: <code>6kAsbP8pxwaU2kPibKTuHE,4rOoJ6Egrf8K2IrywzwOMk</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if a show id in the list does not exist in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove one or more shows from the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">showIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;6kAsbP8pxwaU2kPibKTuHE,4rOoJ6Egrf8K2IrywzwOMk,1y3SUbFMUSESC1N43tBleK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing saved show(s) from the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">showIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">RemoveShowFavorites</span><span class=\"p\">(</span><span class=\"n\">showIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - show(s) were removed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.RemoveTrackFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.RemoveTrackFavorites", "kind": "function", "doc": "<p>Remove one or more tracks from the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the tracks. <br />\nMaximum: 50 IDs. <br />\nExample: <code>1kWUud3vY5ij5r62zxpTRy,4eoYKv2kDwJS7gRGh5q6SK</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if a track id in the list does not exist in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove one or more tracks from the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">trackIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1kWUud3vY5ij5r62zxpTRy,2takcwOaAZWiXQijPHIx7B,4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Removing saved track(s) from the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">trackIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">RemoveTrackFavorites</span><span class=\"p\">(</span><span class=\"n\">trackIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - track(s) were removed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ReorderPlaylistItems", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ReorderPlaylistItems", "kind": "function", "doc": "<p>Reorder items in a user's playlist.</p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist.\nExample: <code>5AC9ZXA7nJ7oGWO911FuDG</code></li>\n<li><strong>rangeStart (int):</strong>  The position of the first item to be reordered. <br />\nThis is a one-offset integer (NOT zero-offset).</li>\n<li><strong>insertBefore (int):</strong>  The position where the items should be inserted.\nTo reorder the items to the end of the playlist, simply set <code>insertBefore</code> \nto the position after the last item. <br />\nThis is a one-offset integer (NOT zero-offset).</li>\n<li><strong>rangeLength (int):</strong>  The amount of items to be reordered; defaults to 1 if not set. <br />\nThe range of items to be reordered begins from the <code>rangeStart</code> position, and includes \nthe <code>rangeLength</code> subsequent items.  </li>\n<li><strong>snapshotId (str):</strong>    The playlist's snapshot ID against which you want to make the changes. <br />\nIf null, the current playlist is updated. <br />\nDefault is null.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A snapshot ID for the updated playlist.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>The <code>rangeStart</code> and <code>insertBefore</code> arguments are one-offset values; the underlying Spotify\nWeb API utilizes zero-based offsets for these values.  The one-offset values make it much \neasier (IMHO) to compare the results with the Spotify Web UI, which uses a one-offset track \nnumbering scheme (e.g. the first track is #1, then #2, etc).  See the examples below for\nthe various ways to reorder tracks.</p>\n\n<p>The <code>snapshotId</code> argument value will be returned if no items were reordered; otherwise, a\nnew snapshot id value will be returned.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># the following examples were run for a playlist that contains 9 tracks.</span>\n\n    <span class=\"c1\"># reorder items in current playlist - move track #5 to position #1 in the list.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Reordering items in playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;: </span><span class=\"se\">\\n</span><span class=\"s1\">- move track #5 to position #1 in the list&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ReorderPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># reorder items in current playlist - move tracks #5,6,7 to position #1 in the list.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Reordering items in playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;: </span><span class=\"se\">\\n</span><span class=\"s1\">- move tracks #5,6,7 to position #1 in the list&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ReorderPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># reorder items in current playlist - move track #7 to position #6 in the list.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Reordering items in playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;: </span><span class=\"se\">\\n</span><span class=\"s1\">- move track #7 to position #6 in the list&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ReorderPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># reorder items in current playlist - move track #5 to position #10 in the list.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Reordering items in playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;: </span><span class=\"se\">\\n</span><span class=\"s1\">- move track #5 to position #10 in the list&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">))</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ReorderPlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlist updated successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rangeStart</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">insertBefore</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">rangeLength</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">snapshotId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ReplacePlaylistItems", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ReplacePlaylistItems", "kind": "function", "doc": "<p>Replace one or more items in a user's playlist. Replacing items in a playlist will \noverwrite its existing items. </p>\n\n<p>This method can also be used to clear a playlist.</p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist.\nExample: <code>5AC9ZXA7nJ7oGWO911FuDG</code></li>\n<li><strong>uris (str):</strong>    A comma-separated list of Spotify URIs to replace; can be track or episode URIs. <br />\nExample: <code>spotify:track:4iV5W9uYEdYUVa79Axb7Rh,spotify:episode:512ojhOuo1ktJprKbVcKyQ</code>. <br />\nA maximum of 100 items can be replaced in one request.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A snapshot ID for the updated playlist.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># replace items in a playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;4yptcTKnXjCu3V92tVVafS&#39;</span>\n    <span class=\"n\">itemUris</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;spotify:track:1kWUud3vY5ij5r62zxpTRy&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Replacing items in playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">ReplacePlaylistItems</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">,</span> <span class=\"n\">itemUris</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Playlist items replaced successfully:</span><span class=\"se\">\\n</span><span class=\"s1\">- snapshot ID = &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">uris</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SaveAlbumFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SaveAlbumFavorites", "kind": "function", "doc": "<p>Save one or more albums to the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the albums. <br />\nMaximum: 50 IDs. <br />\nExample: <code>6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TX,2noRn2Aes5aoNVsU6iWThc</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if an album id in the list already exists in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># save one or more albums to the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">albumIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;382ObEPsp2rxGrnsizN5TX,6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TY&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding saved album(s) to the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">albumIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SaveAlbumFavorites</span><span class=\"p\">(</span><span class=\"n\">albumIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - album(s) were added&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SaveAudiobookFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SaveAudiobookFavorites", "kind": "function", "doc": "<p>Save one or more audiobooks to the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the audiobooks. <br />\nMaximum: 50 IDs. <br />\nExample: <code>3PFyizE2tGCSRLusl2Qizf,7iHfbu1YPACw6oZPAFJtqe</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if an audiobook id in the list already exists in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># save one or more audiobooks to the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">audiobookIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;3PFyizE2tGCSRLusl2Qizf,7iHfbu1YPACw6oZPAFJtqe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding saved audiobook(s) to the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">audiobookIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SaveAudiobookFavorites</span><span class=\"p\">(</span><span class=\"n\">audiobookIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - audiobook(s) were added&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SaveEpisodeFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SaveEpisodeFavorites", "kind": "function", "doc": "<p>Save one or more episodes to the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the episodes. <br />\nMaximum: 50 IDs. <br />\nExample: <code>6kAsbP8pxwaU2kPibKTuHE,4rOoJ6Egrf8K2IrywzwOMk</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if an episode id in the list already exists in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># save one or more episodes to the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">episodeIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1hPX5WJY6ja6yopgVPBqm4,3F97boSWlXi8OzuhWClZHQ&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding saved episode(s) to the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">episodeIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SaveEpisodeFavorites</span><span class=\"p\">(</span><span class=\"n\">episodeIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - episode(s) were added&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SaveShowFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SaveShowFavorites", "kind": "function", "doc": "<p>Save one or more shows to the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the shows. <br />\nMaximum: 50 IDs. <br />\nExample: <code>6kAsbP8pxwaU2kPibKTuHE,4rOoJ6Egrf8K2IrywzwOMk</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if an show id in the list already exists in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># save one or more shows to the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">showIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;7bnjJ7Va1nM07Um4Od55dW,6cRP8gclqWDfA9pkKsqDPv,4HHvTURWViZE5vYuSt0ldG&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding saved show(s) to the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">showIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SaveShowFavorites</span><span class=\"p\">(</span><span class=\"n\">showIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - show(s) were added&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SaveTrackFavorites", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SaveTrackFavorites", "kind": "function", "doc": "<p>Save one or more tracks to the current user's 'Your Library'.</p>\n\n<p>This method requires the <code>user-library-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of the Spotify IDs for the tracks. <br />\nMaximum: 50 IDs. <br />\nExample: <code>6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TX,2noRn2Aes5aoNVsU6iWThc</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No error will be raised if a track id in the list already exists in the \nuser's 'Your Library'.</p>\n\n<p>An SpotifyWebApiError will be raised if a specified album id does not exist\nin the Spotify music catalog.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># save one or more tracks to the current user&#39;s &#39;Your Library&#39;.</span>\n    <span class=\"n\">trackIds</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1kWUud3vY5ij5r62zxpTRy,2takcwOaAZWiXQijPHIx7B,4eoYKv2kDwJS7gRGh5q6SK&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Adding saved track(s) to the current users profile: </span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">trackIds</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SaveTrackFavorites</span><span class=\"p\">(</span><span class=\"n\">trackIds</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - track(s) were added&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SearchAlbums", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SearchAlbums", "kind": "function", "doc": "<p>Get Spotify catalog information about Albums that match a keyword string. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>criteria (str):</strong>  Your search query. <br />\nYou can narrow down your search using field filters. <br />\nThe available filters are album, artist, track, year, upc, tag:hipster, tag:new, \nisrc, and genre. Each field filter only applies to certain result types. <br />\nThe artist and year filters can be used while searching albums, artists and tracks.\nYou can filter on a single year or a range (e.g. 1955-1960). <br />\nThe album filter can be used while searching albums and tracks. <br />\nThe genre filter can be used while searching artists and tracks. <br />\nThe isrc and track filters can be used while searching tracks. <br />\nThe upc, tag:new and tag:hipster filters can only be used while searching albums. \nThe tag:new filter will return albums released in the past two weeks and tag:hipster \ncan be used to return only albums with the lowest 10% popularity.</li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  Range: 0 to 1000.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>includeExternal (str):</strong>  If \"audio\" is specified it signals that the client can play externally hosted audio content, and \nmarks the content as playable in the response. By default externally hosted audio content is marked \nas unplayable in the response. <br />\nAllowed values: \"audio\"</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>SearchResponse</code> object that contains the search results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Note that Spotify Web API automatically limits you to 1,000 max entries per type that can\nbe returned with a search.</p>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Albums that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Welcome to the New&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Albums - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">searchResponse</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchAlbums</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display search response details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">searchResponse</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># save initial search response total, as search next page response total </span>\n    <span class=\"c1\"># will change with each page retrieved.  this is odd behavior, as it seems</span>\n    <span class=\"c1\"># that the spotify web api is returning a new result set each time rather </span>\n    <span class=\"c1\"># than working off of a cached result set.</span>\n    <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Albums</span><span class=\"o\">.</span><span class=\"n\">Total</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># only display album results for this example.</span>\n        <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AlbumPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Albums</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Albums in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display album details.</span>\n        <span class=\"n\">album</span><span class=\"p\">:</span><span class=\"n\">AlbumSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">album</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># for testing - don&#39;t return 1000 results!  </span>\n        <span class=\"c1\"># comment the following 3 lines of code if you want ALL results.</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">75</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">*** Stopping paging loop after 75 entries for testing.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">((</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">):</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">searchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchAlbums</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Albums that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Welcome to the New&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Albums - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchAlbums</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Albums</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Albums in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Albums</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display album details.</span>\n    <span class=\"n\">album</span><span class=\"p\">:</span><span class=\"n\">AlbumSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">album</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Albums</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">album</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">criteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">includeExternal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">searchresponse</span><span class=\"o\">.</span><span class=\"n\">SearchResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SearchArtists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SearchArtists", "kind": "function", "doc": "<p>Get Spotify catalog information about Artists that match a keyword string. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>criteria (str):</strong>  Your search query. <br />\nYou can narrow down your search using field filters. <br />\nThe available filters are album, artist, track, year, upc, tag:hipster, tag:new, \nisrc, and genre. Each field filter only applies to certain result types. <br />\nThe artist and year filters can be used while searching albums, artists and tracks.\nYou can filter on a single year or a range (e.g. 1955-1960). <br />\nThe album filter can be used while searching albums and tracks. <br />\nThe genre filter can be used while searching artists and tracks. <br />\nThe isrc and track filters can be used while searching tracks. <br />\nThe upc, tag:new and tag:hipster filters can only be used while searching albums. \nThe tag:new filter will return albums released in the past two weeks and tag:hipster \ncan be used to return only albums with the lowest 10% popularity.</li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  Range: 0 to 1000.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>includeExternal (str):</strong>  If \"audio\" is specified it signals that the client can play externally hosted audio content, and \nmarks the content as playable in the response. By default externally hosted audio content is marked \nas unplayable in the response. <br />\nAllowed values: \"audio\"</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>SearchResponse</code> object that contains the search results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Note that Spotify Web API automatically limits you to 1,000 max entries per type that can\nbe returned with a search.</p>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Artists that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MercyMe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Artists - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">searchResponse</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchArtists</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display search response details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">searchResponse</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># save initial search response total, as search next page response total </span>\n    <span class=\"c1\"># will change with each page retrieved.  this is odd behavior, as it seems</span>\n    <span class=\"c1\"># that the spotify web api is returning a new result set each time rather </span>\n    <span class=\"c1\"># than working off of a cached result set.</span>\n    <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"o\">.</span><span class=\"n\">Total</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># only display artist results for this example.</span>\n        <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ArtistPage</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Artists</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artists in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display artist details.</span>\n        <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">ArtistPage</span>\n        <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># for testing - don&#39;t return 1000 results!  </span>\n        <span class=\"c1\"># comment the following 3 lines of code if you want ALL results.</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">75</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">*** Stopping paging loop after 75 entries for testing.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">((</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">):</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">searchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchArtists</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Artists that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MercyMe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Artists - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchArtists</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Artists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display artist details.</span>\n    <span class=\"n\">artist</span><span class=\"p\">:</span><span class=\"n\">Artist</span>\n    <span class=\"k\">for</span> <span class=\"n\">artist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Artists</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">criteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">includeExternal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">searchresponse</span><span class=\"o\">.</span><span class=\"n\">SearchResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SearchAudiobooks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SearchAudiobooks", "kind": "function", "doc": "<p>Get Spotify catalog information about Audiobooks that match a keyword string. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>criteria (str):</strong>  Your search query. <br />\nYou can narrow down your search using field filters. <br />\nThe available filters are album, artist, track, year, upc, tag:hipster, tag:new, \nisrc, and genre. Each field filter only applies to certain result types. <br />\nThe artist and year filters can be used while searching albums, artists and tracks.\nYou can filter on a single year or a range (e.g. 1955-1960). <br />\nThe album filter can be used while searching albums and tracks. <br />\nThe genre filter can be used while searching artists and tracks. <br />\nThe isrc and track filters can be used while searching tracks. <br />\nThe upc, tag:new and tag:hipster filters can only be used while searching albums. \nThe tag:new filter will return albums released in the past two weeks and tag:hipster \ncan be used to return only albums with the lowest 10% popularity.</li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  Range: 0 to 1000.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>includeExternal (str):</strong>  If \"audio\" is specified it signals that the client can play externally hosted audio content, and \nmarks the content as playable in the response. By default externally hosted audio content is marked \nas unplayable in the response. <br />\nAllowed values: \"audio\"</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>SearchResponse</code> object that contains the search results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.</p>\n\n<p>Note that Spotify Web API automatically limits you to 1,000 max entries per type that can\nbe returned with a search.</p>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Audiobooks that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Terry Brooks&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Audiobooks - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">searchResponse</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchAudiobooks</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display search response details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">searchResponse</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># save initial search response total, as search next page response total </span>\n    <span class=\"c1\"># will change with each page retrieved.  this is odd behavior, as it seems</span>\n    <span class=\"c1\"># that the spotify web api is returning a new result set each time rather </span>\n    <span class=\"c1\"># than working off of a cached result set.</span>\n    <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Audiobooks</span><span class=\"o\">.</span><span class=\"n\">Total</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># only display audiobook results for this example.</span>\n        <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">AudiobookPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Audiobooks</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Audiobooks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display audiobook details.</span>\n        <span class=\"n\">audiobook</span><span class=\"p\">:</span><span class=\"n\">AudiobookSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">audiobook</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># for testing - don&#39;t return 1000 results!  </span>\n        <span class=\"c1\"># comment the following 3 lines of code if you want ALL results.</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">75</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">*** Stopping paging loop after 75 entries for testing.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">((</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">):</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">searchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchAudiobooks</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Audiobooks that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Terry Brooks&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Audiobooks - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchAudiobooks</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Audiobooks</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Audiobooks in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Audiobooks</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display audiobook details.</span>\n    <span class=\"n\">audiobook</span><span class=\"p\">:</span><span class=\"n\">Audiobook</span>\n    <span class=\"k\">for</span> <span class=\"n\">audiobook</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Audiobooks</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">audiobook</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">criteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">includeExternal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">searchresponse</span><span class=\"o\">.</span><span class=\"n\">SearchResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SearchEpisodes", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SearchEpisodes", "kind": "function", "doc": "<p>Get Spotify catalog information about Episodes that match a keyword string. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>criteria (str):</strong>  Your search query. <br />\nYou can narrow down your search using field filters. <br />\nThe available filters are album, artist, track, year, upc, tag:hipster, tag:new, \nisrc, and genre. Each field filter only applies to certain result types. <br />\nThe artist and year filters can be used while searching albums, artists and tracks.\nYou can filter on a single year or a range (e.g. 1955-1960). <br />\nThe album filter can be used while searching albums and tracks. <br />\nThe genre filter can be used while searching artists and tracks. <br />\nThe isrc and track filters can be used while searching tracks. <br />\nThe upc, tag:new and tag:hipster filters can only be used while searching albums. \nThe tag:new filter will return albums released in the past two weeks and tag:hipster \ncan be used to return only albums with the lowest 10% popularity.</li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  Range: 0 to 1000.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>includeExternal (str):</strong>  If \"audio\" is specified it signals that the client can play externally hosted audio content, and \nmarks the content as playable in the response. By default externally hosted audio content is marked \nas unplayable in the response. <br />\nAllowed values: \"audio\"</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>SearchResponse</code> object that contains the search results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Note that Spotify Web API automatically limits you to 1,000 max entries per type that can\nbe returned with a search.</p>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Episodes that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;The LOL Podcast&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Episodes - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">searchResponse</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchEpisodes</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display search response details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">searchResponse</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># save initial search response total, as search next page response total </span>\n    <span class=\"c1\"># will change with each page retrieved.  this is odd behavior, as it seems</span>\n    <span class=\"c1\"># that the spotify web api is returning a new result set each time rather </span>\n    <span class=\"c1\"># than working off of a cached result set.</span>\n    <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Episodes</span><span class=\"o\">.</span><span class=\"n\">Total</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># only display episode results for this example.</span>\n        <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">EpisodePageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Episodes</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Episodes in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display episode details.</span>\n        <span class=\"n\">episode</span><span class=\"p\">:</span><span class=\"n\">EpisodeSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">episode</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">episode</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">episode</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># for testing - don&#39;t return 1000 results!  </span>\n        <span class=\"c1\"># comment the following 3 lines of code if you want ALL results.</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">75</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">*** Stopping paging loop after 75 entries for testing.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">((</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">):</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">searchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchEpisodes</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Episodes that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;The LOL Podcast&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Episodes - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchEpisodes</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Episodes</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Episodes in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Episodes</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display episode details.</span>\n    <span class=\"n\">episode</span><span class=\"p\">:</span><span class=\"n\">EpisodeSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">episode</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Episodes</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">episode</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">episode</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">criteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">includeExternal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">searchresponse</span><span class=\"o\">.</span><span class=\"n\">SearchResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SearchPlaylists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SearchPlaylists", "kind": "function", "doc": "<p>Get Spotify catalog information about Playlists that match a keyword string. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>criteria (str):</strong>  Your search query. <br />\nYou can narrow down your search using field filters. <br />\nThe available filters are album, artist, track, year, upc, tag:hipster, tag:new, \nisrc, and genre. Each field filter only applies to certain result types. <br />\nThe artist and year filters can be used while searching albums, artists and tracks.\nYou can filter on a single year or a range (e.g. 1955-1960). <br />\nThe album filter can be used while searching albums and tracks. <br />\nThe genre filter can be used while searching artists and tracks. <br />\nThe isrc and track filters can be used while searching tracks. <br />\nThe upc, tag:new and tag:hipster filters can only be used while searching albums. \nThe tag:new filter will return albums released in the past two weeks and tag:hipster \ncan be used to return only albums with the lowest 10% popularity.</li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  Range: 0 to 1000.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>includeExternal (str):</strong>  If \"audio\" is specified it signals that the client can play externally hosted audio content, and \nmarks the content as playable in the response. By default externally hosted audio content is marked \nas unplayable in the response. <br />\nAllowed values: \"audio\"</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>SearchResponse</code> object that contains the search results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Note that Spotify Web API automatically limits you to 1,000 max entries per type that can\nbe returned with a search.</p>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Playlists that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MercyMe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Playlists - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">searchResponse</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchPlaylists</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display search response details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">searchResponse</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># save initial search response total, as search next page response total </span>\n    <span class=\"c1\"># will change with each page retrieved.  this is odd behavior, as it seems</span>\n    <span class=\"c1\"># that the spotify web api is returning a new result set each time rather </span>\n    <span class=\"c1\"># than working off of a cached result set.</span>\n    <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Playlists</span><span class=\"o\">.</span><span class=\"n\">Total</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># only display playlist results for this example.</span>\n        <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">PlaylistPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Playlists</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlists in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display playlist details.</span>\n        <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># for testing - don&#39;t return 1000 results!  </span>\n        <span class=\"c1\"># comment the following 3 lines of code if you want ALL results.</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">75</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">*** Stopping paging loop after 75 entries for testing.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">((</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">):</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">searchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchPlaylists</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Playlists that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MercyMe&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Playlists - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchPlaylists</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Playlists</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlists in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Playlists</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display playlist details.</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Playlists</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Spotify Generated, Daily Mix</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Playlists that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Daily Mix&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Playlists - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchPlaylists</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># get playlists owned by spotify (e.g. content generated for you).</span>\n    <span class=\"n\">spotifyOwnedPlaylists</span><span class=\"p\">:</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">PlaylistSimplified</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">GetSpotifyOwnedPlaylists</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># sort them by name.</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">spotifyOwnedPlaylists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">spotifyOwnedPlaylists</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display playlist details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Playlists generated for you by Spotify (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">spotifyOwnedPlaylists</span><span class=\"p\">))</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span><span class=\"n\">PlaylistSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">playlist</span> <span class=\"ow\">in</span> <span class=\"n\">spotifyOwnedPlaylists</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">criteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">includeExternal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">searchresponse</span><span class=\"o\">.</span><span class=\"n\">SearchResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SearchShows", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SearchShows", "kind": "function", "doc": "<p>Get Spotify catalog information about Shows that match a keyword string. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>criteria (str):</strong>  Your search query. <br />\nYou can narrow down your search using field filters. <br />\nThe available filters are album, artist, track, year, upc, tag:hipster, tag:new, \nisrc, and genre. Each field filter only applies to certain result types. <br />\nThe artist and year filters can be used while searching albums, artists and tracks.\nYou can filter on a single year or a range (e.g. 1955-1960). <br />\nThe album filter can be used while searching albums and tracks. <br />\nThe genre filter can be used while searching artists and tracks. <br />\nThe isrc and track filters can be used while searching tracks. <br />\nThe upc, tag:new and tag:hipster filters can only be used while searching albums. \nThe tag:new filter will return albums released in the past two weeks and tag:hipster \ncan be used to return only albums with the lowest 10% popularity.</li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  Range: 0 to 1000.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>includeExternal (str):</strong>  If \"audio\" is specified it signals that the client can play externally hosted audio content, and \nmarks the content as playable in the response. By default externally hosted audio content is marked \nas unplayable in the response. <br />\nAllowed values: \"audio\"</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>SearchResponse</code> object that contains the search results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Note that Spotify Web API automatically limits you to 1,000 max entries per type that can\nbe returned with a search.</p>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Shows that match a keyword string.</span>\n    <span class=\"c1\"># note - use an Authorization type of token or the `market` argument for this</span>\n    <span class=\"c1\"># method, otherwise the item result are all null.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Joe Rogan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Shows - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">searchResponse</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchShows</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display search response details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">searchResponse</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># save initial search response total, as search next page response total </span>\n    <span class=\"c1\"># will change with each page retrieved.  this is odd behavior, as it seems</span>\n    <span class=\"c1\"># that the spotify web api is returning a new result set each time rather </span>\n    <span class=\"c1\"># than working off of a cached result set.</span>\n    <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Shows</span><span class=\"o\">.</span><span class=\"n\">Total</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># only display show results for this example.</span>\n        <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">ShowPageSimplified</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Shows</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Shows in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display show details.</span>\n        <span class=\"n\">show</span><span class=\"p\">:</span><span class=\"n\">ShowSimplified</span>\n        <span class=\"k\">for</span> <span class=\"n\">show</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># for testing - don&#39;t return 1000 results!  </span>\n        <span class=\"c1\"># comment the following 3 lines of code if you want ALL results.</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">75</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">*** Stopping paging loop after 75 entries for testing.&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">((</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">):</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">searchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchShows</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Shows that match a keyword string.</span>\n    <span class=\"c1\"># note - use an Authorization type of token or the `market` argument for this</span>\n    <span class=\"c1\"># method, otherwise the item result are all null.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Joe Rogan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Shows - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchShows</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Shows</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Shows in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Shows</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display show details.</span>\n    <span class=\"n\">show</span><span class=\"p\">:</span><span class=\"n\">ShowSimplified</span>\n    <span class=\"k\">for</span> <span class=\"n\">show</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Shows</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">criteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">includeExternal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">searchresponse</span><span class=\"o\">.</span><span class=\"n\">SearchResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SearchTracks", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SearchTracks", "kind": "function", "doc": "<p>Get Spotify catalog information about Tracks that match a keyword string. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>criteria (str):</strong>  Your search query. <br />\nYou can narrow down your search using field filters. <br />\nThe available filters are album, artist, track, year, upc, tag:hipster, tag:new, \nisrc, and genre. Each field filter only applies to certain result types. <br />\nThe artist and year filters can be used while searching albums, artists and tracks.\nYou can filter on a single year or a range (e.g. 1955-1960). <br />\nThe album filter can be used while searching albums and tracks. <br />\nThe genre filter can be used while searching artists and tracks. <br />\nThe isrc and track filters can be used while searching tracks. <br />\nThe upc, tag:new and tag:hipster filters can only be used while searching albums. \nThe tag:new filter will return albums released in the past two weeks and tag:hipster \ncan be used to return only albums with the lowest 10% popularity.</li>\n<li><strong>limit (int):</strong>  The maximum number of items to return in a page of items. <br />\nDefault: 20, Range: 1 to 50.  </li>\n<li><strong>offset (int):</strong>  The page index offset of the first item to return. <br />\nUse with limit to get the next set of items. <br />\nDefault: 0 (the first item).  Range: 0 to 1000.  </li>\n<li><strong>market (str):</strong>  An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that \nis available in that market will be returned.  If a valid user access token is specified \nin the request header, the country associated with the user account will take priority over \nthis parameter. <br />\nNote: If neither market or user country are provided, the content is considered unavailable for the client. <br />\nUsers can view the country that is associated with their account in the account settings. <br />\nExample: <code>ES</code></li>\n<li><strong>includeExternal (str):</strong>  If \"audio\" is specified it signals that the client can play externally hosted audio content, and \nmarks the content as playable in the response. By default externally hosted audio content is marked \nas unplayable in the response. <br />\nAllowed values: \"audio\"</li>\n<li><strong>limitTotal (int):</strong>  The maximum number of items to return for the request. <br />\nIf specified, this argument overrides the limit and offset argument values\nand paging is automatically used to retrieve all available items up to the\nmaximum number specified. <br />\nDefault: None (disabled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A <code>SearchResponse</code> object that contains the search results.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>Note that Spotify Web API automatically limits you to 1,000 max entries per type that can\nbe returned with a search.</p>\n\n<p><details>\n  <summary>Sample Code - Manual Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Tracks that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Flawless&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Tracks - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">searchResponse</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchTracks</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display search response details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">searchResponse</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># save initial search response total, as search next page response total </span>\n    <span class=\"c1\"># will change with each page retrieved.  this is odd behavior, as it seems</span>\n    <span class=\"c1\"># that the spotify web api is returning a new result set each time rather </span>\n    <span class=\"c1\"># than working off of a cached result set.</span>\n    <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">:</span><span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"o\">.</span><span class=\"n\">Total</span>\n\n    <span class=\"c1\"># handle pagination, as spotify limits us to a set # of items returned per response.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># only display track results for this example.</span>\n        <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">TrackPage</span> <span class=\"o\">=</span> <span class=\"n\">searchResponse</span><span class=\"o\">.</span><span class=\"n\">Tracks</span>\n\n        <span class=\"c1\"># for testing - don&#39;t return 1000 results!  </span>\n        <span class=\"c1\"># comment the following 2 lines of code if you want ALL results.</span>\n        <span class=\"k\">if</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span> <span class=\"o\">&gt;</span> <span class=\"mi\">75</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># display paging details.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Tracks in this page of results:&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># display track details.</span>\n        <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n        <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># anymore page results?</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Next</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">((</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">pageObjInitialTotal</span><span class=\"p\">):</span>\n            <span class=\"c1\"># no - all pages were processed.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># yes - retrieve the next page of results.</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Getting next page of </span><span class=\"si\">%d</span><span class=\"s1\"> items ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">))</span>\n            <span class=\"n\">searchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchTracks</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Offset</span> <span class=\"o\">+</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Limit</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details>\n<details>\n  <summary>Sample Code - Auto Paging</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_secret&#39;</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify client credentials access token (no scope, public data use only).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenClientCredentials</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># get Spotify catalog information about Tracks that match a keyword string.</span>\n    <span class=\"n\">criteria</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Parliament Funkadelic&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Searching for Tracks - criteria: &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">criteria</span><span class=\"p\">)</span>\n    <span class=\"n\">pageObj</span><span class=\"p\">:</span><span class=\"n\">SearchResponse</span> <span class=\"o\">=</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SearchTracks</span><span class=\"p\">(</span><span class=\"n\">criteria</span><span class=\"p\">,</span> <span class=\"n\">limitTotal</span><span class=\"o\">=</span><span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display paging details.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Tracks in this page of results (</span><span class=\"si\">%d</span><span class=\"s1\"> items):&#39;</span> <span class=\"o\">%</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"o\">.</span><span class=\"n\">ItemsCount</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># display track details.</span>\n    <span class=\"n\">track</span><span class=\"p\">:</span><span class=\"n\">Track</span>\n    <span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">pageObj</span><span class=\"o\">.</span><span class=\"n\">Tracks</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;- &quot;</span><span class=\"si\">{name}</span><span class=\"s1\">&quot; (</span><span class=\"si\">{uri}</span><span class=\"s1\">)&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">Uri</span><span class=\"p\">))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">criteria</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">market</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">includeExternal</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limitTotal</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">searchresponse</span><span class=\"o\">.</span><span class=\"n\">SearchResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SetAuthTokenAuthorizationCode", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SetAuthTokenAuthorizationCode", "kind": "function", "doc": "<p>Generates a new Authorization Code type of authorization token used to access \nthe Spotify Web API.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>clientId (str):</strong>  The unique identifier of the application.</li>\n<li><strong>clientSecret (str):</strong>  The client secret, which is the key you will use to authorize your Web API or SDK calls.</li>\n<li><strong>scope (str | list[str]):</strong>  A space-delimited list of scope identifiers you wish to request access to. <br />\nIf no scope is specified, authorization will be granted only to access publicly \navailable information; that is, only information normally visible in the Spotify \ndesktop, web, and mobile players. <br />\nDefault is None.</li>\n<li><strong>tokenProfileId (str):</strong>  Profile identifier used when loading / storing the token to disk. <br />\nA null value will default to <code>Shared</code>. <br />\nDefault: <code>Shared</code>               </li>\n<li><strong>forceAuthorize (bool):</strong>  True to force authorization, even if we already have a token. <br />\nThis can be useful if dynamically changing scope. <br />\nDefault is False.</li>\n<li><strong>redirectUriHost (str):</strong>  The value to use for the host portion of the redirect URI. <br />\nDefault is 'localhost'.</li>\n<li><strong>redirectUriPort (int):</strong>  The value to use for the port portion of the redirect URI.  You can specify a\nsingle port as an integer, or a port range as a list (e.g. [8080,8090]).  If a \nport range is specified, then the logic will loop through the port range looking\nfor an available port to use. <br />\nDefault is 8080.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifApiError:</strong>   If the method fails for any reason.</li>\n</ul>\n\n<p>The authorization code flow is suitable for long-running applications (e.g. web and mobile \napps) where the user grants permission only once.  If you are using the authorization code \nflow in a mobile app, or any other type of application where the client secret can't be safely \nstored, then you should use the <code>SetAuthTokenAuthorizationCode</code> method. </p>\n\n<p>This allows you to specify scope values, which allow more granular access to data that\nis not public (e.g. a user's email, playlist, profile, etc).  The user gets final approval\nfor the requested scope(s) when they login to approve the access, as the login form will\nshow what scope they are about to approve.  The user also has the ability to remove the\napplication access at any time, in the event that the client is abusing the given scope\nprivileges.</p>\n\n<p>The authorization flow will attempt to automatically open the Spotify authorization URL\nin a new browser tab (using the default browser).  This will force the user to login to\nSpotify, if not already logged in.  Spotify then displays to the user the requested access \n(scope) that your application is requesting, and allows them to accept / reject it.\nThe flow will start a local web server to listen for the user response to the authorization \nrequest. Once authorization is complete, the Spotify authorization server will redirect the \nuser's browser to the local web server with the response. The web server will get the \nauthorization code from the response and shutdown. The authorization code is then exchanged \nfor a Spotify authorization token.</p>\n\n<p>Note that you must have 'http://localhost:8080/' in the Redirect URI allowlist that you \nspecified when you registered your application in the Spotify Developer Portal.  The\nredirect URI is case-sensitive, and must contain the trailing slash.  You will need to\nadjust the redirect URI value if you specify custom values using the <code>redirectUriHost</code>\nand <code>redirectUriPort</code> arguments.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">clientId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clientSecret</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">scope</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenProfileId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">forceAuthorize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">redirectUriHost</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;localhost&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">redirectUriPort</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8080</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SetAuthTokenAuthorizationCodePKCE", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SetAuthTokenAuthorizationCodePKCE", "kind": "function", "doc": "<p>Generates a new Authorization Code PKCE type of authorization token used to access \nthe Spotify Web API.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>clientId (str):</strong>  The unique identifier of the application.</li>\n<li><strong>scope (str | list[str]):</strong>  A space-delimited list of scope identifiers you wish to request access to. <br />\nIf no scope is specified, authorization will be granted only to access publicly \navailable information; that is, only information normally visible in the Spotify \ndesktop, web, and mobile players. <br />\nDefault is None.</li>\n<li><strong>tokenProfileId (str):</strong>  Profile identifier used when loading / storing the token to disk. <br />\nA null value will default to <code>Shared</code>. <br />\nDefault: <code>Shared</code>               </li>\n<li><strong>forceAuthorize (bool):</strong>  True to force authorization, even if we already have a token. <br />\nThis can be useful if dynamically changing scope. <br />\nDefault is False.</li>\n<li><strong>redirectUriHost (str):</strong>  The value to use for the host portion of the redirect URI. <br />\nDefault is 'localhost'.</li>\n<li><strong>redirectUriPort (int):</strong>  The value to use for the port portion of the redirect URI.  You can specify a\nsingle port as an integer, or a port range as a list (e.g. [8080,8090]).  If a \nport range is specified, then the logic will loop through the port range looking\nfor an available port to use. <br />\nDefault is 8080.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifApiError:</strong>   If the method fails for any reason.</li>\n</ul>\n\n<p>The authorization code with PKCE is the recommended authorization type if you are \nimplementing authorization in a mobile app, single page web app, or any other type of \napplication where the client secret can't be safely stored.</p>\n\n<p>This allows you to specify scope values, which allow more granular access to data that\nis not public (e.g. a user's email, playlist, profile, etc).  The user gets final approval\nfor the requested scope(s) when they login to approve the access, as the login form will\nshow what scope they are about to approve.  The user also has the ability to remove the\napplication access at any time, in the event that the client is abusing the given scope\nprivileges.</p>\n\n<p>The authorization flow will attempt to automatically open the Spotify authorization URL\nin a new browser tab (using the default browser).  This will force the user to login to\nSpotify, if not already logged in.  Spotify then displays to the user the requested access \n(scope) that your application is requesting, and allows them to accept / reject it.\nThe flow will start a local web server to listen for the user response to the authorization \nrequest. Once authorization is complete, the Spotify authorization server will redirect the \nuser's browser to the local web server with the response. The web server will get the \nauthorization code from the response and shutdown. The authorization code is then exchanged \nfor a Spotify authorization token.</p>\n\n<p>Note that you must have 'http://localhost:8080/' in the Redirect URI allowlist that you \nspecified when you registered your application in the Spotify Developer Portal.  The\nredirect URI is case-sensitive, and must contain the trailing slash.  You will need to\nadjust the redirect URI value if you specify custom values using the <code>redirectUriHost</code>\nand <code>redirectUriPort</code> arguments.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">clientId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">scope</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokenProfileId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">forceAuthorize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">redirectUriHost</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;localhost&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">redirectUriPort</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8080</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SetAuthTokenClientCredentials", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SetAuthTokenClientCredentials", "kind": "function", "doc": "<p>Generates a new client credentials type of authorization token used to access \nthe Spotify Web API.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>clientId (str):</strong>  The unique identifier of the application.</li>\n<li><strong>clientSecret (str):</strong>  The application's secret key, used to authorize your Web API or SDK calls.</li>\n<li><strong>tokenProfileId (str):</strong>  Profile identifier used when loading / storing the token to disk. <br />\nA null value will default to <code>Shared</code>. <br />\nDefault: <code>Shared</code>               </li>\n</ul>\n\n<p>The Client Credentials flow is used in server-to-server authentication. Since this flow does\nnot include authorization, only endpoints that do not access user information can be accessed.</p>\n\n<p>There is also no persistant token storage, as a new token is retrieved when this method\nis called initially, and when the token needs to be refreshed.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">clientId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">clientSecret</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tokenProfileId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.SetAuthTokenFromToken", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.SetAuthTokenFromToken", "kind": "function", "doc": "<p>Uses an OAuth2 authorization token that was generated from an external provider to access \nthe Spotify Web API.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>clientId (str):</strong>  The unique identifier of the application.</li>\n<li><strong>token (dict):</strong>  A dictionary object that contains OAuth2 token data.</li>\n<li><strong>tokenProfileId (str):</strong>  Profile identifier used when loading / storing the token to disk. <br />\nA null value will default to <code>Shared</code>. <br />\nDefault: <code>Shared</code>               </li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifApiError:</strong>   If the method fails for any reason.  </li>\n</ul>\n\n<p>Make sure you have the <code>tokenUpdater</code> argument supplied on the class constructor so that\ntoken updates are passed on to the external provider.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">clientId</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">tokenProfileId</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.ToString", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.UnfollowArtists", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.UnfollowArtists", "kind": "function", "doc": "<p>Remove the current user as a follower of one or more artists.</p>\n\n<p>This method requires the <code>user-follow-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of Spotify artist IDs. <br />\nA maximum of 50 IDs can be sent in one request.\nExample: <code>2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No exception is raised if a specified artist id is not being followed.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove the current user as a follower of one or more artists.</span>\n    <span class=\"n\">ids</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Stop following these artists:</span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UnfollowArtists</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Success - artists are now unfollowed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.UnfollowPlaylist", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.UnfollowPlaylist", "kind": "function", "doc": "<p>Remove the current user as a follower of a playlist.</p>\n\n<p>This method requires the <code>playlist-modify-public</code> and <code>playlist-modify-private</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>playlistId (str):</strong>    The Spotify ID of the playlist. <br />\nExample: <code>3cEYpjA9oz9GiPac4AsH4n</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-read&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-library-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-private&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;playlist-modify-public&#39;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove the current user as a follower of a playlist.</span>\n    <span class=\"n\">playlistId</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;3cEYpjA9oz9GiPac4AsH4n&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Unfollowing playlist id &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot; ...&#39;</span> <span class=\"o\">%</span> <span class=\"n\">playlistId</span><span class=\"p\">)</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UnfollowPlaylist</span><span class=\"p\">(</span><span class=\"n\">playlistId</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Success - playlist is now unfollowed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">playlistId</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifyclient.SpotifyClient.UnfollowUsers", "modulename": "spotifywebapipython.spotifyclient", "qualname": "SpotifyClient.UnfollowUsers", "kind": "function", "doc": "<p>Remove the current user as a follower of one or more users.</p>\n\n<p>This method requires the <code>user-follow-modify</code> scope.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ids (str):</strong>    A comma-separated list of Spotify user IDs. <br />\nA maximum of 50 IDs can be sent in one request.\nExample: <code>smedjan</code></li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SpotifyWebApiError:</strong>   If the Spotify Web API request was for a non-authorization service \nand the response contains error information.</li>\n<li><strong>SpotifApiError:</strong>   If the method fails for any other reason.</li>\n</ul>\n\n<p>No exception is raised if a specified user id is not being followed.</p>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># this sample requires an authorization token, as it requires security scope to accesses user data.</span>\n\n    <span class=\"n\">CLIENT_ID</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;your_client_id&#39;</span>\n    <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">:</span><span class=\"nb\">list</span> <span class=\"o\">=</span> \\\n    <span class=\"p\">[</span>\n        <span class=\"s1\">&#39;user-follow-modify&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;user-read-email&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># create new spotify client instance.</span>\n    <span class=\"n\">spotify</span><span class=\"p\">:</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyClient</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># generate a spotify authorization code with PKCE access token (with scope, private and public data use).</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">SetAuthTokenAuthorizationCodePKCE</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">SPOTIFY_SCOPES</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Auth Token:</span><span class=\"se\">\\n</span><span class=\"s1\"> Type=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> Scope=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">AuthorizationType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">AuthToken</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">User:</span><span class=\"se\">\\n</span><span class=\"s1\"> DisplayName=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\"> EMail=&quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">DisplayName</span><span class=\"p\">,</span> <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UserProfile</span><span class=\"o\">.</span><span class=\"n\">EMail</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># remove the current user as a follower of one or more users.</span>\n    <span class=\"n\">ids</span><span class=\"p\">:</span><span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;smedjan&#39;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">Stop following this user(s):</span><span class=\"se\">\\n</span><span class=\"s1\">- </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">- &#39;</span><span class=\"p\">)))</span>\n    <span class=\"n\">spotify</span><span class=\"o\">.</span><span class=\"n\">UnfollowUsers</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Success - user(s) is now unfollowed&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;** Exception: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifydiscovery", "modulename": "spotifywebapipython.spotifydiscovery", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.spotifydiscovery.SpotifyDiscovery", "modulename": "spotifywebapipython.spotifydiscovery", "qualname": "SpotifyDiscovery", "kind": "class", "doc": "<p>This class contains methods used to dicover Spotify Connect devices on a local\nnetwork.  The ZeroConf (aka MDNS, etc) service is used to detect devices,\nand adds them to a device list as they are discovered.</p>\n\n<p>Click the <strong>Sample Code</strong> links in the individual methods for sample code examples.</p>\n"}, {"fullname": "spotifywebapipython.spotifydiscovery.SpotifyDiscovery.__init__", "modulename": "spotifywebapipython.spotifydiscovery", "qualname": "SpotifyDiscovery.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>spotifyClient (SpotifyClient):</strong>  A SpotifyClient instance that will be used to verify discovered devices. <br />\nThis can be null if the areDevicesVerified argument is False. <br />\nThis argument is required if the areDevicesVerified argument is True.  </li>\n<li><strong>areDevicesVerified (bool):</strong>  True to create a <code>SpotifyClient</code> instance for discovered devices, which\nverifies that the device can be accessed and basic information obtained \nabout its capabilities; otherwise, False to just identify the IPV4 Address, \nPort, and Device Name. <br />\nDefault is False.</li>\n<li><strong>printToConsole (bool):</strong>  True to print discovered device information to the console as the devices\nare discovered; otherwise, False to not print anything to the console.\nDefault is False.</li>\n</ul>\n\n<p>Specify False for the <code>areDevicesVerified</code> argument if you want to speed up\ndevice discovery, as it takes extra time to verify device connections as they \nare discovered.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">spotifyClient</span><span class=\"p\">:</span> <span class=\"n\">spotifywebapipython</span><span class=\"o\">.</span><span class=\"n\">spotifyclient</span><span class=\"o\">.</span><span class=\"n\">SpotifyClient</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">areDevicesVerified</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">printToConsole</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "spotifywebapipython.spotifydiscovery.SpotifyDiscovery.AreDevicesVerified", "modulename": "spotifywebapipython.spotifydiscovery", "qualname": "SpotifyDiscovery.AreDevicesVerified", "kind": "variable", "doc": "<p>Determines if a <code>Device</code> object is created for devices that are\ndiscovered.  This property is set by what is passed to the class constructor.</p>\n\n<p>If False, then the <code>VerifiedDevices</code> property will be empty;</p>\n\n<p>If True, then the <code>VerifiedDevices</code> property will contain a <code>Device</code>\ninstance for each device that was detected as part of the discovery process\nand was found in the Spotify User's player devices list.</p>\n", "annotation": ": bool"}, {"fullname": "spotifywebapipython.spotifydiscovery.SpotifyDiscovery.DiscoveredDeviceNames", "modulename": "spotifywebapipython.spotifydiscovery", "qualname": "SpotifyDiscovery.DiscoveredDeviceNames", "kind": "variable", "doc": "<p>A dictionary of discovered device names that were detected by the discovery process.</p>\n\n<p>Dictionary keys will be in the form of \"address:port\", where \"address\" is the device\nipv4 address and the \"port\" is the ipv4 port number the Spotify Connect device\nis listening on.</p>\n\n<p>Dictionary values will be the device names (e.g. \"Web Player (Chrome)\", etc.).  This SHOULD\nmatch the name of the device as displayed in the Spotify App, but is not guaranteed.</p>\n", "annotation": ": dict"}, {"fullname": "spotifywebapipython.spotifydiscovery.SpotifyDiscovery.VerifiedDevices", "modulename": "spotifywebapipython.spotifydiscovery", "qualname": "SpotifyDiscovery.VerifiedDevices", "kind": "variable", "doc": "<p>A dictionary of discovered <code>Device</code> instances that were detected on the network.</p>\n\n<p>This property is only populated if the <code>AreDevicesVerified</code> property is True.</p>\n\n<p>Dictionary keys will be in the form of \"address:port\", where \"address\" is the device\nipv4 address and the \"port\" is the ipv4 port number the Spotify Connect device\nis listening on.</p>\n\n<p>Dictionary values will be <code>Device</code> instances that represent the discovered\ndevice.</p>\n", "annotation": ": dict"}, {"fullname": "spotifywebapipython.spotifydiscovery.SpotifyDiscovery.DiscoverDevices", "modulename": "spotifywebapipython.spotifydiscovery", "qualname": "SpotifyDiscovery.DiscoverDevices", "kind": "function", "doc": "<p>Discover Spotify Connect devices on the local network via the \nZeroConf (aka MDNS) service.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>timeout (int):</strong>   Maximum amount of time to wait (in seconds) for the \ndiscovery to complete. <br />\nDefault is 5 seconds.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of discovered <code>SpotifyClient</code> objects.</p>\n</blockquote>\n\n<p><details>\n  <summary>Sample Code</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">spotifywebapipython</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Test Starting</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># create a new instance of the discovery class.</span>\n    <span class=\"c1\"># we will verify device connections, as well as print device details</span>\n    <span class=\"c1\"># to the console as they are discovered.</span>\n    <span class=\"n\">discovery</span><span class=\"p\">:</span><span class=\"n\">SpotifyDiscovery</span> <span class=\"o\">=</span> <span class=\"n\">SpotifyDiscovery</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">printToConsole</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># discover Spotify Connect devices on the network, waiting up to </span>\n    <span class=\"c1\"># 5 seconds for all devices to be discovered.</span>\n    <span class=\"n\">discovery</span><span class=\"o\">.</span><span class=\"n\">DiscoverDevices</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># print all discovered devices.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">discovery</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)))</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n    <span class=\"k\">raise</span>\n\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">Tests Completed&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p></details></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifydiscovery.SpotifyDiscovery.ToString", "modulename": "spotifywebapipython.spotifydiscovery", "qualname": "SpotifyDiscovery.ToString", "kind": "function", "doc": "<p>Returns a displayable string representation of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>includeItems (bool):</strong>  True to include all items in the list; otherwise False to only\ninclude the base list.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">includeItems</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError", "kind": "class", "doc": "<p>Exception thrown when a Spotify Web API Authentication Error occurs.</p>\n\n<p>Whenever the application makes requests related to authentication or authorization to Web API, \nsuch as retrieving an access token or refreshing an access token, the error response follows \nRFC 6749 on the OAuth 2.0 Authorization Framework.</p>\n", "bases": "builtins.Exception"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError.__init__", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>error (str):</strong>  A high level description of the error as specified in RFC 6749 Section 5.2.</li>\n<li><strong>errorDescription (str):</strong>  A more detailed description of the error as specified in RFC 6749 Section 4.1.2.1.</li>\n<li><strong>methodName (str):</strong>  Name of the client method that executed the request.</li>\n<li><strong>httpStatus (str):</strong>  HTTP status code for the error.</li>\n<li><strong>httpReason (str):</strong>  HTTP reason code for the error.</li>\n<li><strong>logsi (SISession):</strong>  Trace session object that this exception will be logged to, or null to bypass trace logging. <br />\nDefault is None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">errorDescription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">methodName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">httpStatus</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">httpReason</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">logsi</span><span class=\"p\">:</span> <span class=\"n\">smartinspectpython</span><span class=\"o\">.</span><span class=\"n\">sisession</span><span class=\"o\">.</span><span class=\"n\">SISession</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError.Error", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError.Error", "kind": "variable", "doc": "<p>A high level description of the error as specified in RFC 6749 Section 5.2.</p>\n\n<p>Example: <code>invalid_client</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError.ErrorDescription", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError.ErrorDescription", "kind": "variable", "doc": "<p>Message text, as reported by the element text of the error xml response.</p>\n\n<p>Example: <code>Invalid client secret</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError.HttpReason", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError.HttpReason", "kind": "variable", "doc": "<p>HTTP reason code for the error.</p>\n\n<p>Example: <code>Bad Request</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError.HttpStatus", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError.HttpStatus", "kind": "variable", "doc": "<p>HTTP status code for the error.</p>\n\n<p>Example: <code>400</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError.MethodName", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError.MethodName", "kind": "variable", "doc": "<p>The method being executed when the error occured.</p>\n\n<p>Example: <code>GetArtist</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifywebapiauthenticationerror.SpotifyWebApiAuthenticationError.ToString", "modulename": "spotifywebapipython.spotifywebapiauthenticationerror", "qualname": "SpotifyWebApiAuthenticationError.ToString", "kind": "function", "doc": "<p>Returns a UI-friendly string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "spotifywebapipython.spotifywebapierror", "modulename": "spotifywebapipython.spotifywebapierror", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "spotifywebapipython.spotifywebapierror.SpotifyWebApiError", "modulename": "spotifywebapipython.spotifywebapierror", "qualname": "SpotifyWebApiError", "kind": "class", "doc": "<p>Exception thrown when a Spotify Web API Regular Error occurs.</p>\n", "bases": "builtins.Exception"}, {"fullname": "spotifywebapipython.spotifywebapierror.SpotifyWebApiError.__init__", "modulename": "spotifywebapipython.spotifywebapierror", "qualname": "SpotifyWebApiError.__init__", "kind": "function", "doc": "<p>Initializes a new instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>status (int):</strong>  HTTP status code that is also returned in the response header. <br />\nFor further information, see Response Status Codes.</li>\n<li><strong>message (str):</strong>  A short description of the cause of the error.</li>\n<li><strong>methodName (str):</strong>  Name of the client method that executed the request.</li>\n<li><strong>reason (str):</strong>  HTTP reason code for the error.</li>\n<li><strong>logsi (SISession):</strong>  Trace session object that this exception will be logged to, or null to bypass trace logging. <br />\nDefault is None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">methodName</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">logsi</span><span class=\"p\">:</span> <span class=\"n\">smartinspectpython</span><span class=\"o\">.</span><span class=\"n\">sisession</span><span class=\"o\">.</span><span class=\"n\">SISession</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "spotifywebapipython.spotifywebapierror.SpotifyWebApiError.HttpReason", "modulename": "spotifywebapipython.spotifywebapierror", "qualname": "SpotifyWebApiError.HttpReason", "kind": "variable", "doc": "<p>HTTP reason code for the error.</p>\n\n<p>Example: <code>Bad Request</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifywebapierror.SpotifyWebApiError.Message", "modulename": "spotifywebapipython.spotifywebapierror", "qualname": "SpotifyWebApiError.Message", "kind": "variable", "doc": "<p>A short description of the cause of the error.</p>\n\n<p>Example: <code>invalid id</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifywebapierror.SpotifyWebApiError.MethodName", "modulename": "spotifywebapipython.spotifywebapierror", "qualname": "SpotifyWebApiError.MethodName", "kind": "variable", "doc": "<p>The method being executed when the error occured.</p>\n\n<p>Example: <code>GetArtist</code>.</p>\n", "annotation": ": str"}, {"fullname": "spotifywebapipython.spotifywebapierror.SpotifyWebApiError.Status", "modulename": "spotifywebapipython.spotifywebapierror", "qualname": "SpotifyWebApiError.Status", "kind": "variable", "doc": "<p>HTTP status code that is also returned in the response header. <br />\nFor further information, see Response Status Codes.</p>\n\n<p>Example: <code>400</code></p>\n", "annotation": ": int"}, {"fullname": "spotifywebapipython.spotifywebapierror.SpotifyWebApiError.ToString", "modulename": "spotifywebapipython.spotifywebapierror", "qualname": "SpotifyWebApiError.ToString", "kind": "function", "doc": "<p>Returns a UI-friendly string representation of the class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();